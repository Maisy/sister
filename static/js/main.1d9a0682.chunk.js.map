{"version":3,"sources":["section/in/TabPanel.js","section/in/InputText.js","section/in/templateTab/index.js","section/in/sourceTab/DataAddButton.js","section/in/sourceTab/TableData.js","section/in/sourceTab/TableDataList.js","section/in/sourceTab/index.js","section/in/emailEquipInfoTab/UserEmails.js","section/in/emailEquipInfoTab/EquipInfos.js","section/in/emailEquipInfoTab/index.js","section/in/InputPages.js","section/in/InputContents.js","section/out/ViewText.js","section/out/PivotTable.js","section/out/ViewSet.js","section/out/CopyButton.js","section/out/Receiver.js","section/out/ViewContents.js","resource/sample.js","store/modules/contents.js","store/modules/basicInfos.js","components/RunButton.js","components/ImportButton.js","utils/file.js","components/ExportButton.js","utils/date.js","components/ExternalButtonGroup.js","section/Layout.js","App.js","serviceWorker.js","store/modules/testAction.js","store/modules/index.js","store/index.js","index.js"],"names":["TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","useStyles","makeStyles","theme","root","margin","spacing","width","InputText","defautRows","name","onChanged","classes","TextField","key","multiline","variant","className","rows","label","onChange","event","target","console","error","React","memo","setInputData","useSelector","contents","preTextSchema","postTextSchema","tableColumnsLabel","tableRowsLabel","useState","templateData","setTemplateData","useEffect","setDataCB","data","val","TableDataAddButton","onClick","Button","color","useStyle","textAlign","border","padding","TableData","defaultData","defaultRows","setTableRows","setTableData","deleteCallback","IconButton","aria-label","size","edge","e","dataList","setDataList","deleteDataFunc","idx","filter","map","updated","updatedRow","concat","length","prev","next","SourceInput","state","storeVariables","variables","storeTextData","textData","storeTableData","tableSetList","tableData","setVariables","sourceData","setSourceData","UserEmails","mailValue","basicInfo","userEmails","setValue","equipInfos","equipColumns","attrs","setAttrs","setData","heading","fontSize","typography","pxToRem","secondaryHeading","palette","text","secondary","EmailEquipInfoTab","expanded","setExpanded","handleChange","panel","isExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","flexGrow","tab","a11yProps","InputPages","tabIdx","setTabIdx","Tabs","newValue","Tab","paper","minHeight","InputContents","Paper","ViewText","split","line","splitTextNewLine","styles","table","height","borderCollapse","th","backgroundColor","fontWeight","td","first","emphasis","splitWithTrim","d","warn","str","trim","PivotTable","tableRowIndexPerWeek","rowsStr","columnsStr","rowsLabel","columnsLabel","pivotData","origin","result","log","Object","keys","forEach","dataKey","push","weekColumnList","weekIdx","keyNm","Array","isArray","rowNameIdx","keyIdx","pivot","style","columnName","arr","thStyle","row","rowIdx","columnItem","colIdx","tdStyle","ViewSet","inputData","preText","postText","clickButton","targetId","preventDefault","alert","listener","clipboardData","innerHTML","__proto__","document","addEventListener","execCommand","removeEventListener","copyToClip","getElementById","CopyButton","keyId","receiverList","receiver","join","fontFamily","disabledPaper","ViewContents","store","classNames","shouldSend","emailId","ContentsActions","setTemplate","createAction","setTableDataSet","list","importContentsData","exportContentsData","parseData","initialState","Sample","fileData","parseText","template","rst","variable","regex","RegExp","replace","handleActions","action","payload","produce","draft","pre_text","post_text","table_columns_label","table_rows_label","source_variables","source_data","assign","table_data_rows1","table_data_week1","table_data_week2","table_data_rows2","table_data_week3","table_data_rows3","table_data_set","templateRowsLabel","dataRowsLabel","tableDataRows","indexOf","lastWeekKey","tableDataPerKey","tableSet","reduce","dataPerKey","nextData","weekTotal","machineList","weekKey","machineData","machineId","col","machineID","shouldSendMailMap","Boolean","getTableDataPerMachine","variableList","textDataList","getEmailId","dataRow","mailKey","StaticActions","setBasicInfo","getReceiver","importEmailData","exportEmailData","email","equip_info_data","equip_info_columns","userMailMap","userInfo","getUserMails","nameList","equipReceiverMap","info","infoObj","minWidth","RunButton","dispatch","useDispatch","display","alignItems","input","button","marginRight","importActions","fileName","setFileName","type","accept","fileList","files","evt","callBack","reader","FileReader","f","onload","JSON","parse","readAsText","loadJsonFile","htmlFor","ExportButton","save","setSave","contentsFileData","staticFileData","filename","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","saveFile","date","year","getFullYear","month","getMonth","day","getDate","getFormatDate","Date","stringify","borderRadius","justifyContent","importButton","ExternalButtonGroup","Layout","setInputCallback","useCallback","Grid","container","item","xs","sm","md","App","window","location","hostname","match","combineReducers","contentsReducers","basicInfoReducers","test","TestReducers","logger","createLogger","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d9a0682.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`input-tabpanel-${index}`}\n      aria-labelledby={`input-tab-${index}`}\n      {...other}\n    >\n      {/* 최초 한번에 다 렌더링 */}\n      <Box p={3}>{children}</Box>\n      {/* 클릭할때마다 렌더링 */}\n      {/* {value === index && <Box  p={3}>{children}</Box>} */}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: `${theme.spacing(1)}px 0`,\n    width: '100%',\n  },\n}));\n\nfunction InputText({ defautRows = 4, name, onChanged, value }) {\n  // console.log(`render input text...${name}`);\n  const classes = useStyles();\n  const handleOnChange = (event) => {\n    if (typeof onChanged !== 'function') {\n      console.error('onChanged is not function');\n      return;\n    }\n\n    onChanged(event.target.value);\n  };\n\n  return (\n    <TextField\n      key={name}\n      multiline\n      variant=\"outlined\"\n      className={classes.root}\n      rows={defautRows}\n      name={name}\n      label={name}\n      value={value}\n      onChange={handleOnChange}\n    />\n  );\n}\nexport default InputText;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport InputText from '../InputText';\n\nfunction Template({ setInputData }) {\n  const {\n    preTextSchema,\n    postTextSchema,\n    tableColumnsLabel,\n    tableRowsLabel,\n  } = useSelector(({ contents }) => contents);\n\n  const [templateData, setTemplateData] = useState({});\n\n  useEffect(() => {\n    setTemplateData({\n      preTextSchema,\n      postTextSchema,\n      tableColumnsLabel,\n      tableRowsLabel,\n    });\n  }, [preTextSchema, postTextSchema, tableColumnsLabel, tableRowsLabel]);\n\n  const setDataCB = (key, value) => {\n    setTemplateData((data) => ({\n      ...data,\n      [key]: value,\n    }));\n    setInputData(key, value);\n  };\n\n  return (\n    <div>\n      <InputText\n        name=\"Pre Text\"\n        value={templateData['preTextSchema']}\n        onChanged={(val) => {\n          setDataCB('preTextSchema', val);\n        }}\n      ></InputText>\n      <InputText\n        name=\"[Table] Column Name\"\n        defautRows={1}\n        value={templateData['tableColumnsLabel']}\n        onChanged={(val) => {\n          setDataCB('tableColumnsLabel', val);\n        }}\n      ></InputText>\n      <InputText\n        name=\"[Table] Rows Name\"\n        defautRows={1}\n        value={templateData['tableRowsLabel']}\n        onChanged={(val) => {\n          setDataCB('tableRowsLabel', val);\n        }}\n      ></InputText>\n      <InputText\n        name=\"Post Text\"\n        value={templateData['postTextSchema']}\n        onChanged={(val) => {\n          setDataCB('postTextSchema', val);\n        }}\n      ></InputText>\n    </div>\n  );\n}\n\nexport default React.memo(Template);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: { width: '100%' },\n});\n\nexport default function TableDataAddButton({ onClick }) {\n  const classes = useStyles();\n  return (\n    <Button\n      className={classes.root}\n      variant=\"outlined\"\n      color=\"primary\"\n      onClick={onClick}\n    >\n      Add Table Data Rows\n    </Button>\n  );\n}\n","import React from 'react';\nimport InputText from '../InputText';\nimport { makeStyles, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Clear';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    textAlign: 'right',\n    // backgroundColor: '#dbdbdb',\n    border: '2px dashed rgba(0, 0, 0, 0.23)',\n    padding: `4px 8px 8px 8px`,\n    margin: `${theme.spacing(2)}px 0`,\n  },\n}));\n\nexport default function TableData({\n  // dataIdx,\n  name,\n  defaultData = [],\n  defaultRows = [],\n  setTableRows,\n  setTableData,\n  deleteCallback,\n}) {\n  const classes = useStyle();\n  return (\n    <div className={classes.root}>\n      {/* {dataIdx} */}\n      <IconButton\n        aria-label=\"delete\"\n        size=\"small\"\n        edge=\"end\"\n        onClick={(e) => deleteCallback()}\n      >\n        <DeleteIcon></DeleteIcon>\n      </IconButton>\n      <InputText\n        name={`[${name}] Table Data Rows`}\n        defautRows={1}\n        value={defaultRows}\n        onChanged={(data) => setTableRows(data)}\n      ></InputText>\n      <InputText\n        name={`[${name}] Table Data`}\n        defautRows={6}\n        value={defaultData}\n        onChanged={(data) => setTableData(data)}\n      ></InputText>\n    </div>\n  );\n}\n","import React from 'react';\nimport TableDataAddButton from './DataAddButton';\nimport TableData from './TableData';\n\nfunction TableDataList({ value: dataList, onChanged: setDataList }) {\n  const addDataFunc = () => {\n    setDataList(\n      dataList.concat({\n        id: dataList.length,\n        defaultData: [],\n        defaultRows: [],\n      }),\n    );\n  };\n\n  const deleteDataFunc = (idx) => () => {\n    setDataList(\n      dataList\n        .filter((data) => data.id !== idx)\n        .map((data, idx) => ({ ...data, id: idx })),\n    );\n  };\n\n  const setTableData = (idx) => (updated) => {\n    setDataList(\n      dataList.map((data) =>\n        data.id === idx\n          ? {\n              ...data,\n              defaultData: updated,\n            }\n          : data,\n      ),\n    );\n  };\n  const setTableRows = (idx) => (updatedRow) => {\n    setDataList(\n      dataList.map((data) =>\n        data.id === idx ? { ...data, defaultRows: updatedRow } : data,\n      ),\n    );\n  };\n\n  // console.log('render table data...');\n\n  return (\n    <div>\n      {dataList.map(({ id, defaultData, defaultRows }, idx) => {\n        return (\n          <TableData\n            key={id + '' + idx}\n            name={`WEEK ${idx + 1}`}\n            defaultRows={defaultRows}\n            setTableRows={setTableRows(idx)}\n            defaultData={defaultData}\n            setTableData={setTableData(idx)}\n            deleteCallback={deleteDataFunc(idx)}\n          />\n        );\n      })}\n      <TableDataAddButton onClick={addDataFunc}>ADD</TableDataAddButton>\n    </div>\n  );\n}\nexport default React.memo(TableDataList, (prev, next) => {\n  return prev.value === next.value;\n});\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport InputText from '../InputText';\nimport TableDataList from './TableDataList';\n\nfunction SourceInput({ setInputData }) {\n  const {\n    variables: storeVariables,\n    textData: storeTextData,\n    tableSetList: storeTableData,\n  } = useSelector((state) => state.contents);\n\n  const [tableData, setTableData] = useState([]);\n  const [variables, setVariables] = useState('');\n  const [sourceData, setSourceData] = useState('');\n\n  useEffect(() => {\n    setVariables(storeVariables);\n  }, [storeVariables]);\n\n  useEffect(() => {\n    setSourceData(storeTextData);\n  }, [storeTextData]);\n\n  useEffect(() => {\n    setTableData(storeTableData);\n  }, [storeTableData]);\n\n  return (\n    <div>\n      <InputText\n        name=\"Variables in text\"\n        defautRows={1}\n        value={variables}\n        onChanged={(value) => {\n          setVariables(value);\n          setInputData('variables', value);\n        }}\n      ></InputText>\n      <InputText\n        name=\"Data for variables\"\n        defautRows={6}\n        value={sourceData}\n        onChanged={(value) => {\n          setSourceData(value);\n          setInputData('textData', value);\n        }}\n      ></InputText>\n      <TableDataList\n        value={tableData}\n        onChanged={(value) => {\n          setTableData(value);\n          setInputData('tableSetList', value);\n        }}\n      ></TableDataList>\n    </div>\n  );\n}\n\nexport default SourceInput;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport InputText from '../InputText';\n\nfunction UserEmails({ onChanged }) {\n  const mailValue = useSelector(({ basicInfo }) => basicInfo.userEmails);\n\n  const [value, setValue] = useState('');\n\n  useEffect(() => {\n    setValue(mailValue);\n  }, [mailValue]);\n\n  return (\n    <InputText\n      name=\"Emails\"\n      defautRows={10}\n      value={value}\n      onChanged={(value) => {\n        setValue(value);\n        onChanged('userEmails', value);\n      }}\n    ></InputText>\n  );\n}\n\nexport default UserEmails;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport InputText from '../InputText';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nfunction EquipInfos({ onChanged }) {\n  const classes = useStyles();\n  const { equipInfos, equipColumns } = useSelector(\n    ({ basicInfo }) => basicInfo,\n  );\n\n  const [attrs, setAttrs] = useState('');\n  const [data, setData] = useState('');\n\n  useEffect(() => {\n    setAttrs(equipColumns);\n  }, [equipColumns]);\n\n  useEffect(() => {\n    setData(equipInfos);\n  }, [equipInfos]);\n\n  // console.log('equip info expander render...');\n\n  return (\n    <div className={classes.root}>\n      <InputText\n        name=\"Equipment Attributes\"\n        defautRows={1}\n        value={attrs}\n        onChanged={(value) => {\n          setAttrs(value);\n          onChanged('equipColumns', value);\n        }}\n      ></InputText>\n      <InputText\n        name=\"Equipment Data\"\n        defautRows={10}\n        value={data}\n        onChanged={(value) => {\n          setData(value);\n          onChanged('equipInfos', value);\n        }}\n      ></InputText>\n    </div>\n  );\n}\n\nexport default React.memo(EquipInfos);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport UserEmails from './UserEmails';\nimport EquipInfos from './EquipInfos';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function EmailEquipInfoTab({ setInputData }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState('panel1');\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading}>User Emails</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <UserEmails onChanged={setInputData}></UserEmails>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}>\n            Equipment Informations\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <EquipInfos onChanged={setInputData}></EquipInfos>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TabPanel from './TabPanel';\nimport TemplateTab from './templateTab';\nimport SourceTab from './sourceTab';\nimport EmailEquipInfoTab from './emailEquipInfoTab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  tab: {},\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `input-tab-${index}`,\n    'aria-controls': `input-tabpanel-${index}`,\n  };\n}\n\nexport default function InputPages(props) {\n  const classes = useStyles();\n  const [tabIdx, setTabIdx] = React.useState(2);\n\n  const handleChange = (event, newValue) => {\n    setTabIdx(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        variant=\"fullWidth\"\n        value={tabIdx}\n        onChange={handleChange}\n        aria-label=\"input data tabs\"\n      >\n        <Tab label=\"Email\" className={classes.tab} {...a11yProps(0)} />\n        <Tab label=\"Template\" className={classes.tab} {...a11yProps(1)} />\n        <Tab label=\"Source Data\" className={classes.tab} {...a11yProps(2)} />\n      </Tabs>\n      <TabPanel value={tabIdx} index={0}>\n        <EmailEquipInfoTab {...props}></EmailEquipInfoTab>\n      </TabPanel>\n      <TabPanel value={tabIdx} index={1}>\n        <TemplateTab {...props}></TemplateTab>\n      </TabPanel>\n      <TabPanel value={tabIdx} index={2}>\n        <SourceTab {...props}></SourceTab>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport InputPages from './InputPages';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    minHeight: 640,\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function InputContents(props) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <InputPages {...props}></InputPages>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '20px 0 20px 0',\n    textAlign: 'left',\n  },\n}));\n\nconst splitTextNewLine = function(data = '') {\n  return data.split('\\n').map((line, idx) => {\n    return (\n      <span key={idx}>\n        {line}\n        <br />\n      </span>\n    );\n  });\n};\n\nexport default function ViewText({ data }) {\n  const classes = useStyles();\n\n  return <div className={classes.root}>{splitTextNewLine(data)}</div>;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst styles = {\n  table: {\n    margin: '20px 0',\n    width: '350px',\n    height: 200,\n    fontSize: '10pt',\n    border: '1px solid black',\n    borderCollapse: 'collapse',\n  },\n  th: {\n    backgroundColor: '#e6e6e6',\n    border: '1px solid #444444',\n    padding: '5px 10px',\n    // padding: 0,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  td: {\n    border: '1px solid #444444',\n    padding: '5px 10px',\n    // padding: 0,\n    textAlign: 'center',\n  },\n  first: {\n    textAlign: 'left',\n  },\n  emphasis: {\n    color: 'red',\n    fontWeight: 'bold',\n  },\n};\n\nconst pivot = (rowsLabel, origin) => {\n  const result = [];\n  if (rowsLabel.length === 0) {\n    console.log('rows label is empty.');\n    Object.keys(origin).forEach((dataKey) => {\n      result.push(origin[dataKey]);\n    });\n    return result;\n  }\n\n  rowsLabel.forEach((weekColumnList, weekIdx) => {\n    const keyNm = `week${weekIdx + 1}`;\n\n    if (!Array.isArray(weekColumnList)) {\n      return;\n    }\n    weekColumnList.forEach((rowNameIdx, keyIdx) => {\n      if (weekIdx === 0) {\n        result[keyIdx] = [];\n      }\n\n      const data = origin[keyNm] ? origin[keyNm][rowNameIdx] : '0';\n      result[keyIdx].push(data || '0');\n    });\n  });\n\n  return result;\n};\nconst splitWithTrim = (d) => {\n  if (typeof d !== 'string') {\n    console.warn(d);\n    return [];\n  }\n  if (d) {\n    return d.split(',').map((str) => str.trim());\n  }\n  return [];\n};\n\nexport default function PivotTable({ tableData = {} }) {\n  const {\n    tableRowIndexPerWeek,\n    tableRowsLabel: rowsStr,\n    tableColumnsLabel: columnsStr,\n  } = useSelector((state) => state.contents);\n  // const { columnsLabel: columnsStr, rowsLabel: rowsStr } = table;\n\n  const rowsLabel = splitWithTrim(rowsStr);\n  const columnsLabel = splitWithTrim(columnsStr);\n  // const hasStaticRowsLabel = rowsLabel.length > 0;\n  // const tableDataRows = tableSetList.map((data) => data.defaultRows);\n  // const rowsMap = findRowIdx(rowsLabel, tableDataRows);\n\n  const pivotData = pivot(tableRowIndexPerWeek, tableData);\n\n  return columnsLabel && tableData ? (\n    <table style={styles.table}>\n      <thead>\n        <tr>\n          {columnsLabel.map((columnName, idx, arr) => {\n            const thStyle =\n              arr.length === idx + 1\n                ? { ...styles.th, ...styles.emphasis }\n                : styles.th;\n            return (\n              <th style={thStyle} key={idx}>\n                {columnName}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {pivotData.map((row, rowIdx) => {\n          return row ? (\n            <tr key={rowIdx}>\n              <td style={styles.th} key={`${rowsLabel}${rowIdx}`}>\n                {rowsLabel[rowIdx] ? rowsLabel[rowIdx].trim() : ''}\n              </td>\n              {row.map((columnItem, colIdx, arr) => {\n                const tdStyle = ((index) => {\n                  if (arr.length === index + 1)\n                    return { ...styles.td, ...styles.emphasis };\n                  else {\n                    return styles.td;\n                  }\n                })(colIdx);\n                return (\n                  <td style={tdStyle} key={`${columnItem}${colIdx}`}>\n                    {columnItem ? columnItem.trim() : ''}\n                  </td>\n                );\n              })}\n            </tr>\n          ) : (\n            ''\n          );\n        })}\n      </tbody>\n    </table>\n  ) : (\n    ''\n  );\n}\n","import React from 'react';\nimport ViewText from './ViewText';\nimport PivotTable from './PivotTable';\n\nexport default function ViewSet({ id, inputData }) {\n  const { preText, tableData, postText } = inputData;\n  return (\n    <div id={id}>\n      <ViewText data={preText}></ViewText>\n      <PivotTable tableData={tableData}></PivotTable>\n      <ViewText data={postText}></ViewText>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction clickButton(e, targetId) {\n  e.preventDefault();\n  console.log(targetId)\n  copyToClip(document.getElementById(targetId));\n}\n\nfunction copyToClip(str) {\n  if (!str) {\n    alert(\"empty data!\");\n    return;\n  }\n  function listener(e) {\n    e.clipboardData.setData(\"text/html\", str.innerHTML);\n    e.clipboardData.setData(\"text/plain\", str.innerHTML);\n    console.log(e.clipboardData.__proto__);\n    // e.clipboardData.style(\"cssText\", \"color: blue;\")\n    e.preventDefault();\n  }\n  // div.innerHTML = \"your div content\";\n  // div.style.cssText = document.defaultView.getComputedStyle(p, \"\").cssText;\n\n  document.addEventListener(\"copy\", listener);\n  document.execCommand(\"copy\");\n  document.removeEventListener(\"copy\", listener);\n}\n\nexport default function CopyButton({ targetId }) {\n  return (\n    <Button onClick={e => clickButton(e, targetId)} variant=\"outlined\">\n      COPY\n    </Button>\n  );\n}\n","import React from 'react';\nimport ViewText from './ViewText';\nimport { useSelector } from 'react-redux';\n\nfunction Receiver({ keyId, data }) {\n  const receiver = useSelector(({ basicInfo }) => basicInfo.receiver);\n  const receiverList = receiver[keyId] || [];\n  return <ViewText data={receiverList.join(', ')}></ViewText>;\n}\n\nexport default React.memo(Receiver);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewSet from './ViewSet';\nimport CopyButton from './CopyButton';\nimport Receiver from './Receiver';\nimport ViewText from './ViewText';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 5,\n    textAlign: 'right',\n    color: 'black',\n    fontSize: '10pt',\n    fontFamily: '맑은 고딕',\n  },\n  disabledPaper: {\n    color: 'gray',\n  },\n}));\n\nfunction ViewContents() {\n  const classes = useStyles();\n  const dataList = useSelector((store) => store.contents.result);\n\n  return (\n    // dataList &&\n    dataList.map((data, idx) => {\n      return data ? (\n        <Paper\n          className={classNames(classes.paper, {\n            [classes.disabledPaper]: !data.shouldSend,\n          })}\n          key={idx}\n        >\n          <ViewText data={data.emailId}></ViewText>\n          <Receiver keyId={data.emailId}></Receiver>\n          <CopyButton targetId={`contents${idx + 1}`}></CopyButton>\n          <ViewSet id={`contents${idx + 1}`} inputData={data}></ViewSet>\n        </Paper>\n      ) : (\n        ''\n      );\n    })\n  );\n}\n\nexport default ViewContents;\n","export default {\n  //emails\n  email: `mk1, 아침이멜@hello.word\nmk2, 점심이멜@hello.word\nmk3, 저녁이멜@hello.word\nmj, kkk@aaa.bbb`,\n\n  //equipment infos\n  equip_info_columns: `ID, 아침, 점심, 저녁`,\n  equip_info_data: `MBA310, mk1, mk2, mk3\nMBAB10, mj, mjjjj, mjjjjjjjjj\nMBAB20, kakao, akao, bkao`,\n\n  //schema\n  pre_text: `[BMP] __Req No.__ / __Discipline__ - VP Out pending 현황 송부의 件\n수신 : 수신자 제위\n발신 : 김민진 대리 / 장치 공정관리\n\n안녕하세요.\n업무에 노고가 많으십니다.\nBMP 프로젝트 '__Req No.__ / __Discipline__ - __Supplier__' 관련 VP OUT pending 현황 송부 드립니다.\n\n<VP OUT pending 현황>`,\n  table_columns_label: '구분, 2월 1주, 2월 2주, 2월 3주',\n  table_columns_hide: '장치',\n  table_rows_label: '설계, 공정관리, 조달검사, PE, QA/QC, 발주처 대기, Total',\n  post_text: `첨부파일 확인 후, 지연 중인 문건들에 대한 검토 및 VP IOC 부탁드립니다.\n\n발주처 Comment 대기 문서(노란색으로 표시된 문서)에 대해서는 발주처 Comment 접수 후 빠른 VP IOC 진행 부탁 드립니다.\n\n문의사항 있으시면 연락 부탁 드립니다.\n감사합니다.`,\n\n  //data\n  source_variables: `Req No., Discipline, Supplier`,\n  source_data: `MBA310,HYDROGEN PLANT STEAM REFORMER,TECHNIP FMC\nMBAB10,SRU REACTION FURNACE-WASTE HEAT BOILER AND STEAM DRUM,ZEECO\nMBAB20,INCINERATOR PACKAGE,ZEECO`,\n  table_data_rows1: '조달검사, PE, 발주처 대기, 공정관리, Total',\n  table_data_week1: `MBA310, MBAB20, MDA110\n4,5,0\n1,6,1\n3,0,2\n5,1,2\n0,0,4`,\n  table_data_rows2: '발주처 대기, PE, 공정관리, Total',\n  table_data_week2: `MBA310, MBAB10, MCA110, MDA110\n5,1,1,2\n1,2,1,1\n2,1,0,1\n3,0,1,0`,\n  table_data_rows3: 'QA/QC, PE, 발주처 대기, 공정관리, Total',\n  table_data_week3: `MBA310, MDA110, MEA120\n8,6,1\n1,0,0\n0,0,0\n1,1,1\n0,0,3`,\n};\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport Sample from '../../resource/sample';\n\nconst SET_TEMPLATE = 'template/SET_TEMPLATE';\nconst SET_TABLE_DATA_SETS = 'source/SET_TABLE_DATA_SETS';\n\nconst IMPORT_CONTENTS_DATA = 'data/IMPORT_CONTENTS_DATA';\nconst EXPORT_CONTENTS_DATA = 'data/EXPORT_CONTENTS_DATA';\n\nconst PARSE_DATA = 'PARSE_DATA';\n\n// **** 액션 생섬함수 정의\nexport const ContentsActions = {\n  setTemplate: createAction(SET_TEMPLATE, (data) => data),\n  setTableDataSet: createAction(SET_TABLE_DATA_SETS, (list) => list),\n\n  importContentsData: createAction(IMPORT_CONTENTS_DATA, (data) => data),\n  exportContentsData: createAction(EXPORT_CONTENTS_DATA, (data) => data),\n\n  parseData: createAction(PARSE_DATA),\n};\n\nconst initialState = {\n  //schema\n  preTextSchema: Sample.pre_text,\n  postTextSchema: Sample.post_text,\n  tableColumnsLabel: Sample.table_columns_label,\n  tableRowsLabel: Sample.table_rows_label,\n\n  //data\n  variables: Sample.source_variables,\n  textData: Sample.source_data,\n\n  tableSetList: [\n    {\n      id: 0,\n      defaultData: Sample.table_data_week1,\n      defaultRows: Sample.table_data_rows1,\n    },\n    {\n      id: 1,\n      defaultData: Sample.table_data_week2,\n      defaultRows: Sample.table_data_rows2,\n    },\n    {\n      id: 2,\n      defaultData: Sample.table_data_week3,\n      defaultRows: Sample.table_data_rows3,\n    },\n  ],\n\n  //result\n  result: [],\n\n  fileData: {},\n};\n\nconst splitWithTrim = (d) => {\n  if (typeof d !== 'string') {\n    console.warn(d);\n    return [];\n  }\n  if (d) {\n    return d.split(',').map((str) => str.trim());\n  }\n  return [];\n};\n\nconst parseText = (template, variables, row) => {\n  const data = row.split(',');\n  if (!template || data.length === 0) {\n    return 'error';\n  }\n  let rst = template;\n  // console.log(template);\n  variables.forEach((variable, idx) => {\n    var regex = new RegExp(`__${variable.trim() || ''}__`, 'g');\n    if (rst) {\n      rst = rst.replace(regex, data[idx].trim());\n    }\n  });\n  return rst;\n};\n\nconst findRowIndexPerWeek = (templateRowsLabel, dataRowsLabel) => {\n  if (!Array.isArray(dataRowsLabel)) {\n    console.warn(dataRowsLabel);\n    return templateRowsLabel;\n  }\n  return dataRowsLabel.map((weekColumnList) =>\n    templateRowsLabel.map((row) => splitWithTrim(weekColumnList).indexOf(row)),\n  );\n};\n\n/**\n {\n  \"MBA310\": {\n    \"week1\": [\n      \"4\",\n      \"1\",\n      \"3\",\n      \"5\",\n      \"0\"\n    ],\n    \"week2\": [\n      \"5\",\n      \"1\",\n      \"2\",\n      \"3\"\n    ],\n    \"week3\": [\n      \"8\",\n      \"1\",\n      \"0\",\n      \"1\",\n      \"0\"\n    ]\n  },\n  \"MBAB20\": {\n    \"week1\": [\n      \"5\",\n      \"6\",\n      \"0\",\n      \"1\",\n      \"0\"\n    ]\n  },\n}\n */\nconst getTableDataPerMachine = (tableSetList) => {\n  let lastWeekKey;\n\n  const tableDataPerKey = tableSetList\n    .map((tableSet) => tableSet.defaultData)\n    .filter((data) => data && typeof data === 'string')\n    .reduce((dataPerKey, nextData, weekIdx, weekTotal) => {\n      const rows = nextData.split('\\n');\n      // first line is machine_ID list.\n      // MBA310, MBA311, ..\n      let machineList; // = splitWithTrim(rows[0]);\n      const weekKey = `week${weekIdx + 1}`;\n      lastWeekKey = `week${weekTotal.length}`;\n\n      const machineData = rows.reduce((result, row, rowIdx) => {\n        if (rowIdx === 0) {\n          machineList = splitWithTrim(row);\n          machineList.forEach((machineId) => {\n            result[machineId] = {\n              [weekKey]: [],\n            };\n          });\n        } else {\n          splitWithTrim(row).forEach((col, colIdx) => {\n            const machineId = machineList[colIdx];\n            result[machineId][weekKey].push(col);\n          });\n        }\n        return result;\n      }, {});\n\n      machineList.forEach((machineID) => {\n        dataPerKey[machineID] = {\n          ...dataPerKey[machineID],\n          ...machineData[machineID],\n        };\n      });\n\n      return dataPerKey;\n    }, {});\n\n  //마지막 week에 machine id가 없을 경우 false (disable)\n  const shouldSendMailMap = Object.keys(tableDataPerKey).reduce(\n    (result, machineId) => {\n      result[machineId] = Boolean(tableDataPerKey[machineId][lastWeekKey]);\n      return result;\n    },\n    {},\n  );\n\n  return { shouldSendMailMap, tableDataPerKey };\n};\n\nexport default handleActions(\n  {\n    [IMPORT_CONTENTS_DATA]: (state, action) => {\n      const data = action.payload;\n      // console.log(data);\n      return produce(state, (draft) => {\n        const {\n          pre_text,\n          post_text,\n          table_columns_label,\n          table_rows_label,\n          source_variables,\n          source_data,\n        } = data;\n\n        Object.assign(draft, {\n          preTextSchema: pre_text,\n          postTextSchema: post_text,\n          tableColumnsLabel: table_columns_label,\n          tableRowsLabel: table_rows_label,\n          variables: source_variables,\n          textData: source_data,\n          tableSetList: ((inputData) => {\n            if (inputData.table_data_rows1) {\n              return [\n                {\n                  id: 0,\n                  defaultData: inputData.table_data_week1,\n                  defaultRows: inputData.table_data_rows1.join(','),\n                },\n                {\n                  id: 1,\n                  defaultData: inputData.table_data_week2,\n                  defaultRows: inputData.table_data_rows2.join(','),\n                },\n                {\n                  id: 2,\n                  defaultData: inputData.table_data_week3,\n                  defaultRows: inputData.table_data_rows3.join(','),\n                },\n              ];\n            } else if (inputData.table_data_set) {\n              return inputData.table_data_set;\n            } else {\n              return [];\n            }\n          })(data),\n        });\n      });\n    },\n    [EXPORT_CONTENTS_DATA]: (state, action) =>\n      produce(state, (draft) => {\n        draft.fileData = {\n          pre_text: draft.preTextSchema,\n          post_text: draft.postTextSchema,\n          table_columns_label: draft.tableColumnsLabel,\n          table_rows_label: draft.tableRowsLabel,\n          source_variables: draft.variables,\n          source_data: draft.textData,\n          table_data_set: draft.tableSetList,\n        };\n      }),\n\n    [PARSE_DATA]: (state, action) => {\n      const inputData = action.payload;\n      const {\n        //template\n        preTextSchema,\n        // table,\n        tableColumnsLabel,\n        tableRowsLabel,\n\n        postTextSchema,\n        //source\n        variables = '',\n        textData = '',\n        tableSetList = [],\n      } = { ...state, ...inputData };\n\n      const tableDataRows = tableSetList.map((data) => data.defaultRows);\n      const tableRowIndexPerWeek = findRowIndexPerWeek(\n        splitWithTrim(tableRowsLabel),\n        tableDataRows,\n      );\n\n      const { shouldSendMailMap, tableDataPerKey } = getTableDataPerMachine(\n        tableSetList,\n      );\n\n      const variableList = variables.split(',');\n      const textDataList = textData.split('\\n');\n\n      // console.log(tableDataPerKey);\n\n      const getEmailId = (dataRow = '') => {\n        return dataRow.split(',')[0];\n      };\n\n      return produce(state, (draft) => {\n        // use in pivot\n        draft.tableRowsLabel = tableRowsLabel;\n        draft.tableColumnsLabel = tableColumnsLabel;\n        draft.tableRowIndexPerWeek = tableRowIndexPerWeek;\n\n        draft.result = textDataList.map((data, idx) => {\n          const mailKey = textDataList[idx].split(',')[0];\n          return {\n            shouldSend: Boolean(shouldSendMailMap[mailKey]),\n            emailId: getEmailId(data), //machine ID\n            preText: parseText(preTextSchema, variableList, data),\n            postText: parseText(postTextSchema, variableList, data),\n            tableData: tableDataPerKey[mailKey],\n          };\n        });\n      });\n    },\n  },\n  initialState,\n);\n","import Sample from '../../resource/sample';\nimport { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nconst SET_BASIC_INFOS = 'static/SET_BASIC_INFOS';\nconst GET_RECEIVER = 'static/GET_RECEIVER';\nconst IMPORT_EMAIL_DATA = 'static/IMPORT_EMAIL_DATA';\nconst EXPORT_EMAIL_DATA = 'static/EXPORT_EMAIL_DATA';\n\nexport const StaticActions = {\n  setBasicInfo: createAction(SET_BASIC_INFOS, (data) => data),\n  getReceiver: createAction(GET_RECEIVER),\n  importEmailData: createAction(IMPORT_EMAIL_DATA),\n  exportEmailData: createAction(EXPORT_EMAIL_DATA),\n};\n\nconst initialState = {\n  userEmails: Sample.email,\n  equipColumns: Sample.equip_info_columns,\n  equipInfos: Sample.equip_info_data,\n  receiver: {},\n  fileData: {},\n};\n\n//reducer: action, state를 받아서 새로운 상태를 리턴하는 애\nexport default handleActions(\n  {\n    // [SET_BASIC_INFOS]: (state, action) => {\n    //   const { userEmails, equipColumns, equipInfos } = action.payload;\n    //   return produce(state, (draft) => {\n    //     if (userEmails) {\n    //       draft.userEmails = userEmails;\n    //     }\n    //     if (equipColumns) {\n    //       draft.equipColumns = equipColumns;\n    //     }\n    //     if (equipInfos) {\n    //       draft.equipInfos = equipInfos;\n    //     }\n    //   });\n    // },\n\n    [IMPORT_EMAIL_DATA]: (state, action) => {\n      const data = action.payload;\n      return produce(state, (draft) => {\n        draft.userEmails = data.email;\n        draft.equipInfos = data.equip_info_data;\n        draft.equipColumns = data.equip_info_columns;\n      });\n    },\n    [EXPORT_EMAIL_DATA]: (state, action) =>\n      produce(state, (draft) => {\n        draft.fileData = {\n          email: draft.userEmails,\n          equip_info_data: draft.equipInfos,\n          equip_info_columns: draft.equipColumns,\n        };\n      }),\n\n    [GET_RECEIVER]: (state, action) => {\n      const {\n        equipInfos = state.equipInfos,\n        userEmails = state.userEmails,\n      } = action.payload;\n\n      const userMailMap = {};\n      userEmails.split('\\n').forEach((data) => {\n        const userInfo = data.split(',');\n        userMailMap[userInfo[0].trim()] = userInfo[1].trim();\n      });\n      const getUserMails = (id, ...nameList) => {\n        return nameList.map((name) => userMailMap[name.trim()] || '');\n      };\n      const equipReceiverMap = {};\n      equipInfos.split('\\n').forEach((info) => {\n        const infoObj = info.split(',');\n        equipReceiverMap[infoObj[0].trim()] = getUserMails(...infoObj);\n      });\n\n      return {\n        ...state,\n        receiver: equipReceiverMap,\n      };\n    },\n  },\n  initialState,\n);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ContentsActions } from '../store/modules/contents';\nimport { StaticActions } from '../store/modules/basicInfos';\n\nconst useStyle = makeStyles({\n  root: {\n    minWidth: 'unset',\n    width: '100%',\n    height: '100%',\n    // color: \"#f0f0f0\"\n    color: 'black',\n  },\n});\n\nfunction RunButton({ inputData: { equipInfos, userEmails, ...data } }) {\n  const classes = useStyle();\n  const dispatch = useDispatch();\n\n  return (\n    <Button\n      className={classes.root}\n      variant=\"contained\"\n      // color=\"primary\"\n      onClick={() => {\n        dispatch(StaticActions.getReceiver({ equipInfos, userEmails }));\n        dispatch(ContentsActions.parseData(data));\n      }}\n    >\n      >>\n    </Button>\n  );\n}\n\nexport default RunButton;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { ContentsActions } from '../store/modules/contents';\nimport { StaticActions } from '../store/modules/basicInfos';\nimport { loadJsonFile } from '../utils/file';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  input: {\n    display: 'none',\n  },\n  button: {\n    width: 'auto',\n    marginRight: 8,\n  },\n}));\n\nfunction ImportButton({ label = 'Import' }) {\n  const dispatch = useDispatch();\n  const importActions = (data) => {\n    dispatch(StaticActions.importEmailData(data));\n    dispatch(ContentsActions.importContentsData(data));\n  };\n\n  const classes = useStyles();\n  const [fileName, setFileName] = useState('');\n  const handelSelectedFile = (e) => {\n    const fileList = e.target.files;\n    if (fileList.length > 0) {\n      setFileName(fileList[0].name);\n      loadJsonFile(e, importActions);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <input\n        type=\"file\"\n        accept=\".json\"\n        id=\"contained-button-file\"\n        className={classes.input}\n        onChange={handelSelectedFile}\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          component=\"span\"\n          className={classes.button}\n        >\n          {label}\n        </Button>\n      </label>\n      <Typography>{fileName}</Typography>\n    </div>\n  );\n}\n\nexport default React.memo(ImportButton);\n","export function saveFile(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport function loadJsonFile(evt, callBack) {\n  var files = evt.target.files;\n\n  var reader = new FileReader();\n  const f = files[0];\n\n  // Closure to capture the file information.\n  reader.onload = function(e) {\n    try {\n      const data = e.target.result;\n      const inputData = JSON.parse(data);\n      callBack(inputData);\n    } catch (e) {\n      //TODO: error dialog\n      console.error(e);\n    }\n  };\n  // Read in the image file as a data URL.\n  reader.readAsText(f);\n}\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContentsActions } from '../store/modules/contents';\nimport { StaticActions } from '../store/modules/basicInfos';\nimport { getFormatDate } from '../utils/date';\nimport { saveFile } from '../utils/file';\n\nexport default function ExportButton() {\n  const dispatch = useDispatch();\n  const [save, setSave] = useState(false);\n  const contentsFileData = useSelector((state) => state.contents.fileData);\n  const staticFileData = useSelector((state) => state.basicInfo.fileData);\n\n  const exportActions = () => {\n    dispatch(StaticActions.exportEmailData());\n    dispatch(ContentsActions.exportContentsData());\n    setSave(true);\n  };\n\n  useEffect(() => {\n    if (save) {\n      saveFile(\n        getFormatDate(new Date()) + '.json',\n        JSON.stringify({ ...staticFileData, ...contentsFileData }),\n      );\n      setSave(false);\n    }\n  }, [save, contentsFileData, staticFileData]);\n\n  return (\n    <Button variant=\"outlined\" size=\"small\" onClick={exportActions}>\n      EXPORT\n    </Button>\n  );\n}\n","/**\n *  yyyyMMdd 포맷으로 반환\n *  https://heum-story.tistory.com/27\n */\nexport function getFormatDate(date) {\n  var year = date.getFullYear(); //yyyy\n  var month = 1 + date.getMonth(); //M\n  month = month >= 10 ? month : '0' + month; //month 두자리로 저장\n  var day = date.getDate(); //d\n  day = day >= 10 ? day : '0' + day; //day 두자리로 저장\n  return year + '' + month + '' + day;\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport ImportButton from './ImportButton';\nimport ExportButton from './ExportButton';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 8,\n    borderRadius: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    '& > *': {\n      flexGrow: 1,\n    },\n  },\n  importButton: {\n    width: 200,\n  },\n});\n\nfunction ExternalButtonGroup() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <ImportButton />\n      <ExportButton />\n    </div>\n  );\n}\n\nexport default ExternalButtonGroup;\n","import React, { useState, useCallback } from 'react';\nimport { Grid } from '@material-ui/core';\nimport InputContents from './in/InputContents';\nimport ViewContents from './out/ViewContents';\nimport RunButton from '../components/RunButton';\nimport ExternalButtonGroup from '../components/ExternalButtonGroup';\n// import ErrorChild from '../components/common/ErrorChild';\n\nexport default function Layout() {\n  const [inputData, setInputData] = useState({});\n\n  const setInputCallback = useCallback(\n    (key, value) => {\n      setInputData((state) => ({\n        ...state,\n        [key]: value,\n      }));\n    },\n    [setInputData],\n  );\n  return (\n    <Grid container spacing={3}>\n      {/* <ErrorChild></ErrorChild> */}\n      <Grid item xs={12} sm={12} md={5}>\n        <ExternalButtonGroup />\n        <InputContents setInputData={setInputCallback} />\n      </Grid>\n      <Grid item xs={12} sm={12} md={1}>\n        <RunButton inputData={inputData} />\n      </Grid>\n      <Grid item xs={12} sm={12} md={5}>\n        <ViewContents />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Layout from './section/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout></Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nconst ERROR_TRUE = 'test/ERROR_TRUE';\nconst ERROR_FALSE = 'test/ERROR_FALSE';\n\nexport const setErrorTrue = createAction(ERROR_TRUE);\nexport const setErrorFalse = createAction(ERROR_FALSE);\n\nconst initialState = {\n  error: false,\n};\nexport default handleActions(\n  {\n    [ERROR_TRUE]: (state, action) =>\n      produce(state, draft => {\n        draft.error = true;\n      }),\n    [ERROR_FALSE]: (state, action) =>\n      produce(state, draft => {\n        draft.error = false;\n      }),\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport contentsReducers from './contents';\nimport basicInfoReducers from './basicInfos';\nimport TestReducers from './testAction';\n\nexport default combineReducers({\n  contents: contentsReducers,\n  basicInfo: basicInfoReducers,\n  test: TestReducers,\n  // 다른 리듀서를 만들게되면 여기에 넣어줌..\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './modules';\n\n// **** 리덕스 개발자도구 적용\nimport { createLogger } from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst logger = createLogger();\n\n// const store = createStore(modules, applyMiddleware(logger))\n\n// const devTools =\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// const store = createStore(rootReducer, devTools, applyMiddleware(logger))\nconst store = createStore(\n  rootReducer,\n  // localStorage['redux-store'] ? JSON.parse(localStorage['redux-store']) : {},\n  composeWithDevTools(applyMiddleware(logger)),\n);\n\n// const store = createStore(rootReducer);\n/**\nconsole.log(store.getState()); // initial state 값 출력\nconsole.log(store.dispatch); // store에 dispatch({type: GET_LIST}) 와 같이 액션 실행시킬수있다\nconsole.log\n  // 액션이 일어날때 마다 상태를 출력\n  //subscribe(()=>{console.log(store.getState())})\n  // 액션이 일어날때마다 localStorage에 저장\n  // store.subscribe(() => {\n  //   localStorage['redux-store'] = JSON.stringify(store.getState());\n  // })\n  ();\n*/\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}