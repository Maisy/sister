{"version":3,"sources":["components/in/TabPanel.js","components/in/InputText.js","pages/template/Template.js","pages/source/DataAddButton.js","pages/source/TableDataSet.js","pages/source/TableData.js","pages/source/Source.js","pages/email/UserEmails.js","pages/email/EquipInfos.js","pages/email/StaticData.js","components/in/InputPages.js","components/in/ContentsWrapper.js","components/out/ViewText.js","components/out/PivotTable.js","components/out/ViewSet.js","components/out/CopyButton.js","components/out/Receiver.js","components/out/ContentsWrapper.js","resource/sample.js","store/modules/contents.js","store/modules/basicInfos.js","components/common/RunButton.js","components/common/ExternalButtonGroup.js","utils/file.js","utils/date.js","pages/Layout.js","App.js","serviceWorker.js","store/modules/testAction.js","store/modules/index.js","store/index.js","index.js"],"names":["TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","useStyles","makeStyles","theme","root","margin","spacing","width","React","memo","defautRows","name","label","onChanged","defaultValue","classes","TextField","key","className","replace","toUpperCase","multiline","rows","variant","onChange","event","target","console","error","setTemplateData","useSelector","contents","preTextSchema","postTextSchema","table","tableColumnsLabel","columnsLabel","tableRowsLabel","rowsLabel","val","TableDataAddButton","onClick","Button","color","useStyle","textAlign","border","padding","TableDataSet","dataIdx","defaultData","defaultRows","deleteCallback","setTableData","setData","setTableDataRows","setRow","IconButton","aria-label","size","edge","e","data","tableSetList","state","useState","dataList","setDataList","useEffect","deleteDataFunc","selectedIdx","newList","idIdx","forEach","idx","push","setOneData","newData","map","length","SourceInput","setSourceData","setVariables","variables","textData","UserEmails","mailValue","basicInfo","userEmails","equipInfos","equipColumns","heading","fontSize","typography","pxToRem","secondaryHeading","palette","text","secondary","ControlledExpansionPanels","setStaticData","expanded","setExpanded","handleChange","panel","isExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","flexGrow","tab","a11yProps","InputPages","tabIdx","setTabIdx","Tabs","newValue","Tab","Source","paper","minHeight","InputContents","Paper","ViewText","split","line","splitTextNewLine","styles","height","borderCollapse","th","backgroundColor","fontWeight","td","first","emphasis","splitWithTrim","d","warn","str","trim","PivotTable","templateRowsLabel","dataRowsLabel","tableData","columnsStr","rowsStr","hasStaticRowsLabel","tableDataRows","pivotData","origin","result","Object","keys","dataKey","oneWeekColumn","weekIdx","i","keyNm","Array","isArray","rowNameIdx","keyIdx","pivot","row","indexOf","style","columnName","arr","thStyle","rowIdx","columnItem","colIdx","tdStyle","ViewSet","inputData","preText","postText","clickButton","targetId","preventDefault","log","alert","listener","clipboardData","innerHTML","__proto__","document","addEventListener","execCommand","removeEventListener","copyToClip","getElementById","CopyButton","keyId","receiverList","receiver","join","fontFamily","disabledPaper","ViewContents","store","classNames","shouldSend","emailId","ContentsActions","setTemplate","createAction","setTableDataSet","list","importContentsData","exportContentsData","parseData","initialState","Sample","fileData","parseText","template","rst","variable","regex","RegExp","handleActions","action","payload","tableColumnLabel","produce","draft","pre_text","post_text","table_columns_label","table_rows_label","source_variables","source_data","table_data_rows1","table_data_week1","table_data_week2","table_data_rows2","table_data_week3","table_data_rows3","table_data_set","variableList","textDataList","tableDataPerKey","shouldSendMailMap","week","weekKey","rowKeyList","col","rowKey","getEmailId","dataRow","mailKey","StaticActions","setBasicInfo","getReceiver","importEmailData","exportEmailData","email","equip_info_data","equip_info_columns","userMailMap","userInfo","getUserMails","nameList","equipReceiverMap","info","infoObj","minWidth","connect","dispatch","bindActionCreators","addRunClick","borderRadius","display","justifyContent","importButton","ExternalButtonGroup","useDispatch","save","setSave","contentsFileData","staticFileData","importActions","filename","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","saveFile","date","year","getFullYear","month","getMonth","day","getDate","getFormatDate","Date","JSON","stringify","Input","type","evt","callBack","files","reader","FileReader","f","onload","parse","readAsText","loadJsonFile","inputProps","accept","Layout","staticData","templateData","sourceData","staticCB","useCallback","templateCB","Grid","container","item","xs","sm","md","App","Boolean","window","location","hostname","match","combineReducers","contentsReducers","basicInfoReducers","test","TestReducers","logger","createLogger","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f35fe57.chunk.js","sourcesContent":["import React from \"react\";\n// import PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from '@material-ui/core/Box';\n\n\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: `${theme.spacing(1)}px 0`,\n    width: '100%',\n  },\n}));\n\nfunction InputText({\n  defautRows = 4,\n  name,\n  label,\n  onChanged,\n  defaultValue = '',\n}) {\n  // console.log(`render input text...${name}`);\n  const classes = useStyles();\n\n  const handleOnChange = event => {\n    if (typeof onChanged !== 'function') {\n      console.error('onChanged is not function');\n      return;\n    }\n\n    onChanged(event.target.value);\n  };\n\n  return (\n    <TextField\n      key={defaultValue + '' + name}\n      className={classes.root}\n      label={label ? label : name.replace('_', ' ').toUpperCase()}\n      multiline\n      rows={defautRows}\n      variant=\"outlined\"\n      name={name}\n      defaultValue={defaultValue}\n      onChange={handleOnChange}\n    />\n  );\n}\nexport default React.memo(InputText);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport InputText from '../../components/in/InputText';\n\nfunction Template({ setTemplateData }) {\n  const {\n    preTextSchema,\n    postTextSchema,\n    table: { columnsLabel: tableColumnsLabel, rowsLabel: tableRowsLabel },\n  } = useSelector(({ contents }) => contents);\n\n  return (\n    <div>\n      <InputText\n        name=\"pre_text\"\n        defaultValue={preTextSchema}\n        onChanged={val => {\n          setTemplateData('preTextSchema', val);\n        }}\n      ></InputText>\n      <InputText\n        name=\"table_columns_label\"\n        label=\"Column Name\"\n        defautRows={1}\n        defaultValue={tableColumnsLabel}\n        onChanged={val => {\n          setTemplateData('tableColumnLabel', val);\n        }}\n      ></InputText>\n      <InputText\n        name=\"table_rows_label\"\n        label=\"Rows Name\"\n        defautRows={1}\n        defaultValue={tableRowsLabel}\n        onChanged={val => {\n          setTemplateData('tableRowsLabel', val);\n        }}\n      ></InputText>\n      <InputText\n        name=\"post_text\"\n        defaultValue={postTextSchema}\n        onChanged={val => {\n          setTemplateData('postTextSchema', val);\n        }}\n      ></InputText>\n    </div>\n  );\n}\n\nexport default React.memo(Template);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: { width: '100%' },\n});\n\nexport default function TableDataAddButton({ onClick }) {\n  const classes = useStyles();\n  return (\n    <Button\n      className={classes.root}\n      variant=\"outlined\"\n      color=\"primary\"\n      onClick={onClick}\n    >\n      Add Table Data Rows\n    </Button>\n  );\n}\n","import React from 'react';\nimport InputText from '../../components/in/InputText';\nimport { makeStyles, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Clear';\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    textAlign: 'right',\n    // backgroundColor: '#dbdbdb',\n    border: '2px dashed rgba(0, 0, 0, 0.23)',\n    padding: `4px 8px 8px 8px`,\n    margin: `${theme.spacing(2)}px 0`,\n  },\n}));\n\nexport default function TableDataSet({\n  dataIdx,\n  defaultData = [],\n  defaultRows = [],\n  deleteCallback,\n  setData: setTableData,\n  setRow: setTableDataRows,\n}) {\n  const classes = useStyle();\n  return (\n    <div className={classes.root}>\n      {dataIdx}\n      <IconButton\n        aria-label=\"delete\"\n        size=\"small\"\n        edge=\"end\"\n        onClick={e => deleteCallback(dataIdx)}\n      >\n        <DeleteIcon></DeleteIcon>\n      </IconButton>\n      <InputText\n        name={`table_data_rows${dataIdx + 1}`}\n        label={`Table Data Rows (WEEK ${dataIdx + 1})`}\n        defautRows={1}\n        defaultValue={defaultRows}\n        onChanged={data => setTableDataRows(dataIdx, data)}\n      ></InputText>\n      <InputText\n        name={`table_data${dataIdx + 1}`}\n        label={`WEEK ${dataIdx + 1}`}\n        defautRows={6}\n        defaultValue={defaultData}\n        onChanged={data => setTableData(dataIdx, data)}\n      ></InputText>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport TableDataAddButton from './DataAddButton';\nimport { useState } from 'react';\nimport TableDataSet from './TableDataSet';\n\nfunction TableData({ setTableData }) {\n  const { tableSetList } = useSelector(state => state.contents);\n  const [dataList, setDataList] = useState([]);\n\n  useEffect(() => {\n    if (!tableSetList) {\n      return;\n    }\n    setDataList(tableSetList);\n  }, [tableSetList]);\n\n  useEffect(() => {\n    setTableData(dataList);\n  }, [dataList, setTableData]);\n\n  const addDataFunc = () => {\n    const newList = [\n      ...dataList,\n      { id: dataList.length, defaultData: [], defaultRows: [] },\n    ];\n    setDataList(newList);\n  };\n\n  const deleteDataFunc = selectedIdx => {\n    const newList = [];\n    let idIdx = 0;\n    dataList.forEach(({ defaultData, defaultRows }, idx) => {\n      if (idx !== selectedIdx) {\n        newList.push({\n          id: idIdx++,\n          defaultData,\n          defaultRows,\n        });\n      }\n    });\n    setDataList(newList);\n  };\n\n  const setOneData = (idx, data) => {\n    // console.log(`set ${idx} data...`);\n    const newData = {\n      ...dataList[idx],\n      defaultData: data,\n    };\n    dataList[idx] = newData;\n    setDataList(dataList);\n  };\n  const setRow = (idx, data) => {\n    // console.log(`set ${idx} row...`);\n    const newData = {\n      ...dataList[idx],\n      defaultRows: data,\n    };\n    dataList[idx] = newData;\n    setDataList(dataList);\n  };\n\n  // console.log(dataList);\n  // console.log('render table data...');\n\n  return (\n    <div>\n      {dataList.map(({ id, defaultData, defaultRows }, idx) => {\n        return (\n          <TableDataSet\n            key={id + '' + idx}\n            dataIdx={id}\n            defaultData={defaultData}\n            defaultRows={defaultRows}\n            deleteCallback={deleteDataFunc}\n            setData={setOneData}\n            setRow={setRow}\n          ></TableDataSet>\n        );\n      })}\n      <TableDataAddButton onClick={addDataFunc}>ADD</TableDataAddButton>\n    </div>\n  );\n}\nexport default React.memo(TableData);\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport InputText from '../../components/in/InputText';\nimport TableData from './TableData';\n\nfunction SourceInput({ setSourceData, setVariables, setTableData }) {\n  const { variables, textData } = useSelector(state => state.contents);\n\n  useEffect(() => {\n    setVariables(variables);\n  }, [variables, setVariables]);\n\n  useEffect(() => {\n    setSourceData(textData);\n  }, [textData, setSourceData]);\n\n  return (\n    <div>\n      <InputText\n        name=\"source_variables\"\n        defautRows={1}\n        defaultValue={variables}\n        onChanged={setVariables}\n      ></InputText>\n      <InputText\n        name=\"source_data\"\n        defautRows={6}\n        defaultValue={textData}\n        onChanged={setSourceData}\n      ></InputText>\n      <TableData setTableData={setTableData}></TableData>\n    </div>\n  );\n}\n\nexport default SourceInput;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport InputText from '../../components/in/InputText';\n\nfunction UserEmails({ onChanged }) {\n  const mailValue = useSelector(({ basicInfo }) => basicInfo.userEmails);\n\n  return (\n    <InputText\n      name=\"email\"\n      defautRows={10}\n      defaultValue={mailValue}\n      onChanged={value => onChanged('userEmails', value)}\n    ></InputText>\n  );\n}\n\nexport default UserEmails;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport InputText from '../../components/in/InputText';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nfunction EquipInfos({ onChanged }) {\n  const classes = useStyles();\n  const { equipInfos, equipColumns } = useSelector(\n    ({ basicInfo }) => basicInfo\n  );\n\n  return (\n    <div className={classes.root}>\n      <InputText\n        name=\"equip_info_columns\"\n        defautRows={1}\n        defaultValue={equipColumns}\n        onChanged={value => onChanged('equipColumns', value)}\n      ></InputText>\n      <InputText\n        name=\"equip_info_data\"\n        defautRows={10}\n        defaultValue={equipInfos}\n        onChanged={value => onChanged('equipInfos', value)}\n      ></InputText>\n    </div>\n  );\n}\n\nexport default React.memo(EquipInfos);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport UserEmails from './UserEmails';\nimport EquipInfos from './EquipInfos';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function ControlledExpansionPanels({ setStaticData }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading}>User Emails</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <UserEmails onChanged={setStaticData}></UserEmails>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}>\n            Equipment Informations\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <EquipInfos onChanged={setStaticData}></EquipInfos>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TabPanel from './TabPanel';\nimport Template from '../../pages/template/Template';\nimport Source from '../../pages/source/Source';\nimport StaticData from '../../pages/email/StaticData';\n// import UserEmails from \"./UserEmails\";\n// import EquipInfos from \"./EquipInfos\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  tab: {},\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function InputPages(props) {\n  const classes = useStyles();\n  const [tabIdx, setTabIdx] = React.useState(2);\n\n  const handleChange = (event, newValue) => {\n    setTabIdx(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        variant=\"fullWidth\"\n        value={tabIdx}\n        onChange={handleChange}\n        aria-label=\"simple tabs example\"\n      >\n        <Tab label=\"Email\" className={classes.tab} {...a11yProps(0)} />\n        <Tab label=\"Template\" className={classes.tab} {...a11yProps(1)} />\n        <Tab label=\"Source Data\" className={classes.tab} {...a11yProps(2)} />\n      </Tabs>\n      <TabPanel value={tabIdx} index={0}>\n        <StaticData {...props}></StaticData>\n      </TabPanel>\n      <TabPanel value={tabIdx} index={1}>\n        <Template {...props}></Template>\n      </TabPanel>\n      <TabPanel value={tabIdx} index={2}>\n        <Source {...props}></Source>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport InputPages from './InputPages';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    minHeight: 640,\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function InputContents(props) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <InputPages {...props}></InputPages>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '20px 0 20px 0',\n    textAlign: 'left',\n  },\n}));\n\nconst splitTextNewLine = function(data = '') {\n  return data.split('\\n').map((line, idx) => {\n    return (\n      <span key={idx}>\n        {line}\n        <br />\n      </span>\n    );\n  });\n};\n\nexport default function ViewText({ data }) {\n  const classes = useStyles();\n\n  return <div className={classes.root}>{splitTextNewLine(data)}</div>;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst styles = {\n  table: {\n    margin: '20px 0',\n    width: '350px',\n    height: 200,\n    fontSize: '10pt',\n    border: '1px solid black',\n    borderCollapse: 'collapse',\n  },\n  th: {\n    backgroundColor: '#e6e6e6',\n    border: '1px solid #444444',\n    padding: '5px 10px',\n    // padding: 0,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  td: {\n    border: '1px solid #444444',\n    padding: '5px 10px',\n    // padding: 0,\n    textAlign: 'center',\n  },\n  first: {\n    textAlign: 'left',\n  },\n  emphasis: {\n    color: 'red',\n    fontWeight: 'bold',\n  },\n};\n\nconst findRowIdx = (templateRowsLabel, dataRowsLabel) => {\n  if (!Array.isArray(dataRowsLabel)) {\n    console.warn(dataRowsLabel);\n    return templateRowsLabel;\n  }\n  // console.log(dataRowsLabel);\n  // console.log(splitWithTrim(dataRowsLabel));\n  return dataRowsLabel.map(oneWeekColumn =>\n    templateRowsLabel.map(row => splitWithTrim(oneWeekColumn).indexOf(row))\n  );\n};\nconst pivot = (rowsLabel, origin) => {\n  const result = [];\n  if (rowsLabel.length === 0) {\n    Object.keys(origin).forEach(dataKey => {\n      result.push(origin[dataKey]);\n    });\n    return result;\n  }\n\n  rowsLabel.forEach((oneWeekColumn, weekIdx) => {\n    const keyNm = (i => {\n      if (i === 0) {\n        return 'week1';\n      } else if (i === 1) {\n        return 'week2';\n      } else {\n        return 'week3';\n      }\n    })(weekIdx);\n\n    if (!Array.isArray(oneWeekColumn)) {\n      // console.log(`oneWeekColumn`);\n      // console.log(oneWeekColumn);\n      return;\n    }\n    oneWeekColumn.forEach((rowNameIdx, keyIdx) => {\n      if (weekIdx === 0) {\n        result[keyIdx] = [];\n      }\n\n      const data = origin[keyNm] ? origin[keyNm][rowNameIdx] : '0';\n      result[keyIdx].push(data || '0');\n    });\n  });\n\n  return result;\n};\nconst splitWithTrim = d => {\n  if (typeof d !== 'string') {\n    console.warn(d);\n    return [];\n  }\n  if (d) {\n    return d.split(',').map(str => str.trim());\n  }\n  return [];\n};\n\nexport default function PivotTable({ tableData = {} }) {\n  const { table, tableSetList } = useSelector(state => state.contents);\n  const { columnsLabel: columnsStr, rowsLabel: rowsStr } = table;\n\n  const rowsLabel = splitWithTrim(rowsStr);\n  const columnsLabel = splitWithTrim(columnsStr);\n  const hasStaticRowsLabel = rowsLabel.length > 0;\n  const tableDataRows = tableSetList.map(data => data.defaultRows);\n  const rowsMap = findRowIdx(rowsLabel, tableDataRows);\n\n  const pivotData = pivot(rowsMap, tableData);\n  return columnsLabel && tableData ? (\n    <table style={styles.table}>\n      <thead>\n        <tr>\n          {columnsLabel.map((columnName, idx, arr) => {\n            const thStyle =\n              arr.length === idx + 1\n                ? { ...styles.th, ...styles.emphasis }\n                : styles.th;\n            return (\n              <th style={thStyle} key={idx}>\n                {columnName}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {pivotData.map((row, rowIdx) => {\n          return row ? (\n            <tr key={'' + rowIdx}>\n              {hasStaticRowsLabel && (\n                <td style={styles.th} key={rowsLabel + '' + rowIdx}>\n                  {rowsLabel[rowIdx] ? rowsLabel[rowIdx].trim() : ''}\n                </td>\n              )}\n              {row.map((columnItem, colIdx, arr) => {\n                const tdStyle = (index => {\n                  if (arr.length === index + 1)\n                    return { ...styles.td, ...styles.emphasis };\n                  else {\n                    return styles.td;\n                  }\n                })(colIdx);\n                return (\n                  <td style={tdStyle} key={columnItem + '' + colIdx}>\n                    {columnItem ? columnItem.trim() : ''}\n                  </td>\n                );\n                // }\n              })}\n            </tr>\n          ) : (\n            ''\n          );\n        })}\n      </tbody>\n    </table>\n  ) : (\n    ''\n  );\n}\n","import React from 'react';\nimport ViewText from './ViewText';\nimport PivotTable from './PivotTable';\n\nexport default function ViewSet({ id, inputData }) {\n  const { preText, tableData, postText } = inputData;\n  return (\n    <div id={id}>\n      <ViewText data={preText}></ViewText>\n      <PivotTable tableData={tableData}></PivotTable>\n      <ViewText data={postText}></ViewText>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction clickButton(e, targetId) {\n  e.preventDefault();\n  console.log(targetId)\n  copyToClip(document.getElementById(targetId));\n}\n\nfunction copyToClip(str) {\n  if (!str) {\n    alert(\"empty data!\");\n    return;\n  }\n  function listener(e) {\n    e.clipboardData.setData(\"text/html\", str.innerHTML);\n    e.clipboardData.setData(\"text/plain\", str.innerHTML);\n    console.log(e.clipboardData.__proto__);\n    // e.clipboardData.style(\"cssText\", \"color: blue;\")\n    e.preventDefault();\n  }\n  // div.innerHTML = \"your div content\";\n  // div.style.cssText = document.defaultView.getComputedStyle(p, \"\").cssText;\n\n  document.addEventListener(\"copy\", listener);\n  document.execCommand(\"copy\");\n  document.removeEventListener(\"copy\", listener);\n}\n\nexport default function CopyButton({ targetId }) {\n  return (\n    <Button onClick={e => clickButton(e, targetId)} variant=\"outlined\">\n      COPY\n    </Button>\n  );\n}\n","import React from 'react';\nimport ViewText from './ViewText';\nimport { useSelector } from 'react-redux';\n\nfunction Receiver({ keyId, data }) {\n  const receiver = useSelector(({ basicInfo }) => basicInfo.receiver);\n  const receiverList = receiver[keyId] || [];\n  return <ViewText data={receiverList.join(', ')}></ViewText>;\n}\n\nexport default React.memo(Receiver);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewSet from './ViewSet';\nimport CopyButton from './CopyButton';\nimport Receiver from './Receiver';\nimport ViewText from './ViewText';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 5,\n    textAlign: 'right',\n    color: 'black',\n    fontSize: '10pt',\n    fontFamily: '맑은 고딕',\n  },\n  disabledPaper: {\n    color: 'gray',\n  },\n}));\n\nfunction ViewContents() {\n  const classes = useStyles();\n  const dataList = useSelector(store => store.contents.result);\n\n  return (\n    dataList &&\n    dataList.map((data, idx) => {\n      return data ? (\n        <Paper\n          className={classNames(classes.paper, {\n            [classes.disabledPaper]: !data.shouldSend,\n          })}\n          key={idx}\n        >\n          <ViewText data={data.emailId}></ViewText>\n          <Receiver keyId={data.emailId}></Receiver>\n          <CopyButton targetId={`contents${idx + 1}`}></CopyButton>\n          <ViewSet id={`contents${idx + 1}`} inputData={data}></ViewSet>\n        </Paper>\n      ) : (\n        ''\n      );\n    })\n  );\n}\n\nexport default ViewContents;\n","export default {\n  //emails\n  email: `mk1, 아침이멜@hello.word\nmk2, 점심이멜@hello.word\nmk3, 저녁이멜@hello.word\nmj, kkk@aaa.bbb`,\n\n  //equipment infos\n  equip_info_columns: `ID, 아침, 점심, 저녁`,\n  equip_info_data: `MBA310, mk1, mk2, mk3\nMBAB10, mj, mjjjj, mjjjjjjjjj\nMBAB20, kakao, akao, bkao`,\n\n  //schema\n  pre_text: `[BMP] __Req No.__ / __Discipline__ - VP Out pending 현황 송부의 件\n수신 : 수신자 제위\n발신 : 김민진 대리 / 장치 공정관리\n\n안녕하세요.\n업무에 노고가 많으십니다.\nBMP 프로젝트 '__Req No.__ / __Discipline__ - __Supplier__' 관련 VP OUT pending 현황 송부 드립니다.\n\n<VP OUT pending 현황>`,\n  table_columns_label: '구분, 2월 1주, 2월 2주, 2월 3주',\n  table_columns_hide: '장치',\n  table_rows_label: '설계, 공정관리, 조달검사, PE, QA/QC, 발주처 대기, Total',\n  post_text: `첨부파일 확인 후, 지연 중인 문건들에 대한 검토 및 VP IOC 부탁드립니다.\n\n발주처 Comment 대기 문서(노란색으로 표시된 문서)에 대해서는 발주처 Comment 접수 후 빠른 VP IOC 진행 부탁 드립니다.\n\n문의사항 있으시면 연락 부탁 드립니다.\n감사합니다.`,\n\n  //data\n  source_variables: `Req No., Discipline, Supplier`,\n  source_data: `MBA310,HYDROGEN PLANT STEAM REFORMER,TECHNIP FMC`,\n  table_data_rows1: '조달검사, PE, 발주처 대기, 공정관리, Total',\n  table_data_week1: `MBA310, MBAB20, MDA110\n4,5,0\n1,6,1\n3,0,2\n5,1,2\n0,0,4`,\n  table_data_rows2: '발주처 대기, PE, 공정관리, Total',\n  table_data_week2: `MBA310, MBAB10, MCA110, MDA110\n5,1,1,2\n1,2,1,1\n2,1,0,1\n3,0,1,0`,\n  table_data_rows3: 'QA/QC, PE, 발주처 대기, 공정관리, Total',\n  table_data_week3: `MBA310, MDA110, MEA120\n8,6,1\n1,0,0\n0,0,0\n1,1,1\n0,0,3`,\n};\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport Sample from '../../resource/sample';\n\nconst SET_TEMPLATE = 'template/SET_TEMPLATE';\nconst SET_TABLE_DATA_SETS = 'source/SET_TABLE_DATA_SETS';\n\nconst IMPORT_CONTENTS_DATA = 'data/IMPORT_CONTENTS_DATA';\nconst EXPORT_CONTENTS_DATA = 'data/EXPORT_CONTENTS_DATA';\n\nconst PARSE_DATA = 'PARSE_DATA';\n\n// **** 액션 생섬함수 정의\nexport const ContentsActions = {\n  setTemplate: createAction(SET_TEMPLATE, data => data),\n  setTableDataSet: createAction(SET_TABLE_DATA_SETS, list => list),\n\n  importContentsData: createAction(IMPORT_CONTENTS_DATA, data => data),\n  exportContentsData: createAction(EXPORT_CONTENTS_DATA, data => data),\n\n  parseData: createAction(PARSE_DATA),\n};\n\nconst initialState = {\n  //schema\n  preTextSchema: Sample.pre_text,\n  postTextSchema: Sample.post_text,\n  table: {\n    columnsLabel: Sample.table_columns_label,\n    rowsLabel: Sample.table_rows_label,\n  },\n\n  //data\n  variables: Sample.source_variables,\n  textData: Sample.source_data,\n  tableSetList: [\n    {\n      id: 0,\n      defaultData: Sample.table_data_week1,\n      defaultRows: Sample.table_data_rows1,\n    },\n    {\n      id: 1,\n      defaultData: Sample.table_data_week2,\n      defaultRows: Sample.table_data_rows2,\n    },\n    {\n      id: 2,\n      defaultData: Sample.table_data_week3,\n      defaultRows: Sample.table_data_rows3,\n    },\n  ],\n\n  //result\n  result: [],\n\n  fileData: {},\n};\n\nconst parseText = (template, variables, row) => {\n  const data = row.split(',');\n  if (!template || data.length === 0) {\n    return 'error';\n  }\n  let rst = template;\n  // console.log(template);\n  variables.forEach((variable, idx) => {\n    var regex = new RegExp(`__${variable.trim() || ''}__`, 'g');\n    if (rst) {\n      rst = rst.replace(regex, data[idx].trim());\n    }\n  });\n  return rst;\n};\n\nexport default handleActions(\n  {\n    [SET_TEMPLATE]: (state, action) => {\n      const {\n        preTextSchema,\n        tableColumnLabel,\n        tableRowsLabel,\n        postTextSchema,\n      } = action.payload;\n      return produce(state, draft => {\n        if (preTextSchema) {\n          draft.preTextSchema = preTextSchema;\n        }\n        if (tableColumnLabel) {\n          draft.table.columnsLabel = tableColumnLabel;\n        }\n        if (tableRowsLabel) {\n          draft.table.rowsLabel = tableRowsLabel;\n        }\n        if (postTextSchema) {\n          draft.postTextSchema = postTextSchema;\n        }\n      });\n    },\n    [SET_TABLE_DATA_SETS]: (state, action) => {\n      const { variables, textData, tableData } = action.payload;\n      return produce(state, draft => {\n        draft.variables = variables;\n        draft.textData = textData;\n        draft.tableSetList = tableData;\n      });\n    },\n\n    [IMPORT_CONTENTS_DATA]: (state, action) => {\n      const data = action.payload;\n      return produce(state, draft => {\n        draft.preTextSchema = data.pre_text;\n        draft.postTextSchema = data.post_text;\n        draft.table = {\n          columnsLabel: data.table_columns_label,\n          rowsLabel: data.table_rows_label,\n        };\n        draft.variables = data.source_variables;\n        draft.textData = data.source_data;\n        draft.tableSetList = (inputData => {\n          if (inputData.table_data_rows1) {\n            return [\n              {\n                id: 0,\n                defaultData: inputData.table_data_week1,\n                defaultRows: inputData.table_data_rows1.join(','),\n              },\n              {\n                id: 1,\n                defaultData: inputData.table_data_week2,\n                defaultRows: inputData.table_data_rows2.join(','),\n              },\n              {\n                id: 2,\n                defaultData: inputData.table_data_week3,\n                defaultRows: inputData.table_data_rows3.join(','),\n              },\n            ];\n          } else if (inputData.table_data_set) {\n            return inputData.table_data_set;\n          } else {\n            return [];\n          }\n        })(data);\n      });\n    },\n    [EXPORT_CONTENTS_DATA]: (state, action) =>\n      produce(state, draft => {\n        draft.fileData = {\n          pre_text: draft.preTextSchema,\n          post_text: draft.postTextSchema,\n          table_columns_label: draft.table.columnsLabel,\n          table_rows_label: draft.table.rowsLabel,\n          source_variables: draft.variables,\n          source_data: draft.textData,\n          table_data_set: draft.tableSetList,\n        };\n      }),\n\n    [PARSE_DATA]: (state, action) => {\n      const {\n        preTextSchema,\n        postTextSchema,\n        variables = '',\n        textData = '',\n        // tableData = [],\n        tableSetList = [],\n      } = state;\n      const variableList = variables.split(',');\n      const textDataList = textData.split('\\n');\n      const tableDataPerKey = [];\n\n      const shouldSendMailMap = {};\n      tableSetList.forEach(({ defaultData: week }, weekIdx, arr) => {\n        const weekKey = 'week' + (weekIdx + 1);\n        if (!week || typeof week !== 'string') {\n          console.warn(week);\n          return;\n        }\n        const rows = week.split('\\n');\n\n        const rowKeyList = rows[0].split(',');\n        rows.forEach((row, rowIdx) => {\n          row.split(',').forEach((col, colIdx) => {\n            const rowKey = rowKeyList[colIdx].trim(); //장비명\n            if (rowIdx === 0) {\n              if (!tableDataPerKey[rowKey]) {\n                tableDataPerKey[rowKey] = {};\n                shouldSendMailMap[rowKey] = false;\n              }\n              tableDataPerKey[rowKey][weekKey] = [];\n            } else {\n              tableDataPerKey[rowKey][weekKey].push(col);\n              if (\n                weekIdx === arr.length - 1 &&\n                col !== 0 &&\n                !shouldSendMailMap[rowKey]\n              ) {\n                //마지막 값이 모두 0인경우 disable\n                shouldSendMailMap[rowKey] = true;\n              }\n            }\n          });\n        });\n      });\n\n      // console.log(tableDataPerKey);\n\n      const getEmailId = (dataRow = '') => {\n        return dataRow.split(',')[0];\n      };\n\n      return produce(state, draft => {\n        draft.result = textDataList.map((data, idx) => {\n          const mailKey = textDataList[idx].split(',')[0];\n          // console.log(tableDataPerKey[mailKey]);\n          return {\n            shouldSend: shouldSendMailMap[mailKey] || false,\n            emailId: getEmailId(data),\n            // tableColumnsLabel: table.columnsLabel,\n            // tableRowsLabel: table.rowsLabel,\n            preText: parseText(preTextSchema, variableList, data),\n            postText: parseText(postTextSchema, variableList, data),\n            tableData: tableDataPerKey[mailKey],\n          };\n        });\n      });\n    },\n  },\n  initialState\n);\n","import Sample from '../../resource/sample';\nimport { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\n// const SET_USER_EMAILS = 'static/SET_USER_EMAILS';\n// const SET_EQUIP_INFOS = 'static/SET_EQUIP_INFOS';\n// const SET_EQUIP_COLS = 'static/SET_EQUIP_COLS';\nconst SET_BASIC_INFOS = 'static/SET_BASIC_INFOS';\nconst GET_RECEIVER = 'static/GET_RECEIVER';\nconst IMPORT_EMAIL_DATA = 'static/IMPORT_EMAIL_DATA';\nconst EXPORT_EMAIL_DATA = 'static/EXPORT_EMAIL_DATA';\n\nexport const StaticActions = {\n  setBasicInfo: createAction(SET_BASIC_INFOS, data => data),\n  // setUserEmails: createAction(SET_USER_EMAILS, text => text),\n  // setEquipmentInfos: createAction(SET_EQUIP_INFOS, data => data),\n  // setEquipmentColumns: createAction(SET_EQUIP_COLS, data => data),\n  getReceiver: createAction(GET_RECEIVER),\n  importEmailData: createAction(IMPORT_EMAIL_DATA),\n  exportEmailData: createAction(EXPORT_EMAIL_DATA),\n};\n\nconst initialState = {\n  userEmails: Sample.email,\n  equipColumns: Sample.equip_info_columns,\n  equipInfos: Sample.equip_info_data,\n  receiver: {},\n  fileData: {},\n};\n\n//reducer: action, state를 받아서 새로운 상태를 리턴하는 애\nexport default handleActions(\n  {\n    // [SET_USER_EMAILS]: (state, action) =>\n    //   produce(state, draft => {\n    //     draft.userEmails = action.payload;\n    //   }),\n    // [SET_EQUIP_INFOS]: (state, action) =>\n    //   produce(state, draft => {\n    //     draft.equipInfos = action.payload;\n    //   }),\n    // [SET_EQUIP_COLS]: (state, action) =>\n    //   produce(state, draft => {\n    //     draft.equipColumns = action.payload;\n    //   }),\n    [SET_BASIC_INFOS]: (state, action) => {\n      const { userEmails, equipColumns, equipInfos } = action.payload;\n      return produce(state, draft => {\n        if (userEmails) {\n          draft.userEmails = userEmails;\n        }\n        if (equipColumns) {\n          draft.equipColumns = equipColumns;\n        }\n        if (equipInfos) {\n          draft.equipInfos = equipInfos;\n        }\n      });\n    },\n\n    [IMPORT_EMAIL_DATA]: (state, action) => {\n      const data = action.payload;\n      return produce(state, draft => {\n        draft.userEmails = data.email;\n        draft.equipInfos = data.equip_info_data;\n        draft.equipColumns = data.equip_info_columns;\n      });\n    },\n    [EXPORT_EMAIL_DATA]: (state, action) =>\n      produce(state, draft => {\n        draft.fileData = {\n          email: draft.userEmails,\n          equip_info_data: draft.equipInfos,\n          equip_info_columns: draft.equipColumns,\n        };\n      }),\n\n    [GET_RECEIVER]: (state, action) => {\n      const { equipInfos, userEmails } = state;\n      const userMailMap = {};\n      userEmails.split('\\n').forEach(data => {\n        const userInfo = data.split(',');\n        userMailMap[userInfo[0].trim()] = userInfo[1].trim();\n      });\n      const getUserMails = (id, ...nameList) => {\n        return nameList.map(name => userMailMap[name.trim()] || '');\n      };\n      const equipReceiverMap = {};\n      equipInfos.split('\\n').forEach(info => {\n        const infoObj = info.split(',');\n        equipReceiverMap[infoObj[0].trim()] = getUserMails(...infoObj);\n      });\n\n      return {\n        ...state,\n        receiver: equipReceiverMap,\n      };\n    },\n  },\n  initialState\n);\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ContentsActions } from '../../store/modules/contents';\nimport { StaticActions } from '../../store/modules/basicInfos';\n\nconst useStyle = makeStyles({\n  root: {\n    minWidth: 'unset',\n    width: '100%',\n    height: '100%',\n    // color: \"#f0f0f0\"\n    color: 'black',\n  },\n});\n\nfunction RunButton({ ContentsActions, StaticActions, addRunClick }) {\n  const classes = useStyle();\n  return (\n    <Button\n      className={classes.root}\n      variant=\"contained\"\n      // color=\"primary\"\n      onClick={() => {\n        addRunClick();\n        StaticActions.getReceiver();\n        ContentsActions.parseData();\n      }}\n    >\n      >>\n    </Button>\n  );\n}\n\nconst mapStateToProps = state => ({});\n\n// const mapDispatchToProps = dispatch => ({\n//   parseData: () => dispatch(ContentsActions.parseData()),\n//   getReceiver: () => dispatch(getReceiver()),\n// })\nconst mapDispatchToProps = dispatch => ({\n  ContentsActions: bindActionCreators(ContentsActions, dispatch),\n  StaticActions: bindActionCreators(StaticActions, dispatch),\n});\n// bindActionCreators({ ContentsActions, getReceiver }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RunButton);\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContentsActions } from '../../store/modules/contents';\nimport { StaticActions } from '../../store/modules/basicInfos';\nimport { getFormatDate } from '../../utils/date';\nimport { saveFile, loadJsonFile } from '../../utils/file';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    // border: '2px solid #FF6B6B',\n    padding: 8,\n    borderRadius: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    // backgroundColor: '#ffe0e9',\n  },\n  importButton: {\n    width: 200,\n  },\n});\n\nfunction ExternalButtonGroup() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [save, setSave] = useState(false);\n  const contentsFileData = useSelector(state => state.contents.fileData);\n  const staticFileData = useSelector(state => state.basicInfo.fileData);\n\n  const importActions = data => {\n    dispatch(StaticActions.importEmailData(data));\n    dispatch(ContentsActions.importContentsData(data));\n  };\n\n  const exportActions = () => {\n    dispatch(StaticActions.exportEmailData());\n    dispatch(ContentsActions.exportContentsData());\n    setSave(true);\n  };\n\n  useEffect(() => {\n    if (save) {\n      saveFile(\n        getFormatDate(new Date()) + '.json',\n        JSON.stringify({ ...staticFileData, ...contentsFileData })\n      );\n      setSave(false);\n    }\n  }, [save, contentsFileData, staticFileData]);\n\n  return (\n    <div className={classes.root}>\n      {/* <label htmlFor=\"ex_file\">업로드</label> */}\n      <Input\n        // id=\"ex_file\"\n        className={classes.importButton}\n        type={'file'}\n        onChange={e => loadJsonFile(e, importActions)}\n        inputProps={{ accept: '.json' }}\n      ></Input>\n\n      <Button variant=\"outlined\" size=\"small\" onClick={exportActions}>\n        Save data\n      </Button>\n    </div>\n  );\n}\n\nexport default ExternalButtonGroup;\n","export function saveFile(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport function loadJsonFile(evt, callBack) {\n  var files = evt.target.files;\n\n  var reader = new FileReader();\n  const f = files[0];\n\n  // Closure to capture the file information.\n  reader.onload = function(e) {\n    try {\n      const data = e.target.result;\n      const inputData = JSON.parse(data);\n      callBack(inputData);\n    } catch (e) {\n      //TODO: error dialog\n      console.error(e);\n    }\n  };\n  // Read in the image file as a data URL.\n  reader.readAsText(f);\n}\n","/**\n *  yyyyMMdd 포맷으로 반환\n *  https://heum-story.tistory.com/27\n */\nexport function getFormatDate(date) {\n  var year = date.getFullYear(); //yyyy\n  var month = 1 + date.getMonth(); //M\n  month = month >= 10 ? month : '0' + month; //month 두자리로 저장\n  var day = date.getDate(); //d\n  day = day >= 10 ? day : '0' + day; //day 두자리로 저장\n  return year + '' + month + '' + day;\n}\n","import React, { useState, useCallback } from 'react';\nimport { Grid } from '@material-ui/core';\nimport InputContents from '../components/in/ContentsWrapper';\nimport ViewContents from '../components/out/ContentsWrapper';\nimport RunButton from '../components/common/RunButton';\nimport ExternalButtonGroup from '../components/common/ExternalButtonGroup';\nimport { useDispatch } from 'react-redux';\nimport { ContentsActions } from '../store/modules/contents';\nimport { StaticActions } from '../store/modules/basicInfos';\n// import TestComponent from './TestComponent';\n\nexport default function Layout() {\n  //basic info\n  const [staticData, setStaticData] = useState({});\n  //template\n  const [templateData, setTemplateData] = useState({});\n  //source data\n  const [tableData, setTableData] = useState([]);\n  const [variables, setVariables] = useState('');\n  const [sourceData, setSourceData] = useState('');\n  const dispatch = useDispatch();\n\n  const staticCB = useCallback(\n    (key, value) => {\n      setStaticData({\n        ...staticData,\n        [key]: value,\n      });\n    },\n    [staticData]\n  );\n\n  const templateCB = useCallback(\n    (key, value) => {\n      setTemplateData({\n        ...templateData,\n        [key]: value,\n      });\n    },\n    [templateData]\n  );\n\n  const runClick = () => {\n    dispatch(StaticActions.setBasicInfo(staticData));\n    dispatch(ContentsActions.setTemplate(templateData));\n    dispatch(\n      ContentsActions.setTableDataSet({\n        variables,\n        textData: sourceData,\n        tableData,\n      })\n    );\n  };\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} sm={12} md={5}>\n        <ExternalButtonGroup></ExternalButtonGroup>\n        <InputContents\n          setStaticData={staticCB}\n          setTemplateData={templateCB}\n          setTableData={setTableData}\n          setVariables={setVariables}\n          setSourceData={setSourceData}\n        ></InputContents>\n      </Grid>\n      <Grid item xs={12} sm={12} md={1}>\n        <RunButton addRunClick={runClick}></RunButton>\n      </Grid>\n      <Grid item xs={12} sm={12} md={5}>\n        <ViewContents></ViewContents>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Layout from './pages/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout></Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nconst ERROR_TRUE = 'test/ERROR_TRUE';\nconst ERROR_FALSE = 'test/ERROR_FALSE';\n\nexport const setErrorTrue = createAction(ERROR_TRUE);\nexport const setErrorFalse = createAction(ERROR_FALSE);\n\nconst initialState = {\n  error: false,\n};\nexport default handleActions(\n  {\n    [ERROR_TRUE]: (state, action) =>\n      produce(state, draft => {\n        draft.error = true;\n      }),\n    [ERROR_FALSE]: (state, action) =>\n      produce(state, draft => {\n        draft.error = false;\n      }),\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport contentsReducers from './contents';\nimport basicInfoReducers from './basicInfos';\nimport TestReducers from './testAction';\n\nexport default combineReducers({\n  contents: contentsReducers,\n  basicInfo: basicInfoReducers,\n  test: TestReducers,\n  // 다른 리듀서를 만들게되면 여기에 넣어줌..\n});\n","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './modules'\n\n// **** 리덕스 개발자도구 적용\nimport { createLogger } from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst logger = createLogger()\n\n// const store = createStore(modules, applyMiddleware(logger))\n\n// const devTools =\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// const store = createStore(rootReducer, devTools, applyMiddleware(logger))\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger))\n)\n\n// const store = createStore(rootReducer);\n// console.log(store.getState());\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}