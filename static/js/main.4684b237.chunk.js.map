{"version":3,"sources":["components/in/TabPanel.js","components/in/InputText.js","components/in/Template.js","components/in/Source.js","components/in/InputPages.js","components/in/ContentsWrapper.js","components/out/ViewTable.js","components/out/ViewText.js","components/out/ViewSet.js","components/out/CopyButton.js","components/out/ContentsWrapper.js","components/RunButton.js","resource/sample.js","App.js","serviceWorker.js","index.js"],"names":["TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","useStyles","makeStyles","theme","root","margin","spacing","width","InputText","defautRows","name","onChanged","defaultValue","classes","TextField","className","label","replace","toUpperCase","undefined","multiline","rows","variant","onChange","event","target","Template","SourceInput","flexGrow","a11yProps","InputPages","React","useState","setValue","Tabs","newValue","console","log","aria-label","Tab","paper","minHeight","color","palette","text","secondary","InputContents","Paper","styles","table","fontSize","borderBottom","borderCollapse","th","backgroundColor","borderTop","padding","textAlign","fontWeight","td","ViewTable","columns","data","style","split","map","columnName","idx","key","row","columnItem","trim","ViewText","line","splitTextNewLine","ViewSet","inputData","pre_text","table_columns","table_data","post_text","clickButton","e","targetId","preventDefault","str","alert","listener","clipboardData","setData","innerHTML","__proto__","document","addEventListener","execCommand","removeEventListener","copyToClip","getElementById","CopyButton","Button","onClick","fontFamily","ViewContents","dataList","useStyle","minWidth","height","RunButton","source_variables","source_data","App","SampleInput","setInputData","viewData","setViewData","onInputChanged","useCallback","dataObject","onRun","parsed","input","variableList","tableDataList","parseText","variables","rst","forEach","variable","userData","replaceVariables","Grid","container","item","xs","sm","md","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4684b237.chunk.js","sourcesContent":["import React from \"react\";\n// import PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from '@material-ui/core/Box';\n\n\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: `${theme.spacing(1)}px 0`,\n    width: \"100%\"\n  }\n}));\n\nexport default function InputText({\n  defautRows = 4,\n  name,\n  onChanged,\n  defaultValue\n}) {\n  const classes = useStyles();\n\n  const handleOnChange = event => {\n    onChanged({ [name]: event.target.value });\n  };\n\n  return (\n    <TextField\n      className={classes.root}\n      label={name ? name.replace(\"_\", \" \").toUpperCase() : undefined}\n      multiline\n      rows={defautRows}\n      variant=\"outlined\"\n      name={name}\n      defaultValue={defaultValue}\n      onChange={handleOnChange}\n    />\n  );\n}\n","import React from \"react\";\nimport InputText from \"./InputText\";\n\nexport default function Template({ onChanged, defaultValue }) {\n  return (\n    <div>\n      <InputText\n        name=\"pre_text\"\n        defaultValue={defaultValue[\"pre_text\"]}\n        onChanged={onChanged}\n      ></InputText>\n      <InputText\n        name=\"table_columns\"\n        defaultValue={defaultValue[\"table_columns\"]}\n        onChanged={onChanged}\n      ></InputText>\n      <InputText\n        name=\"post_text\"\n        defaultValue={defaultValue[\"post_text\"]}\n        onChanged={onChanged}\n      ></InputText>\n    </div>\n  );\n}\n","import React from \"react\";\nimport InputText from \"./InputText\";\n\nexport default function SourceInput({ defaultValue, onChanged }) {\n  return (\n    <div>\n      <InputText\n        name=\"variables\"\n        defautRows={1}\n        defaultValue={defaultValue[\"source_variables\"]}\n        onChanged={onChanged}\n      ></InputText>\n      <InputText\n        defautRows={6}\n        defaultValue={defaultValue[\"source_data\"]}\n        onChanged={onChanged}\n      ></InputText>\n      <InputText\n        defautRows={10}\n        name=\"table_data\"\n        defaultValue={defaultValue[\"table_data\"]}\n        onChanged={onChanged}\n      ></InputText>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Tabs, Tab } from \"@material-ui/core\";\nimport TabPanel from \"./TabPanel\";\nimport Template from \"./Template\";\nimport Source from \"./Source\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n    // border:\n    // backgroundColor: theme.palette.background.paper,\n  }\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nexport default function InputPages({ onChanged, defaultValue }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    console.log(newValue);\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"simple tabs example\"\n      >\n        <Tab label=\"Source Data\" {...a11yProps(0)} />\n        <Tab label=\"Template\" {...a11yProps(1)} />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <Source onChanged={onChanged} defaultValue={defaultValue}></Source>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Template onChanged={onChanged} defaultValue={defaultValue}></Template>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport InputPages from \"./InputPages\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    minHeight: 640,\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function InputContents({ onChanged, defaultValue }) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <InputPages\n        onChanged={onChanged}\n        defaultValue={defaultValue}\n      ></InputPages>\n    </Paper>\n  );\n}\n","import React from \"react\";\n\nconst styles = {\n  table: {\n    margin: \"20px 0\",\n    width: \"80%\",\n    fontSize: \"10pt\",\n    borderBottom: \"2px solid #444444\",\n    borderCollapse: \"collapse\"\n  },\n  th: {\n    backgroundColor: \"#e6e6e6\",\n    borderTop: \"2px solid #444444\",\n    borderBottom: \"2px solid #444444\",\n    padding: \"5px 10px\",\n    textAlign: \"center\",\n    fontWeight: \"bold\"\n  },\n  td: {\n    borderBottom: \"1px solid #444444\",\n    padding: \"5px 10px\",\n    textAlign: \"left\"\n  }\n};\n\nexport default function ViewTable({ columns = \"\", data = \"\" }) {\n  return columns && data ? (\n    <table style={styles.table}>\n      <thead>\n        <tr>\n          {columns.split(\",\").map((columnName, idx) => {\n            return (\n              <th style={styles.th} key={idx}>\n                {columnName}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {data.split(\"\\n\").map((row, idx) => {\n          return row ? (\n            <tr key={row + \"\" + idx}>\n              {row.split(\",\").map((columnItem, idx) => {\n                return (\n                  <td style={styles.td} key={columnItem + \"\" + idx}>\n                    {columnItem ? columnItem.trim() : \"\"}\n                  </td>\n                );\n              })}\n            </tr>\n          ) : (\n            \"\"\n          );\n        })}\n      </tbody>\n    </table>\n  ) : (\n    \"\"\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"20px 0 20px 0\",\n    textAlign: \"left\"\n  }\n}));\n\nconst splitTextNewLine = function(data = \"\") {\n  return data.split(\"\\n\").map((line, idx) => {\n    return (\n      <span key={idx}>\n        {line}\n        <br />\n      </span>\n    );\n  });\n};\n\nexport default function ViewText(props) {\n  const classes = useStyles();\n  const { data } = props;\n\n  return (\n    <div className={classes.root}>\n      {splitTextNewLine(data)}\n      {/* {typeof data === \"string\" ? data : \"empty\"} */}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ViewTable from \"./ViewTable\";\nimport ViewText from \"./ViewText\";\n\nexport default function ViewSet({ id, inputData }) {\n  const { pre_text, table_columns, table_data, post_text } = inputData;\n\n  return (\n    <div id={id}>\n      <ViewText data={pre_text ? pre_text : \"Click >> Button\"}></ViewText>\n      <ViewTable columns={table_columns} data={table_data}></ViewTable>\n      <ViewText data={post_text}></ViewText>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction clickButton(e, targetId) {\n  e.preventDefault();\n  console.log(targetId)\n  copyToClip(document.getElementById(targetId));\n}\n\nfunction copyToClip(str) {\n  if (!str) {\n    alert(\"empty data!\");\n    return;\n  }\n  function listener(e) {\n    e.clipboardData.setData(\"text/html\", str.innerHTML);\n    e.clipboardData.setData(\"text/plain\", str.innerHTML);\n    console.log(e.clipboardData.__proto__);\n    // e.clipboardData.style(\"cssText\", \"color: blue;\")\n    e.preventDefault();\n  }\n  // div.innerHTML = \"your div content\";\n  // div.style.cssText = document.defaultView.getComputedStyle(p, \"\").cssText;\n\n  document.addEventListener(\"copy\", listener);\n  document.execCommand(\"copy\");\n  document.removeEventListener(\"copy\", listener);\n}\n\nexport default function CopyButton({ targetId }) {\n  return (\n    <Button onClick={e => clickButton(e, targetId)} variant=\"outlined\">\n      COPY\n    </Button>\n  );\n}\n","import React from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ViewSet from \"./ViewSet\";\nimport CopyButton from \"./CopyButton\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 5,\n    textAlign: \"right\",\n    color: \"black\",\n    fontSize: \"10pt\",\n    fontFamily: \"맑은 고딕\"\n  }\n}));\n\nexport default function ViewContents({ dataList }) {\n  const classes = useStyles();\n  // const { pre_text, table_columns, table_data, post_text } = inputData;\n\n  return (\n    dataList &&\n    dataList.map((data, idx) => {\n      return data ? (\n        <Paper className={classes.paper} key={idx}>\n          <CopyButton targetId={`contents${idx+1}`}></CopyButton>\n          <ViewSet id={`contents${idx+1}`} inputData={data}></ViewSet>\n        </Paper>\n      ) : (\n        \"\"\n      );\n    })\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles({\n  root: {\n    minWidth: \"unset\",\n    width: \"100%\",\n    height: \"100%\",\n    // color: \"#f0f0f0\"\n    color:  \"black\"\n  }\n});\n\nexport default function RunButton({ onClick }) {\n  const classes = useStyle();\n  return (\n    <Button\n      className={classes.root}\n      variant=\"contained\"\n      // color=\"primary\"\n      onClick={onClick}\n    >\n      >>\n    </Button>\n  );\n}\n","export default {\n  source_variables:`target, birthday, nickname, phone`,\n  source_data:`maisy, 910105, mk, 010111222\njinmin, 111111, mj, 1234567777\ndalkomm, 222222, coffee, 89898989`,\n  pre_text: `Hello\nMy name is __target__\n이건 맑은고딕일까요 아닐까요\n내생일은 __birthday__ 입니다. 내 닉네임은 __nickname__ 입니다.`,\n  table_columns: \"name, married, age\",\n  table_data: `person1, true, 50\nperson2, false, 14\nperson3, false, 14\n\nicecream, baskin, rabins\ndunkin, donuts, strawberry\ndam, sosagol, sundae\negg, drop, hungry\n\nsecond1, false, 1\nsecond2, false, 10`,\n  post_text: \"Thanks. my phone number is __phone__.\"\n};\n","import React, { useState, useCallback } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport InputContents from \"./components/in/ContentsWrapper\";\nimport ViewContents from \"./components/out/ContentsWrapper\";\nimport RunButton from \"./components/RunButton\";\n// import CopyButton from \"./components/CopyButton\"\nimport SampleInput from \"./resource/sample\";\n\nconst replaceVariables = input => {\n  const {\n    //data\n    source_variables,\n    source_data,\n    table_data,\n\n    //template\n    pre_text,\n    post_text,\n    table_columns\n  } = input;\n  const variableList = source_variables.split(\",\");\n  const dataList = source_data.split(\"\\n\");\n  const tableDataList = table_data.split(\"\\n\\n\");\n\n  const parseText = (str, variables, row) => {\n    const data = row.split(\",\");\n    let rst = str;\n    variables.forEach((variable, idx) => {\n      rst = rst.replace(`__${variable.trim()}__`, data[idx].trim());\n    });\n    return rst;\n  };\n\n  return dataList.map((userData, idx) => {\n    return {\n      table_columns,\n      pre_text: parseText(pre_text, variableList, userData),\n      post_text: parseText(post_text, variableList, userData),\n      table_data: tableDataList[idx]\n    };\n  });\n};\n\nfunction App() {\n  const [inputData, setInputData] = useState(SampleInput);\n  const [viewData, setViewData] = useState([]);\n\n  const onInputChanged = useCallback(\n    dataObject => {\n      setInputData(inputData => {\n        return { ...inputData, ...dataObject };\n      });\n    },\n    // [setInputData]\n    []\n  );\n\n  // useMemo\n  const onRun = useCallback(() => {\n    const parsed = replaceVariables(inputData);\n\n    setViewData(parsed);\n  }, [inputData, setViewData]);\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={5}>\n          <InputContents\n            defaultValue={inputData}\n            onChanged={onInputChanged}\n          ></InputContents>\n        </Grid>\n        <Grid item xs={12} sm={12} md={1}>\n          <RunButton onClick={onRun}></RunButton>\n        </Grid>\n        <Grid item xs={12} sm={12} md={5}>\n          <ViewContents dataList={viewData}></ViewContents>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}