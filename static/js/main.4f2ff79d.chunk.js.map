{"version":3,"sources":["components/in/TabPanel.js","components/in/InputText.js","resource/sample.js","store/modules/contents.js","components/in/Template.js","components/in/Source.js","store/modules/static.js","components/in/UserEmails.js","components/in/EquipInfos.js","components/in/StaticData.js","components/in/InputPages.js","components/in/ContentsWrapper.js","components/out/ViewTable.js","components/out/ViewText.js","components/out/ViewSet.js","components/out/CopyButton.js","components/out/Receiver.js","components/out/ContentsWrapper.js","components/RunButton.js","components/ExternalButtonGroup.js","utils/file.js","utils/date.js","App.js","serviceWorker.js","store/modules/index.js","store/index.js","index.js"],"names":["TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","useStyles","makeStyles","theme","root","margin","spacing","width","InputText","defautRows","name","label","onChanged","classes","TextField","className","replace","toUpperCase","multiline","rows","variant","onChange","event","console","error","log","target","email","equip_info_columns","equip_info_data","pre_text","table_columns_label","table_columns_hide","table_rows_label","post_text","source_variables","source_data","table_data","ContentsActions","setPreText","createAction","text","setPostText","setTextData","setTableData","data","setVariables","variables","setTableColumnsLabel","setTableRowsLabel","importContentsData","exportContentsData","parseData","initialState","preTextSchema","Sample","postTextSchema","table","columnsLabel","split","rowsLabel","textData","tableData","result","fileData","parseText","template","row","length","rst","forEach","variable","idx","regex","RegExp","trim","handleActions","state","action","produce","draft","payload","join","variablieList","textDataList","tableDataList","getEmailId","dataRow","map","emailId","tableColumnsLabel","tableRowsLabel","preText","postText","connect","contents","dispatch","bindActionCreators","StaticActions","setUserEmails","setEquipmentInfos","setEquipmentColumns","getReceiver","importEmailData","exportEmailData","userEmails","equipColumns","equipInfos","receiver","userMailMap","userInfo","getUserMails","nameList","equipReceiverMap","info","infoObj","UserEmails","useDispatch","mailValue","useSelector","static","defaultData","defaultColumns","onColumnChange","onDataChange","heading","fontSize","typography","pxToRem","secondaryHeading","color","palette","secondary","ControlledExpansionPanels","React","useState","expanded","setExpanded","handleChange","panel","isExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","flexGrow","tab","a11yProps","InputPages","tabIdx","setTabIdx","Tabs","newValue","aria-label","Tab","Source","paper","minHeight","InputContents","Paper","styles","height","border","borderCollapse","th","backgroundColor","padding","textAlign","fontWeight","td","first","emphasis","ViewTable","hasStaticRowsLabel","style","columnName","arr","thStyle","key","rowIdx","columnItem","colIdx","tdStyle","ViewText","line","splitTextNewLine","ViewSet","inputData","clickButton","e","targetId","preventDefault","str","alert","listener","clipboardData","setData","innerHTML","__proto__","document","addEventListener","execCommand","removeEventListener","copyToClip","getElementById","CopyButton","Button","onClick","keyId","receiverList","fontFamily","contentsData","dataList","useStyle","minWidth","ExternalButtonGroup","save","setSave","contentsFileData","staticFileData","importActions","useEffect","filename","element","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","saveFile","date","year","getFullYear","month","getMonth","day","getDate","getFormatDate","Date","JSON","stringify","Input","type","evt","callBack","files","reader","FileReader","f","onload","parse","readAsText","loadJsonFile","inputProps","accept","size","App","Grid","container","item","xs","sm","md","Boolean","window","location","hostname","match","combineReducers","contentsReducers","staticReducers","logger","createLogger","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f2ff79d.chunk.js","sourcesContent":["import React from \"react\";\n// import PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from '@material-ui/core/Box';\n\n\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: `${theme.spacing(1)}px 0`,\n    width: '100%',\n  },\n}))\n\nexport default function InputText({\n  defautRows = 4,\n  name,\n  label,\n  onChanged,\n  value,\n}) {\n  const classes = useStyles()\n\n  const handleOnChange = event => {\n    // console.log(event.target.value)\n    // onChanged({ [name]: event.target.value });\n    if (typeof onChanged !== 'function') {\n      console.error('onChanged is not function')\n      console.log(onChanged)\n      return\n    }\n\n    onChanged(event.target.value)\n  }\n\n  return (\n    <TextField\n      className={classes.root}\n      label={label ? label : name.replace('_', ' ').toUpperCase()}\n      multiline\n      rows={defautRows}\n      variant=\"outlined\"\n      name={name}\n      value={value}\n      onChange={handleOnChange}\n    />\n  )\n}\n","export default {\n  //emails\n  email: `mk1, 아침이멜@hello.word\nmk2, 점심이멜@hello.word\nmk3, 저녁이멜@hello.word\nmj, kkk@aaa.bbb`,\n\n  //equipment infos\n  equip_info_columns:`ID, 아침, 점심, 저녁`,\n  equip_info_data: `MBA310, mk1, mk2, mk3\nMBAB10, mj, mjjjj, mjjjjjjjjj\nMBAB20, kakao, akao, bkao`,\n\n\n //schema\n  pre_text: `[BMP] __Req No.__ / __Discipline__ - VP Out pending 현황 송부의 件\n수신 : 수신자 제위\n발신 : 김민진 대리 / 장치 공정관리\n\n안녕하세요.\n업무에 노고가 많으십니다.\nBMP 프로젝트 '__Req No.__ / __Discipline__ - __Supplier__' 관련 VP OUT pending 현황 송부 드립니다.\n\n<VP OUT pending 현황>`,\ntable_columns_label: \"구분, 2월 1주, 2월 2주\",\ntable_columns_hide: \"장치\",\ntable_rows_label: \"설계, 공정관리, 조달검사, PE, QA/QC, 발주처 대기, Total\",\npost_text: `첨부파일 확인 후, 지연 중인 문건들에 대한 검토 및 VP IOC 부탁드립니다.\n\n발주처 Comment 대기 문서(노란색으로 표시된 문서)에 대해서는 발주처 Comment 접수 후 빠른 VP IOC 진행 부탁 드립니다.\n\n문의사항 있으시면 연락 부탁 드립니다.\n감사합니다.`,\n\n  //data\n  source_variables: `Req No., Discipline, Supplier`,\n  source_data: `MBA310,HYDROGEN PLANT STEAM REFORMER,TECHNIP FMC\nMBAB10,SRU REACTION FURNACE-WASTE HEAT BOILER AND STEAM DRUM,ZEECO\nMBAB20,INCINERATOR PACKAGE,ZEECO\nMCA110,TRAYS AND INTERNALS FOR COLUMNS,GTC\nMDA110,CS COLUMNS,GS ENTEC\nMDA120,CLADDED COLUMNS,GS ENTEC\nMDB110,REACTORS,HANTECH\nMEA110,CS SHELL & TUBE HEAT EXCHANGER,CURO\nMEA120,WET H2S AND SPECIAL SERVICE CS SHELL & TUBE HEAT EXCHANGER,CURO\nMEA130,SS & CLAD SHELL AND TUBES HEAT EXCHANGERS,GODREJ\nMEA810,SULPHUR CONDERSER,CURO\nMEB110,PLATE AND FRAME HEAT EXCHANGER,LHE\nMEB810,PLATE AND SHELL HEAT EXCHANGER,VAHTERUS OY  \nMEC120,AIR COOLERS,DTS\nMEE110,EJECTOR,SAMWON\nMEE410,DESUPERHEATER,SAMWON\nMFA110,STAINLESS STEEL & CLAD VESSELS,ULP\nMFA120,CS VESSELS ABOVE 19 MM THICKNESS 20 Ton,WOOYANG\nMFA130,CS VESSEL BELOW 19 MM THICKNESS 20 Ton,UBEC\nMFA140,STORAGE BULLETS,DOOSAN MECATEC\nMFA210,DEAERATOR,POWER HX\nMFB110,STORAGE TANK,HIDADA\nMFF110,FILTERS,BEA TECHNOLOGIES \nMFF120,SULPHUR LOCK,CSI  \nMFF610,COALESCER,PARKER\nMFF620,Electrostatic Coalescer,HOWE BAKER INT'L LTD\nMUA110,AUXILIARY STEAM BOILERS,MACCHI\nMZAZ00,LADDERS AND PLATFORMS,AMA\nMUHZZ0,FEED STRAINERS,CDB ENGINEERING`,\n  table_data: `3,0\n1,0\n11,9\n0,0\n0,0\n0,0\n15,9\n\n5,1\n0,2\n0,1\n0,0\n0,0\n0,0\n5,4\n\n1,1\n0,1\n0,0\n0,0\n0,0\n0,0\n1,2\n\n0,2\n1,2\n0,3\n0,0\n0,0\n0,0\n1,7\n\n8,6\n1,0\n0,0\n1,1\n0,0\n0,0\n10,7\n\n0,0\n2,2\n0,0\n0,0\n0,0\n0,0\n2,2\n\n54,18\n0,0\n0,0\n0,0\n0,0\n0,0\n54,18\n\n40,41\n1,2\n1,0\n0,0\n0,0\n1,1\n43,44\n\n12,12\n1,1\n3,0\n0,0\n0,0\n0,0\n16,13\n\n6,6\n0,0\n0,0\n0,0\n0,0\n0,0\n\n6,6\n110,52\n2,2\n0,1\n0,0\n0,0\n1,1\n113,56\n\n1,3\n1,1\n0,0\n0,0\n0,0\n0,0\n2,4\n\n1,4\n0,0\n2,2\n0,0\n0,0\n0,0\n3,6\n\n61,151\n0,0\n3,3\n0,0\n0,0\n0,0\n64,154\n\n0,1\n0,0\n0,0\n0,0\n0,0\n0,0\n0,1\n\n15,0\n1,0\n0,0\n0,0\n0,0\n0,0\n16,0\n\n80,62\n2,1\n0,0\n0,0\n0,0\n0,0\n82,63\n\n51,44\n0,1\n0,2\n0,0\n0,0\n0,0\n51,47\n\n143,276\n0,1\n0,0\n0,0\n0,0\n0,0\n143,277\n\n19,19\n0,0\n1,0\n0,0\n0,0\n0,0\n20,19\n\n1,0\n0,0\n1,1\n0,0\n0,0\n0,0\n2,1\n\n26,26\n2,0\n0,0\n0,0\n0,0\n0,0\n28,26\n\n1,1\n0,0\n2,2\n0,0\n0,0\n0,0\n3,3\n\n0,2\n1,0\n0,0\n0,0\n0,0\n0,0\n1,2\n\n1,1\n1,0\n0,0\n0,0\n1,0\n0,0\n3,1\n\n5,4\n2,0\n1,1\n0,0\n0,0\n0,0\n8,5\n\n24,19\n0,0\n4,4\n0,0\n0,0\n0,0\n28,23\n\n0,0\n2,1\n0,0\n0,0\n0,0\n0,0\n2,1`\n};\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport Sample from '../../resource/sample';\n\n// 액션 타입 정의\nconst SET_PRE_TEXT = 'template/SET_PRE_TEXT';\nconst SET_POST_TEXT = 'template/SET_POST_TEXT';\nconst SET_VARIABLES = 'template/SET_VARIABLES';\n\nconst SET_TEXT_DATA = 'data/SET_TEXT_DATA';\nconst SET_TABLE_DATA = 'data/SET_TABLE_DATA';\nconst SET_TABLE_COLUMNS = 'data/SET_TABLE_COLUMNS';\nconst SET_TABLE_ROWS = 'data/SET_TABLE_ROWS';\nconst IMPORT_CONTENTS_DATA = 'data/IMPORT_CONTENTS_DATA';\nconst EXPORT_CONTENTS_DATA = 'data/EXPORT_CONTENTS_DATA';\n\nconst PARSE_DATA = 'PARSE_DATA';\n\n// **** 액션 생섬함수 정의\nexport const ContentsActions = {\n  setPreText: createAction(SET_PRE_TEXT, text => text),\n\n  setPostText: createAction(SET_POST_TEXT, text => text),\n\n  setTextData: createAction(SET_TEXT_DATA, text => text),\n  setTableData: createAction(SET_TABLE_DATA, data => data),\n  setVariables: createAction(SET_VARIABLES, variables => variables),\n\n  setTableColumnsLabel: createAction(SET_TABLE_COLUMNS, text => text),\n  setTableRowsLabel: createAction(SET_TABLE_ROWS, text => text),\n  importContentsData: createAction(IMPORT_CONTENTS_DATA, data => data),\n  exportContentsData: createAction(EXPORT_CONTENTS_DATA, data => data),\n\n  parseData: createAction(PARSE_DATA),\n};\n\nconst initialState = {\n  //schema\n  preTextSchema: Sample.pre_text,\n  postTextSchema: Sample.post_text,\n  table: {\n    columnsLabel: Sample.table_columns_label.split(','),\n    rowsLabel: Sample.table_rows_label\n      ? Sample.table_rows_label.split(',')\n      : [],\n  },\n\n  //data\n  variables: Sample.source_variables,\n  textData: Sample.source_data,\n  tableData: Sample.table_data,\n\n  //result\n  result: [],\n\n  fileData: {},\n};\n\nconst parseText = (template, variables, row) => {\n  const data = row.split(',');\n  if (!template || data.length === 0) {\n    return 'error';\n  }\n  let rst = template;\n  // console.log(template);\n  variables.forEach((variable, idx) => {\n    var regex = new RegExp(`__${variable.trim() || ''}__`, 'g');\n    if (rst) {\n      rst = rst.replace(regex, data[idx].trim());\n    }\n  });\n  return rst;\n};\n\nexport default handleActions(\n  {\n    //schema\n    [SET_PRE_TEXT]: (state, action) =>\n      produce(state, draft => {\n        draft.preTextSchema = action.payload;\n      }),\n    [SET_POST_TEXT]: (state, action) =>\n      produce(state, draft => {\n        draft.postTextSchema = action.text;\n      }),\n    [SET_VARIABLES]: (state, action) =>\n      produce(state, draft => {\n        draft.variables = action.variables;\n      }),\n\n    //data\n    [SET_TEXT_DATA]: (state, action) =>\n      produce(state, draft => {\n        draft.textData = action.text;\n      }),\n    [SET_TABLE_DATA]: (state, action) =>\n      produce(state, draft => {\n        draft.tableData = action.data;\n      }),\n    [SET_TABLE_COLUMNS]: (state, action) =>\n      produce(state, draft => {\n        draft.table = {\n          ...draft.table,\n          columnsLabel: action.text.split(','),\n        };\n      }),\n    [SET_TABLE_ROWS]: (state, action) =>\n      produce(state, draft => {\n        draft.table = {\n          ...draft.table,\n          rowsLabel: action.text ? action.text.split(',') : [],\n        };\n      }),\n\n    [IMPORT_CONTENTS_DATA]: (state, action) => {\n      const data = action.payload;\n      return produce(state, draft => {\n        draft.preTextSchema = data.pre_text;\n        draft.postTextSchema = data.post_text;\n        draft.table = {\n          columnsLabel: data.table_columns_label.split(','),\n          rowsLabel: data.table_rows_label\n            ? data.table_rows_label.split(',')\n            : [],\n        };\n        draft.variables = data.source_variables;\n        draft.textData = data.source_data;\n        draft.tableData = data.table_data;\n      });\n    },\n    [EXPORT_CONTENTS_DATA]: (state, action) =>\n      produce(state, draft => {\n        draft.fileData = {\n          pre_text: draft.preTextSchema,\n          post_text: draft.postTextSchema,\n          table_columns_label: draft.table.columnsLabel.join(','),\n          table_rows_label: draft.table.rowsLabel.join(','),\n          source_variables: draft.variables,\n          source_data: draft.textData,\n          table_data: draft.tableData,\n        };\n      }),\n\n    [PARSE_DATA]: (state, action) => {\n      const {\n        preTextSchema,\n        postTextSchema,\n        variables = '',\n        textData = '',\n        tableData = '',\n        table,\n      } = state;\n      const variablieList = variables.split(',');\n      const textDataList = textData.split('\\n');\n      const tableDataList = tableData.split('\\n\\n');\n      const getEmailId = (dataRow = '') => {\n        return dataRow.split(',')[0];\n      };\n\n      return produce(state, draft => {\n        draft.result = textDataList.map((data, idx) => ({\n          emailId: getEmailId(data),\n          tableColumnsLabel: table.columnsLabel,\n          tableRowsLabel: table.rowsLabel,\n          preText: parseText(preTextSchema, variablieList, data),\n          postText: parseText(postTextSchema, variablieList, data),\n          tableData: tableDataList[idx],\n        }));\n      });\n    },\n  },\n  initialState\n);\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport InputText from './InputText'\nimport { ContentsActions } from '../../store/modules/contents'\n\nfunction Template({\n  preTextSchema,\n  postTextSchema,\n  tableColumnsLabel,\n  tableRowsLabel,\n  ContentsActions,\n}) {\n  return (\n    <div>\n      <InputText\n        name=\"pre_text\"\n        value={preTextSchema}\n        onChanged={ContentsActions.setPreText}\n      ></InputText>\n      <InputText\n        name=\"table_columns_label\"\n        label=\"Column Name\"\n        defautRows={1}\n        value={tableColumnsLabel}\n        onChanged={ContentsActions.setTableColumnsLabel}\n      ></InputText>\n      <InputText\n        name=\"table_rows_label\"\n        label=\"Rows Name (optional)\"\n        defautRows={1}\n        value={tableRowsLabel}\n        onChanged={ContentsActions.setTableRowsLabel}\n      ></InputText>\n      {/* <InputText\n        name=\"table_columns_hide\"\n        label=\"Hide Column Name\"\n        defautRows={1}\n        value={defaultValue[\"table_columns_hide\"]}\n        onChanged={onChanged}\n      ></InputText> */}\n      <InputText\n        name=\"post_text\"\n        value={postTextSchema}\n        onChanged={ContentsActions.setPostText}\n      ></InputText>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ contents }) => {\n  const { preTextSchema, postTextSchema, table } = contents\n  return {\n    preTextSchema,\n    postTextSchema,\n    tableColumnsLabel: table ? table.columnsLabel : [],\n    tableRowsLabel: table ? table.rowsLabel : [],\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  ContentsActions: bindActionCreators(ContentsActions, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Template)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport InputText from './InputText'\nimport { ContentsActions } from '../../store/modules/contents'\n\nfunction SourceInput({ variables, textData, tableData, ContentsActions }) {\n  return (\n    <div>\n      <InputText\n        name=\"source_variables\"\n        defautRows={1}\n        value={variables}\n        onChanged={ContentsActions.setVariables}\n      ></InputText>\n      <InputText\n        name=\"source_data\"\n        defautRows={6}\n        value={textData}\n        onChanged={ContentsActions.setTextData}\n      ></InputText>\n      <InputText\n        name=\"table_data\"\n        defautRows={10}\n        value={tableData}\n        onChanged={ContentsActions.setTableData}\n      ></InputText>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ contents }) => {\n  const { variables, textData, tableData } = contents\n  return {\n    variables,\n    textData,\n    tableData,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  ContentsActions: bindActionCreators(ContentsActions, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SourceInput)\n","import Sample from '../../resource/sample';\nimport { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nconst SET_USER_EMAILS = 'static/SET_USER_EMAILS';\nconst SET_EQUIP_INFOS = 'static/SET_EQUIP_INFOS';\nconst SET_EQUIP_COLS = 'static/SET_EQUIP_COLS';\nconst GET_RECEIVER = 'static/GET_RECEIVER';\nconst IMPORT_EMAIL_DATA = 'static/IMPORT_EMAIL_DATA';\nconst EXPORT_EMAIL_DATA = 'static/EXPORT_EMAIL_DATA';\n\nexport const StaticActions = {\n  setUserEmails: createAction(SET_USER_EMAILS, text => text),\n  setEquipmentInfos: createAction(SET_EQUIP_INFOS, data => data),\n  setEquipmentColumns: createAction(SET_EQUIP_COLS, data => data),\n  getReceiver: createAction(GET_RECEIVER),\n  importEmailData: createAction(IMPORT_EMAIL_DATA),\n  exportEmailData: createAction(EXPORT_EMAIL_DATA),\n};\n\nconst initialState = {\n  userEmails: Sample.email,\n  equipColumns: Sample.equip_info_columns,\n  equipInfos: Sample.equip_info_data,\n  receiver: {},\n  fileData: {},\n};\n\n//reducer: action, state를 받아서 새로운 상태를 리턴하는 애\nexport default handleActions(\n  {\n    [SET_USER_EMAILS]: (state, action) =>\n      produce(state, draft => {\n        draft.userEmails = action.payload;\n      }),\n    [SET_EQUIP_INFOS]: (state, action) =>\n      produce(state, draft => {\n        draft.equipInfos = action.payload;\n      }),\n    [SET_EQUIP_COLS]: (state, action) =>\n      produce(state, draft => {\n        draft.equipColumns = action.payload;\n      }),\n\n    [IMPORT_EMAIL_DATA]: (state, action) => {\n      const data = action.payload;\n      return produce(state, draft => {\n        draft.userEmails = data.email;\n        draft.equipInfos = data.equip_info_data;\n        draft.equipColumns = data.equip_info_columns;\n      });\n    },\n    [EXPORT_EMAIL_DATA]: (state, action) =>\n      produce(state, draft => {\n        draft.fileData = {\n          email: draft.userEmails,\n          equip_info_data: draft.equipInfos,\n          equip_info_columns: draft.equipColumns\n        };\n      }),\n\n    [GET_RECEIVER]: (state, action) => {\n      const { equipInfos, userEmails } = state;\n      const userMailMap = {};\n      userEmails.split('\\n').forEach(data => {\n        const userInfo = data.split(',');\n        userMailMap[userInfo[0].trim()] = userInfo[1].trim();\n      });\n      const getUserMails = (id, ...nameList) => {\n        return nameList.map(name => userMailMap[name.trim()] || '');\n      };\n      const equipReceiverMap = {};\n      equipInfos.split('\\n').forEach(info => {\n        const infoObj = info.split(',');\n        equipReceiverMap[infoObj[0].trim()] = getUserMails(...infoObj);\n      });\n\n      return {\n        ...state,\n        receiver: equipReceiverMap,\n      };\n    },\n  },\n  initialState\n);\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport InputText from './InputText'\n// import { connect } from 'react-redux'\n\nimport { StaticActions } from '../../store/modules/static'\n\nfunction UserEmails() {\n  const dispatch = useDispatch();\n  const mailValue = useSelector(state => state.static.userEmails)\n\n  const setUserEmailValue = (data)=>{\n    dispatch(StaticActions.setUserEmails(data))\n  }\n\n  return (\n    <InputText\n      name=\"email\"\n      defautRows={10}\n      value={mailValue}\n      onChanged={setUserEmailValue}\n    ></InputText>\n  )\n}\n\nexport default UserEmails\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport InputText from './InputText'\nimport { makeStyles } from '@material-ui/core'\nimport { StaticActions } from '../../store/modules/static'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n})\n\nfunction EquipInfos({\n  defaultData,\n  defaultColumns,\n  onColumnChange,\n  onDataChange,\n}) {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <InputText\n        name=\"equip_info_columns\"\n        defautRows={1}\n        value={defaultColumns}\n        onChanged={onColumnChange}\n      ></InputText>\n      <InputText\n        name=\"equip_info_data\"\n        defautRows={10}\n        value={defaultData}\n        onChanged={onDataChange}\n      ></InputText>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  defaultData: state.static.equipInfos,\n  defaultColumns: state.static.equipColumns,\n})\nconst mapDispatchToProps = dispatch => ({\n  onColumnChange: value => dispatch(StaticActions.setEquipmentColumns(value)),\n  onDataChange: value => dispatch(StaticActions.setEquipmentInfos(value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipInfos)\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport UserEmails from \"./UserEmails\";\nimport EquipInfos from \"./EquipInfos\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15)\n    // flexBasis: \"33.33%\",\n    // flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function ControlledExpansionPanels() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading}>User Emails</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <UserEmails></UserEmails>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}>\n            Equipment Informations\n          </Typography>\n          {/* <Typography className={classes.secondaryHeading}>\n            You are currently not an owner\n          </Typography> */}\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <EquipInfos></EquipInfos>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Tabs, Tab } from '@material-ui/core'\nimport TabPanel from './TabPanel'\nimport Template from './Template'\nimport Source from './Source'\nimport StaticData from './StaticData'\n// import UserEmails from \"./UserEmails\";\n// import EquipInfos from \"./EquipInfos\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  tab: {},\n}))\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default function InputPages(){\n  const classes = useStyles()\n  const [tabIdx, setTabIdx] = React.useState(0)\n\n  const handleChange = (event, newValue) => {\n    setTabIdx(newValue)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        value={tabIdx}\n        onChange={handleChange}\n        aria-label=\"simple tabs example\"\n      >\n        <Tab label=\"Email\" className={classes.tab} {...a11yProps(0)} />\n        <Tab label=\"Template\" className={classes.tab} {...a11yProps(1)} />\n        <Tab label=\"Source Data\" className={classes.tab} {...a11yProps(2)} />\n      </Tabs>\n      <TabPanel value={tabIdx} index={0}>\n        <StaticData></StaticData>\n      </TabPanel>\n      <TabPanel value={tabIdx} index={1}>\n        <Template></Template>\n      </TabPanel>\n      <TabPanel value={tabIdx} index={2}>\n        <Source></Source>\n      </TabPanel>\n    </div>\n  )\n}\n","import React from 'react'\nimport InputPages from './InputPages'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    minHeight: 640,\n    color: theme.palette.text.secondary,\n  },\n}))\n\nexport default function InputContents() {\n  const classes = useStyles()\n  return (\n    <Paper className={classes.paper}>\n      <InputPages></InputPages>\n    </Paper>\n  )\n}\n","import React from \"react\";\n\nconst styles = {\n  table: {\n    margin: \"20px 0\",\n    width: \"350px\",\n    height: 200,\n    fontSize: \"10pt\",\n    border: \"1px solid black\",\n    borderCollapse: \"collapse\"\n  },\n  th: {\n    backgroundColor: \"#e6e6e6\",\n    border: \"1px solid #444444\",\n    padding: \"5px 10px\",\n    // padding: 0,\n    textAlign: \"center\",\n    fontWeight: \"bold\"\n  },\n  td: {\n    border: \"1px solid #444444\",\n    padding: \"5px 10px\",\n    // padding: 0,\n    textAlign: \"center\"\n  },\n  first: {\n    textAlign: \"left\"\n  },\n  emphasis: {\n    color: \"red\",\n    fontWeight: \"bold\"\n  }\n};\n\nexport default function ViewTable({\n  columnsLabel = [],\n  rowsLabel = [],\n  data = \"\"\n}) {\n  const hasStaticRowsLabel = rowsLabel.length > 0;\n  return columnsLabel && data ? (\n    <table style={styles.table}>\n      <thead>\n        <tr>\n          {columnsLabel.map((columnName, idx, arr) => {\n            const thStyle =\n              arr.length === idx + 1\n                ? { ...styles.th, ...styles.emphasis }\n                : styles.th;\n            return (\n              <th style={thStyle} key={idx}>\n                {columnName}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {data.split(\"\\n\").map((row, rowIdx) => {\n          return row ? (\n            <tr key={row + \"\" + rowIdx}>\n              {hasStaticRowsLabel && (\n                <td style={styles.th} key={rowsLabel + \"\" + rowIdx}>\n                  {rowsLabel[rowIdx] ? rowsLabel[rowIdx].trim() : \"\"}\n                </td>\n              )}\n              {row.split(\",\").map((columnItem, colIdx, arr) => {\n                const tdStyle = (index => {\n                  if (arr.length === index + 1)\n                    return { ...styles.td, ...styles.emphasis };\n                  else {\n                    return styles.td;\n                  }\n                })(colIdx);\n                return (\n                  <td style={tdStyle} key={columnItem + \"\" + colIdx}>\n                    {columnItem ? columnItem.trim() : \"\"}\n                  </td>\n                );\n                // }\n              })}\n            </tr>\n          ) : (\n            \"\"\n          );\n        })}\n      </tbody>\n    </table>\n  ) : (\n    \"\"\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"20px 0 20px 0\",\n    textAlign: \"left\"\n  }\n}));\n\nconst splitTextNewLine = function(data = \"\") {\n  return data.split(\"\\n\").map((line, idx) => {\n    return (\n      <span key={idx}>\n        {line}\n        <br />\n      </span>\n    );\n  });\n};\n\nexport default function ViewText(props) {\n  const classes = useStyles();\n  const { data } = props;\n\n  return (\n    <div className={classes.root}>\n      {splitTextNewLine(data)}\n    </div>\n  );\n}","import React from \"react\";\nimport ViewTable from \"./ViewTable\";\nimport ViewText from \"./ViewText\";\n\nexport default function ViewSet({ id, inputData }) {\n  const { preText, tableColumnsLabel, tableRowsLabel, tableData, postText } = inputData;\n  return (\n    <div id={id}>\n      <ViewText data={preText}></ViewText>\n      <ViewTable columnsLabel={tableColumnsLabel} rowsLabel={tableRowsLabel} data={tableData}></ViewTable>\n      <ViewText data={postText}></ViewText>\n    </div>\n  );\n}","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction clickButton(e, targetId) {\n  e.preventDefault();\n  console.log(targetId)\n  copyToClip(document.getElementById(targetId));\n}\n\nfunction copyToClip(str) {\n  if (!str) {\n    alert(\"empty data!\");\n    return;\n  }\n  function listener(e) {\n    e.clipboardData.setData(\"text/html\", str.innerHTML);\n    e.clipboardData.setData(\"text/plain\", str.innerHTML);\n    console.log(e.clipboardData.__proto__);\n    // e.clipboardData.style(\"cssText\", \"color: blue;\")\n    e.preventDefault();\n  }\n  // div.innerHTML = \"your div content\";\n  // div.style.cssText = document.defaultView.getComputedStyle(p, \"\").cssText;\n\n  document.addEventListener(\"copy\", listener);\n  document.execCommand(\"copy\");\n  document.removeEventListener(\"copy\", listener);\n}\n\nexport default function CopyButton({ targetId }) {\n  return (\n    <Button onClick={e => clickButton(e, targetId)} variant=\"outlined\">\n      COPY\n    </Button>\n  );\n}\n","import React from \"react\";\nimport ViewText from \"./ViewText\";\nimport { connect } from \"react-redux\";\n\nfunction Receiver({ keyId, data }) {\n  const receiverList = data[keyId] || []\n  return <ViewText data={receiverList.join(\", \")}></ViewText>;\n}\n\nconst mapStateToProps = state => ({\n  data: state.static.receiver\n});\nexport default connect(mapStateToProps, () => ({}))(Receiver);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ViewSet from \"./ViewSet\";\nimport CopyButton from \"./CopyButton\";\nimport Receiver from \"./Receiver\";\nimport ViewText from \"./ViewText\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 5,\n    textAlign: \"right\",\n    color: \"black\",\n    fontSize: \"10pt\",\n    fontFamily: \"맑은 고딕\"\n  }\n}));\n\nfunction ViewContents({ contentsData: dataList }) {\n  const classes = useStyles();\n  return (\n    dataList &&\n    dataList.map((data, idx) => {\n      return data ? (\n        <Paper className={classes.paper} key={idx}>\n          <ViewText data={data.emailId}></ViewText>\n          <Receiver keyId={data.emailId}></Receiver>\n          <CopyButton targetId={`contents${idx + 1}`}></CopyButton>\n          <ViewSet id={`contents${idx + 1}`} inputData={data}></ViewSet>\n        </Paper>\n      ) : (\n        \"\"\n      );\n    })\n  );\n}\n\nconst mapStateToProps = state => ({\n  contentsData: state.contents.result\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewContents);\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ContentsActions } from '../store/modules/contents'\nimport { StaticActions } from '../store/modules/static'\n\nconst useStyle = makeStyles({\n  root: {\n    minWidth: 'unset',\n    width: '100%',\n    height: '100%',\n    // color: \"#f0f0f0\"\n    color: 'black',\n  },\n})\n\nfunction RunButton({ ContentsActions, StaticActions }) {\n  const classes = useStyle()\n  return (\n    <Button\n      className={classes.root}\n      variant=\"contained\"\n      // color=\"primary\"\n      onClick={() => {\n        StaticActions.getReceiver()\n        ContentsActions.parseData()\n      }}\n    >\n      >>\n    </Button>\n  )\n}\n\nconst mapStateToProps = state => ({})\n\n// const mapDispatchToProps = dispatch => ({\n//   parseData: () => dispatch(ContentsActions.parseData()),\n//   getReceiver: () => dispatch(getReceiver()),\n// })\nconst mapDispatchToProps = dispatch => ({\n  ContentsActions: bindActionCreators(ContentsActions, dispatch),\n  StaticActions: bindActionCreators(StaticActions, dispatch),\n})\n// bindActionCreators({ ContentsActions, getReceiver }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RunButton)\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContentsActions } from '../store/modules/contents';\nimport { StaticActions } from '../store/modules/static';\nimport { getFormatDate } from '../utils/date';\nimport { saveFile, loadJsonFile } from '../utils/file';\n\nfunction ExternalButtonGroup() {\n  const dispatch = useDispatch();\n  const [save, setSave] = useState(false);\n  const contentsFileData = useSelector(state => state.contents.fileData);\n  const staticFileData = useSelector(state => state.static.fileData);\n\n  const importActions = data => {\n    dispatch(StaticActions.importEmailData(data));\n    dispatch(ContentsActions.importContentsData(data));\n  };\n\n  const exportActions = () => {\n    dispatch(StaticActions.exportEmailData());\n    dispatch(ContentsActions.exportContentsData());\n    setSave(true);\n  };\n\n  useEffect(() => {\n    if (save) {\n      saveFile(\n        getFormatDate(new Date()) + '.json',\n        JSON.stringify({ ...staticFileData, ...contentsFileData })\n      );\n      setSave(false);\n    }\n  }, [save, contentsFileData, staticFileData]);\n\n  return (\n    <div>\n      {/* <label htmlFor=\"ex_file\">업로드</label> */}\n      <Input\n        // id=\"ex_file\"\n        type={'file'}\n        onChange={e => loadJsonFile(e, importActions)}\n        inputProps={{ accept: '.json' }}\n      ></Input>\n\n      <Button variant={'outlined'} size={'small'} onClick={exportActions}>\n        Save data\n      </Button>\n    </div>\n  );\n}\n\nexport default ExternalButtonGroup;\n","export function saveFile(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport function loadJsonFile(evt, callBack) {\n  var files = evt.target.files;\n\n  var reader = new FileReader();\n  const f = files[0];\n\n  // Closure to capture the file information.\n  reader.onload = function(e) {\n    try {\n      const data = e.target.result;\n      const inputData = JSON.parse(data);\n      callBack(inputData);\n    } catch (e) {\n      //TODO: error dialog\n      console.error(e);\n    }\n  };\n  // Read in the image file as a data URL.\n  reader.readAsText(f);\n}\n","/**\n *  yyyyMMdd 포맷으로 반환\n *  https://heum-story.tistory.com/27\n */\nexport function getFormatDate(date) {\n  var year = date.getFullYear(); //yyyy\n  var month = 1 + date.getMonth(); //M\n  month = month >= 10 ? month : '0' + month; //month 두자리로 저장\n  var day = date.getDate(); //d\n  day = day >= 10 ? day : '0' + day; //day 두자리로 저장\n  return year + '' + month + '' + day;\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport InputContents from \"./components/in/ContentsWrapper\";\nimport ViewContents from \"./components/out/ContentsWrapper\";\nimport RunButton from \"./components/RunButton\";\n// import SampleInput from \"./resource/sample\";\nimport ExternalButtonGroup from \"./components/ExternalButtonGroup\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={5}>\n          <ExternalButtonGroup></ExternalButtonGroup>\n          <InputContents></InputContents>\n        </Grid>\n        <Grid item xs={12} sm={12} md={1}>\n          <RunButton></RunButton>\n        </Grid>\n        <Grid item xs={12} sm={12} md={5}>\n          <ViewContents></ViewContents>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport contentsReducers from \"./contents\";\nimport staticReducers from \"./static\";\n\nexport default combineReducers({\n  contents: contentsReducers,\n  static: staticReducers\n  // 다른 리듀서를 만들게되면 여기에 넣어줌..\n});\n","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './modules'\n\n// **** 리덕스 개발자도구 적용\nimport { createLogger } from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst logger = createLogger()\n\n// const store = createStore(modules, applyMiddleware(logger))\n\n// const devTools =\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// const store = createStore(rootReducer, devTools, applyMiddleware(logger))\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger))\n)\n\n// const store = createStore(rootReducer);\n// console.log(store.getState());\n\nexport default store\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}