{"version":3,"sources":["components/in/TabPanel.js","components/in/InputText.js","resource/sample.js","store/modules/contents.js","pages/template/Template.js","pages/source/DataAddButton.js","pages/source/TableDataSet.js","pages/source/TableData.js","pages/source/Source.js","store/modules/static.js","pages/email/UserEmails.js","pages/email/EquipInfos.js","pages/email/StaticData.js","components/in/InputPages.js","components/in/ContentsWrapper.js","components/out/ViewText.js","components/out/PivotTable.js","components/out/ViewSet.js","components/out/CopyButton.js","components/out/Receiver.js","components/out/ContentsWrapper.js","components/common/RunButton.js","components/common/ExternalButtonGroup.js","utils/file.js","utils/date.js","pages/Layout.js","App.js","serviceWorker.js","store/modules/testAction.js","store/modules/index.js","store/index.js","index.js"],"names":["TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","useStyles","makeStyles","theme","root","margin","spacing","width","InputText","defautRows","name","label","onChanged","defaultValue","classes","TextField","key","className","replace","toUpperCase","multiline","rows","variant","onChange","event","console","error","log","target","ContentsActions","setPreText","createAction","text","setPostText","setTableColumnsLabel","setTableRowsLabel","setVariables","variables","setTextData","setTableDataSet","list","importContentsData","data","exportContentsData","parseData","splitWithTrim","d","split","map","str","trim","initialState","preTextSchema","Sample","postTextSchema","table","columnsLabel","rowsLabel","textData","tableSetList","defaultData","defaultRows","result","fileData","parseText","template","row","length","rst","forEach","variable","idx","regex","RegExp","handleActions","state","action","produce","draft","payload","inputData","pre_text","post_text","table_columns_label","table_rows_label","source_variables","source_data","table_data_rows1","table_data_week1","join","table_data_week2","table_data_rows2","table_data_week3","table_data_rows3","table_data_set","variableList","textDataList","tableDataPerKey","shouldSendMailMap","weekIdx","arr","week","weekKey","rowKeyList","rowIdx","col","colIdx","rowKey","push","warn","getEmailId","dataRow","mailKey","shouldSend","emailId","preText","postText","tableData","connect","contents","tableColumnsLabel","tableRowsLabel","dispatch","bindActionCreators","TableDataAddButton","onClick","Button","color","useStyle","textAlign","border","padding","TableDataSet","dataIdx","deleteCallback","setTableData","setData","setTableDataRows","setRow","IconButton","aria-label","size","edge","e","TableData","useSelector","useState","dataList","setDataList","useEffect","deleteDataFunc","selectedIdx","newList","idIdx","setOneData","newData","SourceInput","useDispatch","StaticActions","setUserEmails","setEquipmentInfos","setEquipmentColumns","getReceiver","importEmailData","exportEmailData","userEmails","equipColumns","equipInfos","receiver","email","equip_info_data","equip_info_columns","userMailMap","userInfo","getUserMails","nameList","equipReceiverMap","info","infoObj","UserEmails","mailValue","static","defaultColumns","onColumnChange","onDataChange","heading","fontSize","typography","pxToRem","secondaryHeading","palette","secondary","ControlledExpansionPanels","React","expanded","setExpanded","handleChange","panel","isExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","flexGrow","tab","a11yProps","InputPages","tabIdx","setTabIdx","Tabs","newValue","Tab","Source","paper","minHeight","InputContents","Paper","ViewText","line","splitTextNewLine","styles","height","borderCollapse","th","backgroundColor","fontWeight","td","first","emphasis","PivotTable","templateRowsLabel","dataRowsLabel","hasStaticRowsLabel","tableDataRows","pivotData","origin","Object","keys","dataKey","oneWeekColumn","i","keyNm","Array","isArray","rowNameIdx","keyIdx","pivot","indexOf","style","columnName","thStyle","columnItem","tdStyle","ViewSet","clickButton","targetId","preventDefault","alert","listener","clipboardData","innerHTML","__proto__","document","addEventListener","execCommand","removeEventListener","copyToClip","getElementById","CopyButton","keyId","receiverList","fontFamily","disabledPaper","ViewContents","store","classNames","minWidth","addRunClick","borderRadius","display","justifyContent","importButton","ExternalButtonGroup","save","setSave","contentsFileData","staticFileData","importActions","filename","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","saveFile","date","year","getFullYear","month","getMonth","day","getDate","getFormatDate","Date","JSON","stringify","Input","type","evt","callBack","files","reader","FileReader","f","onload","parse","readAsText","loadJsonFile","inputProps","accept","Layout","Grid","container","item","xs","sm","md","App","Boolean","window","location","hostname","match","combineReducers","contentsReducers","staticReducers","test","TestReducers","logger","createLogger","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05be6a0e.chunk.js","sourcesContent":["import React from \"react\";\n// import PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from '@material-ui/core/Box';\n\n\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: `${theme.spacing(1)}px 0`,\n    width: '100%',\n  },\n}));\n\nexport default function InputText({\n  defautRows = 4,\n  name,\n  label,\n  onChanged,\n  defaultValue = '',\n}) {\n  const classes = useStyles();\n\n  const handleOnChange = event => {\n    // console.log(event.target.value)\n    // onChanged({ [name]: event.target.value });\n    if (typeof onChanged !== 'function') {\n      console.error('onChanged is not function');\n      console.log(onChanged);\n      return;\n    }\n\n    onChanged(event.target.value);\n  };\n\n  return (\n    <TextField\n      key={defaultValue + '' + name}\n      className={classes.root}\n      label={label ? label : name.replace('_', ' ').toUpperCase()}\n      multiline\n      rows={defautRows}\n      variant=\"outlined\"\n      name={name}\n      defaultValue={defaultValue}\n      onChange={handleOnChange}\n    />\n  );\n}\n","export default {\n  //emails\n  email: `mk1, 아침이멜@hello.word\nmk2, 점심이멜@hello.word\nmk3, 저녁이멜@hello.word\nmj, kkk@aaa.bbb`,\n\n  //equipment infos\n  equip_info_columns: `ID, 아침, 점심, 저녁`,\n  equip_info_data: `MBA310, mk1, mk2, mk3\nMBAB10, mj, mjjjj, mjjjjjjjjj\nMBAB20, kakao, akao, bkao`,\n\n  //schema\n  pre_text: `[BMP] __Req No.__ / __Discipline__ - VP Out pending 현황 송부의 件\n수신 : 수신자 제위\n발신 : 김민진 대리 / 장치 공정관리\n\n안녕하세요.\n업무에 노고가 많으십니다.\nBMP 프로젝트 '__Req No.__ / __Discipline__ - __Supplier__' 관련 VP OUT pending 현황 송부 드립니다.\n\n<VP OUT pending 현황>`,\n  table_columns_label: '구분, 2월 1주, 2월 2주, 2월 3주',\n  table_columns_hide: '장치',\n  table_rows_label: '설계, 공정관리, 조달검사, PE, QA/QC, 발주처 대기, Total',\n  post_text: `첨부파일 확인 후, 지연 중인 문건들에 대한 검토 및 VP IOC 부탁드립니다.\n\n발주처 Comment 대기 문서(노란색으로 표시된 문서)에 대해서는 발주처 Comment 접수 후 빠른 VP IOC 진행 부탁 드립니다.\n\n문의사항 있으시면 연락 부탁 드립니다.\n감사합니다.`,\n\n  //data\n  source_variables: `Req No., Discipline, Supplier`,\n  source_data: `MBA310,HYDROGEN PLANT STEAM REFORMER,TECHNIP FMC`,\n  table_data_rows1: '조달검사, PE, 발주처 대기, 공정관리, Total',\n  table_data_week1: `MBA310, MBAB20, MDA110\n4,5,0\n1,6,1\n3,0,2\n5,1,2\n0,0,4`,\n  table_data_rows2: '발주처 대기, PE, 공정관리, Total',\n  table_data_week2: `MBA310, MBAB10, MCA110, MDA110\n5,1,1,2\n1,2,1,1\n2,1,0,1\n3,0,1,0`,\n  table_data_rows3: 'QA/QC, PE, 발주처 대기, 공정관리, Total',\n  table_data_week3: `MBA310, MDA110, MEA120\n8,6,1\n1,0,0\n0,0,0\n1,1,1\n0,0,3`,\n};\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport Sample from '../../resource/sample';\n\n// 액션 타입 정의\nconst SET_PRE_TEXT = 'template/SET_PRE_TEXT';\nconst SET_POST_TEXT = 'template/SET_POST_TEXT';\nconst SET_VARIABLES = 'template/SET_VARIABLES';\nconst SET_TABLE_COLUMNS = 'template/SET_TABLE_COLUMNS';\nconst SET_TABLE_ROWS = 'template/SET_TABLE_ROWS';\n\nconst SET_TEXT_DATA = 'data/SET_TEXT_DATA';\n// const SET_TABLE_DATA = 'data/SET_TABLE_DATA';\n// const SET_TABLE_DATA_ROWS = 'data/SET_TABLE_DATA_ROWS';\nconst SET_TABLE_DATA_SETS = 'data/SET_TABLE_DATA_SETS';\n\nconst IMPORT_CONTENTS_DATA = 'data/IMPORT_CONTENTS_DATA';\nconst EXPORT_CONTENTS_DATA = 'data/EXPORT_CONTENTS_DATA';\n\nconst PARSE_DATA = 'PARSE_DATA';\n\n// **** 액션 생섬함수 정의\nexport const ContentsActions = {\n  setPreText: createAction(SET_PRE_TEXT, text => text),\n  setPostText: createAction(SET_POST_TEXT, text => text),\n\n  setTableColumnsLabel: createAction(SET_TABLE_COLUMNS, text => text),\n  setTableRowsLabel: createAction(SET_TABLE_ROWS, text => text),\n\n  setVariables: createAction(SET_VARIABLES, variables => variables),\n  setTextData: createAction(SET_TEXT_DATA, text => text),\n\n  // setTableData: createAction(SET_TABLE_DATA, data => data),\n  // setTableDataRows: createAction(SET_TABLE_DATA_ROWS, data => data),\n  setTableDataSet: createAction(SET_TABLE_DATA_SETS, list => list),\n\n  importContentsData: createAction(IMPORT_CONTENTS_DATA, data => data),\n  exportContentsData: createAction(EXPORT_CONTENTS_DATA, data => data),\n\n  parseData: createAction(PARSE_DATA),\n};\n\nconst splitWithTrim = d => {\n  if (d) {\n    return d.split(',').map(str => str.trim());\n  }\n  return [];\n};\n\nconst initialState = {\n  //schema\n  preTextSchema: Sample.pre_text,\n  postTextSchema: Sample.post_text,\n  table: {\n    columnsLabel: splitWithTrim(Sample.table_columns_label),\n    rowsLabel: splitWithTrim(Sample.table_rows_label),\n  },\n\n  //data\n  variables: Sample.source_variables,\n  textData: Sample.source_data,\n  // tableDataRows: [\n  //   splitWithTrim(Sample.table_data_rows1),\n  //   splitWithTrim(Sample.table_data_rows2),\n  //   splitWithTrim(Sample.table_data_rows3),\n  // ],\n  // tableData: [\n  //   Sample.table_data_week1,\n  //   Sample.table_data_week2,\n  //   Sample.table_data_week3,\n  // ],\n  tableSetList: [\n    {\n      id: 0,\n      defaultData: Sample.table_data_week1,\n      defaultRows: Sample.table_data_rows1,\n    },\n    {\n      id: 1,\n      defaultData: Sample.table_data_week2,\n      defaultRows: Sample.table_data_rows2,\n    },\n    {\n      id: 2,\n      defaultData: Sample.table_data_week3,\n      defaultRows: Sample.table_data_rows3,\n    },\n  ],\n\n  //result\n  result: [],\n\n  fileData: {},\n};\n\nconst parseText = (template, variables, row) => {\n  const data = row.split(',');\n  if (!template || data.length === 0) {\n    return 'error';\n  }\n  let rst = template;\n  // console.log(template);\n  variables.forEach((variable, idx) => {\n    var regex = new RegExp(`__${variable.trim() || ''}__`, 'g');\n    if (rst) {\n      rst = rst.replace(regex, data[idx].trim());\n    }\n  });\n  return rst;\n};\n\nexport default handleActions(\n  {\n    //schema\n    [SET_PRE_TEXT]: (state, action) =>\n      produce(state, draft => {\n        draft.preTextSchema = action.payload;\n      }),\n    [SET_POST_TEXT]: (state, action) =>\n      produce(state, draft => {\n        draft.postTextSchema = action.payload;\n      }),\n    [SET_VARIABLES]: (state, action) =>\n      produce(state, draft => {\n        draft.variables = action.payload;\n      }),\n    [SET_TABLE_COLUMNS]: (state, action) =>\n      produce(state, draft => {\n        draft.table.columnsLabel = splitWithTrim(action.payload);\n      }),\n    [SET_TABLE_ROWS]: (state, action) =>\n      produce(state, draft => {\n        draft.table.rowsLabel = splitWithTrim(action.payload);\n      }),\n\n    //data\n    [SET_TEXT_DATA]: (state, action) =>\n      produce(state, draft => {\n        draft.textData = action.payload;\n      }),\n    // [SET_TABLE_DATA]: (state, action) => {\n    //   const { idx, data } = action.payload;\n    //   // const\n    //   return produce(state, draft => {\n    //     draft.tableSetList[idx] = {\n    //       ...state.tableSetList[idx],\n    //       defaultData: data,\n    //     };\n    //   });\n    // },\n    [SET_TABLE_DATA_SETS]: (state, action) => {\n      const data = action.payload;\n      // const defaultDataList = dataSet.map()\n      return produce(state, draft => {\n        // draft.tableData = defaultData;\n        // draft.tableDataRows = defaultRows;\n        draft.tableSetList = data;\n      });\n    },\n    // [SET_TABLE_DATA_ROWS]: (state, action) => {\n    //   const { idx, data } = action.payload;\n    //   return produce(state, draft => {\n    //     draft.tableDataRows[idx] = splitWithTrim(data);\n    //   });\n    // },\n\n    [IMPORT_CONTENTS_DATA]: (state, action) => {\n      const data = action.payload;\n      return produce(state, draft => {\n        draft.preTextSchema = data.pre_text;\n        draft.postTextSchema = data.post_text;\n        draft.table = {\n          columnsLabel: data.table_columns_label.split(','),\n          rowsLabel: splitWithTrim(data.table_rows_label),\n        };\n        draft.variables = data.source_variables;\n        draft.textData = data.source_data;\n        draft.tableSetList = (inputData => {\n          if (inputData.table_data_rows1) {\n            return [\n              {\n                id: 0,\n                defaultData: inputData.table_data_week1,\n                defaultRows: inputData.table_data_rows1.join(','),\n              },\n              {\n                id: 1,\n                defaultData: inputData.table_data_week2,\n                defaultRows: inputData.table_data_rows2.join(','),\n              },\n              {\n                id: 2,\n                defaultData: inputData.table_data_week3,\n                defaultRows: inputData.table_data_rows3.join(','),\n              },\n            ];\n          } else if (inputData.table_data_set) {\n            return inputData.table_data_set;\n          } else {\n            return [];\n          }\n        })(data);\n      });\n    },\n    [EXPORT_CONTENTS_DATA]: (state, action) =>\n      produce(state, draft => {\n        draft.fileData = {\n          pre_text: draft.preTextSchema,\n          post_text: draft.postTextSchema,\n          table_columns_label: draft.table.columnsLabel.join(','),\n          table_rows_label: draft.table.rowsLabel.join(','),\n          source_variables: draft.variables,\n          source_data: draft.textData,\n          table_data_set: draft.tableSetList,\n        };\n      }),\n\n    [PARSE_DATA]: (state, action) => {\n      const {\n        preTextSchema,\n        postTextSchema,\n        variables = '',\n        textData = '',\n        // tableData = [],\n        tableSetList = [],\n      } = state;\n      const variableList = variables.split(',');\n      const textDataList = textData.split('\\n');\n      const tableDataPerKey = [];\n\n      const shouldSendMailMap = {};\n      tableSetList.forEach(({ defaultData: week }, weekIdx, arr) => {\n        const weekKey = 'week' + (weekIdx + 1);\n        if (!week || typeof week !== 'string') {\n          console.warn(week);\n          return;\n        }\n        const rows = week.split('\\n');\n\n        const rowKeyList = rows[0].split(',');\n        rows.forEach((row, rowIdx) => {\n          row.split(',').forEach((col, colIdx) => {\n            const rowKey = rowKeyList[colIdx].trim(); //장비명\n            if (rowIdx === 0) {\n              if (!tableDataPerKey[rowKey]) {\n                tableDataPerKey[rowKey] = {};\n                shouldSendMailMap[rowKey] = false;\n              }\n              tableDataPerKey[rowKey][weekKey] = [];\n            } else {\n              tableDataPerKey[rowKey][weekKey].push(col);\n              if (\n                weekIdx === arr.length - 1 &&\n                col !== 0 &&\n                !shouldSendMailMap[rowKey]\n              ) {\n                //마지막 값이 모두 0인경우 disable\n                shouldSendMailMap[rowKey] = true;\n              }\n            }\n          });\n        });\n      });\n\n      // console.log(tableDataPerKey);\n\n      const getEmailId = (dataRow = '') => {\n        return dataRow.split(',')[0];\n      };\n\n      return produce(state, draft => {\n        draft.result = textDataList.map((data, idx) => {\n          const mailKey = textDataList[idx].split(',')[0];\n          // console.log(tableDataPerKey[mailKey]);\n          return {\n            shouldSend: shouldSendMailMap[mailKey] || false,\n            emailId: getEmailId(data),\n            // tableColumnsLabel: table.columnsLabel,\n            // tableRowsLabel: table.rowsLabel,\n            preText: parseText(preTextSchema, variableList, data),\n            postText: parseText(postTextSchema, variableList, data),\n            tableData: tableDataPerKey[mailKey],\n          };\n        });\n      });\n    },\n  },\n  initialState\n);\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport InputText from '../../components/in/InputText';\nimport { ContentsActions } from '../../store/modules/contents';\n\nfunction Template({\n  preTextSchema,\n  postTextSchema,\n  tableColumnsLabel,\n  tableRowsLabel,\n  ContentsActions,\n}) {\n  return (\n    <div>\n      <InputText\n        name=\"pre_text\"\n        defaultValue={preTextSchema}\n        onChanged={ContentsActions.setPreText}\n      ></InputText>\n      <InputText\n        name=\"table_columns_label\"\n        label=\"Column Name\"\n        defautRows={1}\n        defaultValue={tableColumnsLabel}\n        onChanged={ContentsActions.setTableColumnsLabel}\n      ></InputText>\n      <InputText\n        name=\"table_rows_label\"\n        label=\"Rows Name (optional)\"\n        defautRows={1}\n        defaultValue={tableRowsLabel}\n        onChanged={ContentsActions.setTableRowsLabel}\n      ></InputText>\n      {/* <InputText\n        name=\"table_columns_hide\"\n        label=\"Hide Column Name\"\n        defautRows={1}\n        value={defaultValue[\"table_columns_hide\"]}\n        onChanged={onChanged}\n      ></InputText> */}\n      <InputText\n        name=\"post_text\"\n        defaultValue={postTextSchema}\n        onChanged={ContentsActions.setPostText}\n      ></InputText>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ contents }) => {\n  const { preTextSchema, postTextSchema, table } = contents;\n  return {\n    preTextSchema,\n    postTextSchema,\n    tableColumnsLabel: table ? table.columnsLabel : [],\n    tableRowsLabel: table ? table.rowsLabel : [],\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  ContentsActions: bindActionCreators(ContentsActions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Template);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: { width: '100%' },\n});\n\nexport default function TableDataAddButton({ onClick }) {\n  const classes = useStyles();\n  return (\n    <Button\n      className={classes.root}\n      variant=\"outlined\"\n      color=\"primary\"\n      onClick={onClick}\n    >\n      Add Table Data Rows\n    </Button>\n  );\n}\n","import React from 'react';\nimport InputText from '../../components/in/InputText';\nimport { makeStyles, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Clear';\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    textAlign: 'right',\n    // backgroundColor: '#dbdbdb',\n    border: '2px dashed rgba(0, 0, 0, 0.23)',\n    padding: `4px 8px 8px 8px`,\n    margin: `${theme.spacing(2)}px 0`,\n  },\n}));\n\nexport default function TableDataSet({\n  dataIdx,\n  defaultData = [],\n  defaultRows = [],\n  deleteCallback,\n  setData: setTableData,\n  setRow: setTableDataRows,\n}) {\n  const classes = useStyle();\n  return (\n    <div className={classes.root}>\n      {dataIdx}\n      <IconButton\n        aria-label=\"delete\"\n        size=\"small\"\n        edge=\"end\"\n        onClick={e => deleteCallback(dataIdx)}\n      >\n        <DeleteIcon></DeleteIcon>\n      </IconButton>\n      <InputText\n        name={`table_data_rows${dataIdx + 1}`}\n        label={`Table Data Rows (WEEK ${dataIdx + 1})`}\n        defautRows={1}\n        defaultValue={defaultRows}\n        onChanged={data => setTableDataRows(dataIdx, data)}\n      ></InputText>\n      <InputText\n        name={`table_data${dataIdx + 1}`}\n        label={`WEEK ${dataIdx + 1}`}\n        defautRows={6}\n        defaultValue={defaultData}\n        onChanged={data => setTableData(dataIdx, data)}\n      ></InputText>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport TableDataAddButton from './DataAddButton';\nimport { useState } from 'react';\nimport TableDataSet from './TableDataSet';\n\nexport default function TableData({ setTableData }) {\n  const { tableSetList } = useSelector(state => state.contents);\n  const [dataList, setDataList] = useState([]);\n\n  useEffect(() => {\n    if (!tableSetList) {\n      return;\n    }\n    setDataList(tableSetList);\n  }, [tableSetList]);\n\n  useEffect(() => {\n    setTableData(dataList);\n  }, [dataList, setTableData]);\n\n  const addDataFunc = () => {\n    const newList = [\n      ...dataList,\n      { id: dataList.length, defaultData: [], defaultRows: [] },\n    ];\n    setDataList(newList);\n  };\n\n  const deleteDataFunc = selectedIdx => {\n    console.log(`click ${selectedIdx} idx`);\n    const newList = [];\n    let idIdx = 0;\n    dataList.forEach(({ defaultData, defaultRows }, idx) => {\n      if (idx !== selectedIdx) {\n        newList.push({\n          id: idIdx++,\n          defaultData,\n          defaultRows,\n        });\n      }\n    });\n    setDataList(newList);\n  };\n\n  const setOneData = (idx, data) => {\n    // console.log(`set ${idx} data...`);\n    const newData = {\n      ...dataList[idx],\n      defaultData: data,\n    };\n    dataList[idx] = newData;\n    setDataList(dataList);\n  };\n  const setRow = (idx, data) => {\n    // console.log(`set ${idx} row...`);\n    const newData = {\n      ...dataList[idx],\n      defaultRows: data,\n    };\n    dataList[idx] = newData;\n    setDataList(dataList);\n  };\n\n  // console.log(dataList);\n\n  return (\n    <div>\n      {dataList.map(({ id, defaultData, defaultRows }, idx) => {\n        return (\n          <TableDataSet\n            key={id + '' + idx}\n            dataIdx={id}\n            defaultData={defaultData}\n            defaultRows={defaultRows}\n            deleteCallback={deleteDataFunc}\n            setData={setOneData}\n            setRow={setRow}\n          ></TableDataSet>\n        );\n      })}\n      <TableDataAddButton onClick={addDataFunc}>ADD</TableDataAddButton>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport InputText from '../../components/in/InputText';\nimport { ContentsActions } from '../../store/modules/contents';\nimport TableData from './TableData';\n\nfunction SourceInput(props) {\n  const dispatch = useDispatch();\n  const { variables, textData } = useSelector(state => state.contents);\n\n  const setVariables = data => {\n    dispatch(ContentsActions.setVariables(data));\n  };\n\n  const setTextData = data => {\n    dispatch(ContentsActions.setTextData(data));\n  };\n\n  return (\n    <div>\n      <InputText\n        name=\"source_variables\"\n        defautRows={1}\n        defaultValue={variables}\n        onChanged={setVariables}\n      ></InputText>\n      <InputText\n        name=\"source_data\"\n        defautRows={6}\n        defaultValue={textData}\n        onChanged={setTextData}\n      ></InputText>\n      <TableData {...props}></TableData>\n    </div>\n  );\n}\n\nexport default SourceInput;\n","import Sample from '../../resource/sample';\nimport { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nconst SET_USER_EMAILS = 'static/SET_USER_EMAILS';\nconst SET_EQUIP_INFOS = 'static/SET_EQUIP_INFOS';\nconst SET_EQUIP_COLS = 'static/SET_EQUIP_COLS';\nconst GET_RECEIVER = 'static/GET_RECEIVER';\nconst IMPORT_EMAIL_DATA = 'static/IMPORT_EMAIL_DATA';\nconst EXPORT_EMAIL_DATA = 'static/EXPORT_EMAIL_DATA';\n\nexport const StaticActions = {\n  setUserEmails: createAction(SET_USER_EMAILS, text => text),\n  setEquipmentInfos: createAction(SET_EQUIP_INFOS, data => data),\n  setEquipmentColumns: createAction(SET_EQUIP_COLS, data => data),\n  getReceiver: createAction(GET_RECEIVER),\n  importEmailData: createAction(IMPORT_EMAIL_DATA),\n  exportEmailData: createAction(EXPORT_EMAIL_DATA),\n};\n\nconst initialState = {\n  userEmails: Sample.email,\n  equipColumns: Sample.equip_info_columns,\n  equipInfos: Sample.equip_info_data,\n  receiver: {},\n  fileData: {},\n};\n\n//reducer: action, state를 받아서 새로운 상태를 리턴하는 애\nexport default handleActions(\n  {\n    [SET_USER_EMAILS]: (state, action) =>\n      produce(state, draft => {\n        draft.userEmails = action.payload;\n      }),\n    [SET_EQUIP_INFOS]: (state, action) =>\n      produce(state, draft => {\n        draft.equipInfos = action.payload;\n      }),\n    [SET_EQUIP_COLS]: (state, action) =>\n      produce(state, draft => {\n        draft.equipColumns = action.payload;\n      }),\n\n    [IMPORT_EMAIL_DATA]: (state, action) => {\n      const data = action.payload;\n      return produce(state, draft => {\n        draft.userEmails = data.email;\n        draft.equipInfos = data.equip_info_data;\n        draft.equipColumns = data.equip_info_columns;\n      });\n    },\n    [EXPORT_EMAIL_DATA]: (state, action) =>\n      produce(state, draft => {\n        draft.fileData = {\n          email: draft.userEmails,\n          equip_info_data: draft.equipInfos,\n          equip_info_columns: draft.equipColumns,\n        };\n      }),\n\n    [GET_RECEIVER]: (state, action) => {\n      const { equipInfos, userEmails } = state;\n      const userMailMap = {};\n      userEmails.split('\\n').forEach(data => {\n        const userInfo = data.split(',');\n        userMailMap[userInfo[0].trim()] = userInfo[1].trim();\n      });\n      const getUserMails = (id, ...nameList) => {\n        return nameList.map(name => userMailMap[name.trim()] || '');\n      };\n      const equipReceiverMap = {};\n      equipInfos.split('\\n').forEach(info => {\n        const infoObj = info.split(',');\n        equipReceiverMap[infoObj[0].trim()] = getUserMails(...infoObj);\n      });\n\n      return {\n        ...state,\n        receiver: equipReceiverMap,\n      };\n    },\n  },\n  initialState\n);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport InputText from '../../components/in/InputText';\n// import { connect } from 'react-redux'\n\nimport { StaticActions } from '../../store/modules/static';\n\nfunction UserEmails() {\n  const dispatch = useDispatch();\n  const mailValue = useSelector(state => state.static.userEmails);\n\n  const setUserEmailValue = data => {\n    dispatch(StaticActions.setUserEmails(data));\n  };\n\n  return (\n    <InputText\n      name=\"email\"\n      defautRows={10}\n      value={mailValue}\n      onChanged={setUserEmailValue}\n    ></InputText>\n  );\n}\n\nexport default UserEmails;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport InputText from '../../components/in/InputText';\nimport { makeStyles } from '@material-ui/core';\nimport { StaticActions } from '../../store/modules/static';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nfunction EquipInfos({\n  defaultData,\n  defaultColumns,\n  onColumnChange,\n  onDataChange,\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <InputText\n        name=\"equip_info_columns\"\n        defautRows={1}\n        defaultValue={defaultColumns}\n        onChanged={onColumnChange}\n      ></InputText>\n      <InputText\n        name=\"equip_info_data\"\n        defautRows={10}\n        defaultValue={defaultData}\n        onChanged={onDataChange}\n      ></InputText>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  defaultData: state.static.equipInfos,\n  defaultColumns: state.static.equipColumns,\n});\nconst mapDispatchToProps = dispatch => ({\n  onColumnChange: value => dispatch(StaticActions.setEquipmentColumns(value)),\n  onDataChange: value => dispatch(StaticActions.setEquipmentInfos(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipInfos);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport UserEmails from './UserEmails';\nimport EquipInfos from './EquipInfos';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    // flexBasis: \"33.33%\",\n    // flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function ControlledExpansionPanels() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading}>User Emails</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <UserEmails></UserEmails>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}>\n            Equipment Informations\n          </Typography>\n          {/* <Typography className={classes.secondaryHeading}>\n            You are currently not an owner\n          </Typography> */}\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <EquipInfos></EquipInfos>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TabPanel from './TabPanel';\nimport Template from '../../pages/template/Template';\nimport Source from '../../pages/source/Source';\nimport StaticData from '../../pages/email/StaticData';\n// import UserEmails from \"./UserEmails\";\n// import EquipInfos from \"./EquipInfos\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  tab: {},\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function InputPages(props) {\n  const classes = useStyles();\n  const [tabIdx, setTabIdx] = React.useState(2);\n\n  const handleChange = (event, newValue) => {\n    setTabIdx(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        variant=\"fullWidth\"\n        value={tabIdx}\n        onChange={handleChange}\n        aria-label=\"simple tabs example\"\n      >\n        <Tab label=\"Email\" className={classes.tab} {...a11yProps(0)} />\n        <Tab label=\"Template\" className={classes.tab} {...a11yProps(1)} />\n        <Tab label=\"Source Data\" className={classes.tab} {...a11yProps(2)} />\n      </Tabs>\n      <TabPanel value={tabIdx} index={0}>\n        <StaticData></StaticData>\n      </TabPanel>\n      <TabPanel value={tabIdx} index={1}>\n        <Template {...props}></Template>\n      </TabPanel>\n      <TabPanel value={tabIdx} index={2}>\n        <Source {...props}></Source>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport InputPages from './InputPages';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    minHeight: 640,\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function InputContents(props) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <InputPages {...props}></InputPages>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"20px 0 20px 0\",\n    textAlign: \"left\"\n  }\n}));\n\nconst splitTextNewLine = function(data = \"\") {\n  return data.split(\"\\n\").map((line, idx) => {\n    return (\n      <span key={idx}>\n        {line}\n        <br />\n      </span>\n    );\n  });\n};\n\nexport default function ViewText(props) {\n  const classes = useStyles();\n  const { data } = props;\n\n  return (\n    <div className={classes.root}>\n      {splitTextNewLine(data)}\n    </div>\n  );\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst styles = {\n  table: {\n    margin: '20px 0',\n    width: '350px',\n    height: 200,\n    fontSize: '10pt',\n    border: '1px solid black',\n    borderCollapse: 'collapse',\n  },\n  th: {\n    backgroundColor: '#e6e6e6',\n    border: '1px solid #444444',\n    padding: '5px 10px',\n    // padding: 0,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  td: {\n    border: '1px solid #444444',\n    padding: '5px 10px',\n    // padding: 0,\n    textAlign: 'center',\n  },\n  first: {\n    textAlign: 'left',\n  },\n  emphasis: {\n    color: 'red',\n    fontWeight: 'bold',\n  },\n};\n\nconst findRowIdx = (templateRowsLabel, dataRowsLabel) => {\n  if (!Array.isArray(dataRowsLabel)) {\n    console.warn(dataRowsLabel);\n    return templateRowsLabel;\n  }\n  // console.log(dataRowsLabel);\n  // console.log(splitWithTrim(dataRowsLabel));\n  return dataRowsLabel.map(oneWeekColumn =>\n    templateRowsLabel.map(row => splitWithTrim(oneWeekColumn).indexOf(row))\n  );\n};\nconst pivot = (rowsLabel, origin) => {\n  const result = [];\n  if (rowsLabel.length === 0) {\n    Object.keys(origin).forEach(dataKey => {\n      result.push(origin[dataKey]);\n    });\n    return result;\n  }\n\n  rowsLabel.forEach((oneWeekColumn, weekIdx) => {\n    const keyNm = (i => {\n      if (i === 0) {\n        return 'week1';\n      } else if (i === 1) {\n        return 'week2';\n      } else {\n        return 'week3';\n      }\n    })(weekIdx);\n\n    if (!Array.isArray(oneWeekColumn)) {\n      // console.log(`oneWeekColumn`);\n      // console.log(oneWeekColumn);\n      return;\n    }\n    oneWeekColumn.forEach((rowNameIdx, keyIdx) => {\n      if (weekIdx === 0) {\n        result[keyIdx] = [];\n      }\n\n      const data = origin[keyNm] ? origin[keyNm][rowNameIdx] : '0';\n      result[keyIdx].push(data || '0');\n    });\n  });\n\n  return result;\n};\nconst splitWithTrim = d => {\n  if (typeof d !== 'string') {\n    console.warn(d);\n    return [];\n  }\n  if (d) {\n    return d.split(',').map(str => str.trim());\n  }\n  return [];\n};\n\nexport default function PivotTable({ tableData = {} }) {\n  const { table, tableSetList } = useSelector(state => state.contents);\n  const { columnsLabel, rowsLabel = [] } = table;\n\n  const hasStaticRowsLabel = rowsLabel.length > 0;\n  const tableDataRows = tableSetList.map(data => data.defaultRows);\n  const rowsMap = findRowIdx(rowsLabel, tableDataRows);\n\n  const pivotData = pivot(rowsMap, tableData);\n  return columnsLabel && tableData ? (\n    <table style={styles.table}>\n      <thead>\n        <tr>\n          {columnsLabel.map((columnName, idx, arr) => {\n            const thStyle =\n              arr.length === idx + 1\n                ? { ...styles.th, ...styles.emphasis }\n                : styles.th;\n            return (\n              <th style={thStyle} key={idx}>\n                {columnName}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {pivotData.map((row, rowIdx) => {\n          return row ? (\n            <tr key={'' + rowIdx}>\n              {hasStaticRowsLabel && (\n                <td style={styles.th} key={rowsLabel + '' + rowIdx}>\n                  {rowsLabel[rowIdx] ? rowsLabel[rowIdx].trim() : ''}\n                </td>\n              )}\n              {row.map((columnItem, colIdx, arr) => {\n                const tdStyle = (index => {\n                  if (arr.length === index + 1)\n                    return { ...styles.td, ...styles.emphasis };\n                  else {\n                    return styles.td;\n                  }\n                })(colIdx);\n                return (\n                  <td style={tdStyle} key={columnItem + '' + colIdx}>\n                    {columnItem ? columnItem.trim() : ''}\n                  </td>\n                );\n                // }\n              })}\n            </tr>\n          ) : (\n            ''\n          );\n        })}\n      </tbody>\n    </table>\n  ) : (\n    ''\n  );\n}\n","import React from 'react';\nimport ViewText from './ViewText';\nimport PivotTable from './PivotTable';\n\nexport default function ViewSet({ id, inputData }) {\n  const {\n    preText,\n    // tableColumnsLabel,\n    // tableRowsLabel,\n    // tableDataColumns,\n    tableData,\n    postText,\n  } = inputData;\n  return (\n    <div id={id}>\n      <ViewText data={preText}></ViewText>\n      <PivotTable\n        // columnsLabel={tableColumnsLabel}\n        // rowsLabel={tableRowsLabel}\n        // tableDataColumns={tableDataColumns}\n        tableData={tableData}\n      ></PivotTable>\n      <ViewText data={postText}></ViewText>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction clickButton(e, targetId) {\n  e.preventDefault();\n  console.log(targetId)\n  copyToClip(document.getElementById(targetId));\n}\n\nfunction copyToClip(str) {\n  if (!str) {\n    alert(\"empty data!\");\n    return;\n  }\n  function listener(e) {\n    e.clipboardData.setData(\"text/html\", str.innerHTML);\n    e.clipboardData.setData(\"text/plain\", str.innerHTML);\n    console.log(e.clipboardData.__proto__);\n    // e.clipboardData.style(\"cssText\", \"color: blue;\")\n    e.preventDefault();\n  }\n  // div.innerHTML = \"your div content\";\n  // div.style.cssText = document.defaultView.getComputedStyle(p, \"\").cssText;\n\n  document.addEventListener(\"copy\", listener);\n  document.execCommand(\"copy\");\n  document.removeEventListener(\"copy\", listener);\n}\n\nexport default function CopyButton({ targetId }) {\n  return (\n    <Button onClick={e => clickButton(e, targetId)} variant=\"outlined\">\n      COPY\n    </Button>\n  );\n}\n","import React from \"react\";\nimport ViewText from \"./ViewText\";\nimport { connect } from \"react-redux\";\n\nfunction Receiver({ keyId, data }) {\n  const receiverList = data[keyId] || []\n  return <ViewText data={receiverList.join(\", \")}></ViewText>;\n}\n\nconst mapStateToProps = state => ({\n  data: state.static.receiver\n});\nexport default connect(mapStateToProps, () => ({}))(Receiver);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewSet from './ViewSet';\nimport CopyButton from './CopyButton';\nimport Receiver from './Receiver';\nimport ViewText from './ViewText';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 5,\n    textAlign: 'right',\n    color: 'black',\n    fontSize: '10pt',\n    fontFamily: '맑은 고딕',\n  },\n  disabledPaper: {\n    color: 'gray',\n  },\n}));\n\nfunction ViewContents() {\n  const classes = useStyles();\n  const dataList = useSelector(store => store.contents.result);\n\n  return (\n    dataList &&\n    dataList.map((data, idx) => {\n      return data ? (\n        <Paper\n          className={classNames(classes.paper, {\n            [classes.disabledPaper]: !data.shouldSend,\n          })}\n          key={idx}\n        >\n          <ViewText data={data.emailId}></ViewText>\n          <Receiver keyId={data.emailId}></Receiver>\n          <CopyButton targetId={`contents${idx + 1}`}></CopyButton>\n          <ViewSet id={`contents${idx + 1}`} inputData={data}></ViewSet>\n        </Paper>\n      ) : (\n        ''\n      );\n    })\n  );\n}\n\nexport default ViewContents;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ContentsActions } from '../../store/modules/contents';\nimport { StaticActions } from '../../store/modules/static';\n\nconst useStyle = makeStyles({\n  root: {\n    minWidth: 'unset',\n    width: '100%',\n    height: '100%',\n    // color: \"#f0f0f0\"\n    color: 'black',\n  },\n});\n\nfunction RunButton({ ContentsActions, StaticActions, addRunClick }) {\n  const classes = useStyle();\n  return (\n    <Button\n      className={classes.root}\n      variant=\"contained\"\n      // color=\"primary\"\n      onClick={() => {\n        addRunClick();\n        StaticActions.getReceiver();\n        ContentsActions.parseData();\n      }}\n    >\n      >>\n    </Button>\n  );\n}\n\nconst mapStateToProps = state => ({});\n\n// const mapDispatchToProps = dispatch => ({\n//   parseData: () => dispatch(ContentsActions.parseData()),\n//   getReceiver: () => dispatch(getReceiver()),\n// })\nconst mapDispatchToProps = dispatch => ({\n  ContentsActions: bindActionCreators(ContentsActions, dispatch),\n  StaticActions: bindActionCreators(StaticActions, dispatch),\n});\n// bindActionCreators({ ContentsActions, getReceiver }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RunButton);\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContentsActions } from '../../store/modules/contents';\nimport { StaticActions } from '../../store/modules/static';\nimport { getFormatDate } from '../../utils/date';\nimport { saveFile, loadJsonFile } from '../../utils/file';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    // border: '2px solid #FF6B6B',\n    padding: 8,\n    borderRadius: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    // backgroundColor: '#ffe0e9',\n  },\n  importButton: {\n    width: 200,\n  },\n});\n\nfunction ExternalButtonGroup() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [save, setSave] = useState(false);\n  const contentsFileData = useSelector(state => state.contents.fileData);\n  const staticFileData = useSelector(state => state.static.fileData);\n\n  const importActions = data => {\n    dispatch(StaticActions.importEmailData(data));\n    dispatch(ContentsActions.importContentsData(data));\n  };\n\n  const exportActions = () => {\n    dispatch(StaticActions.exportEmailData());\n    dispatch(ContentsActions.exportContentsData());\n    setSave(true);\n  };\n\n  useEffect(() => {\n    if (save) {\n      saveFile(\n        getFormatDate(new Date()) + '.json',\n        JSON.stringify({ ...staticFileData, ...contentsFileData })\n      );\n      setSave(false);\n    }\n  }, [save, contentsFileData, staticFileData]);\n\n  return (\n    <div className={classes.root}>\n      {/* <label htmlFor=\"ex_file\">업로드</label> */}\n      <Input\n        // id=\"ex_file\"\n        className={classes.importButton}\n        type={'file'}\n        onChange={e => loadJsonFile(e, importActions)}\n        inputProps={{ accept: '.json' }}\n      ></Input>\n\n      <Button variant=\"outlined\" size=\"small\" onClick={exportActions}>\n        Save data\n      </Button>\n    </div>\n  );\n}\n\nexport default ExternalButtonGroup;\n","export function saveFile(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport function loadJsonFile(evt, callBack) {\n  var files = evt.target.files;\n\n  var reader = new FileReader();\n  const f = files[0];\n\n  // Closure to capture the file information.\n  reader.onload = function(e) {\n    try {\n      const data = e.target.result;\n      const inputData = JSON.parse(data);\n      callBack(inputData);\n    } catch (e) {\n      //TODO: error dialog\n      console.error(e);\n    }\n  };\n  // Read in the image file as a data URL.\n  reader.readAsText(f);\n}\n","/**\n *  yyyyMMdd 포맷으로 반환\n *  https://heum-story.tistory.com/27\n */\nexport function getFormatDate(date) {\n  var year = date.getFullYear(); //yyyy\n  var month = 1 + date.getMonth(); //M\n  month = month >= 10 ? month : '0' + month; //month 두자리로 저장\n  var day = date.getDate(); //d\n  day = day >= 10 ? day : '0' + day; //day 두자리로 저장\n  return year + '' + month + '' + day;\n}\n","import React, { useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport InputContents from '../components/in/ContentsWrapper';\nimport ViewContents from '../components/out/ContentsWrapper';\nimport RunButton from '../components/common/RunButton';\nimport ExternalButtonGroup from '../components/common/ExternalButtonGroup';\nimport { useDispatch } from 'react-redux';\nimport { ContentsActions } from '../store/modules/contents';\n// import TestComponent from './TestComponent';\n\nexport default function Layout() {\n  const [tableData, setTableData] = useState([]);\n  // const [templateData, setTemplateData] = useState([]);\n  const dispatch = useDispatch();\n\n  const runClick = () => {\n    dispatch(ContentsActions.setTableDataSet(tableData));\n  };\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} sm={12} md={5}>\n        <ExternalButtonGroup></ExternalButtonGroup>\n        <InputContents\n          setTableData={setTableData}\n          // setTemplateData={setTemplateData}\n        ></InputContents>\n      </Grid>\n      <Grid item xs={12} sm={12} md={1}>\n        <RunButton addRunClick={runClick}></RunButton>\n      </Grid>\n      <Grid item xs={12} sm={12} md={5}>\n        <ViewContents></ViewContents>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Layout from './pages/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout></Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nconst ERROR_TRUE = 'test/ERROR_TRUE';\nconst ERROR_FALSE = 'test/ERROR_FALSE';\n\nexport const setErrorTrue = createAction(ERROR_TRUE);\nexport const setErrorFalse = createAction(ERROR_FALSE);\n\nconst initialState = {\n  error: false,\n};\nexport default handleActions(\n  {\n    [ERROR_TRUE]: (state, action) =>\n      produce(state, draft => {\n        draft.error = true;\n      }),\n    [ERROR_FALSE]: (state, action) =>\n      produce(state, draft => {\n        draft.error = false;\n      }),\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport contentsReducers from './contents';\nimport staticReducers from './static';\nimport TestReducers from './testAction';\n\nexport default combineReducers({\n  contents: contentsReducers,\n  static: staticReducers,\n  test: TestReducers,\n  // 다른 리듀서를 만들게되면 여기에 넣어줌..\n});\n","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './modules'\n\n// **** 리덕스 개발자도구 적용\nimport { createLogger } from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst logger = createLogger()\n\n// const store = createStore(modules, applyMiddleware(logger))\n\n// const devTools =\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// const store = createStore(rootReducer, devTools, applyMiddleware(logger))\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger))\n)\n\n// const store = createStore(rootReducer);\n// console.log(store.getState());\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}