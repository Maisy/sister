{"version":3,"sources":["section/in/TabPanel.js","section/in/InputText.js","section/in/templateTab/index.js","section/in/sourceTab/DataAddButton.js","section/in/sourceTab/TableData.js","section/in/sourceTab/TableDataList.js","section/in/sourceTab/index.js","section/in/emailEquipInfoTab/UserEmails.js","section/in/emailEquipInfoTab/EquipInfos.js","section/in/emailEquipInfoTab/index.js","section/in/InputPages.js","section/in/InputContents.js","section/out/ViewText.js","utils/string.js","section/out/PivotTable.js","section/out/ViewSet.js","section/out/CopyButton.js","section/out/Receiver.js","section/out/ViewContents.js","resource/sample.js","store/modules/contents.js","store/modules/basicInfos.js","components/RunButton.js","components/ImportButton.js","utils/file.js","components/ExportButton.js","utils/date.js","components/ExternalButtonGroup.js","section/Layout.js","App.js","serviceWorker.js","store/modules/testAction.js","store/modules/index.js","store/index.js","index.js"],"names":["TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","useStyles","makeStyles","theme","root","margin","spacing","width","InputText","defautRows","name","onChanged","classes","TextField","key","multiline","variant","className","rows","label","onChange","event","target","React","memo","setInputData","useSelector","contents","preTextSchema","postTextSchema","tableColumnsLabel","tableRowsLabel","useState","templateData","setTemplateData","useEffect","setDataCB","data","val","TableDataAddButton","onClick","Button","color","useStyle","textAlign","border","padding","TableData","defaultData","defaultRows","setTableRows","setTableData","deleteCallback","IconButton","aria-label","size","edge","dataList","setDataList","deleteDataFunc","idx","filter","map","updated","updatedRow","concat","length","prev","next","SourceInput","state","storeVariables","variables","storeTextData","textData","storeTableData","tableSetList","tableData","setVariables","sourceData","setSourceData","UserEmails","mailValue","basicInfo","userEmails","setValue","equipInfos","equipColumns","attrs","setAttrs","setData","heading","fontSize","typography","pxToRem","secondaryHeading","palette","text","secondary","EmailEquipInfoTab","expanded","setExpanded","handleChange","panel","isExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","flexGrow","tab","a11yProps","InputPages","tabIdx","setTabIdx","Tabs","newValue","Tab","paper","minHeight","InputContents","Paper","ViewText","split","line","splitTextNewLine","splitCommaWithTrim","d","console","warn","str","trim","styles","table","height","borderCollapse","th","backgroundColor","fontWeight","td","first","emphasis","PivotTable","tableRowIndexPerWeek","rowsStr","columnsStr","rowsLabel","columnsLabel","pivotData","origin","result","log","Object","keys","forEach","dataKey","push","weekColumnList","weekIdx","keyNm","Array","isArray","rowNameIdx","keyIdx","pivot","style","columnName","arr","thStyle","row","rowIdx","columnItem","colIdx","tdStyle","ViewSet","inputData","preText","postText","clickButton","e","targetId","preventDefault","alert","listener","clipboardData","innerHTML","document","addEventListener","execCommand","removeEventListener","copyToClip","getElementById","CopyButton","keyId","receiverList","receiver","join","fontFamily","disabledPaper","ViewContents","store","classNames","shouldSend","emailId","ContentsActions","importContentsData","createAction","exportContentsData","parseData","initialState","Sample","fileData","parseVariable","template","rst","variable","regex","RegExp","replace","handleActions","action","payload","produce","draft","pre_text","post_text","table_columns_label","table_rows_label","source_variables","source_data","assign","table_data_rows1","table_data_week1","table_data_week2","table_data_rows2","table_data_week3","table_data_rows3","table_data_set","templateRowsLabel","dataRowsLabel","tableDataRows","indexOf","lastWeekKey","tableDataPerKey","tableSet","reduce","dataPerKey","nextData","machineList","weekKey","machineData","machineId","col","machineID","shouldSendMailMap","Boolean","getTableDataPerMachine","variableList","textDataList","getEmailId","dataRow","mailKey","StaticActions","getReceiver","importEmailData","exportEmailData","email","equip_info_data","equip_info_columns","userMailMap","resultMap","userInfo","info","equipId","owners","minWidth","RunButton","dispatch","useDispatch","display","alignItems","input","button","marginRight","importActions","fileName","setFileName","type","accept","fileList","files","evt","callBack","reader","FileReader","f","onload","JSON","parse","error","readAsText","loadJsonFile","htmlFor","ExportButton","save","setSave","contentsFileData","staticFileData","filename","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","saveFile","date","year","getFullYear","month","getMonth","day","getDate","getFormatDate","Date","stringify","borderRadius","justifyContent","importButton","ExternalButtonGroup","Layout","setInputCallback","useCallback","Grid","container","item","xs","sm","md","App","window","location","hostname","match","combineReducers","contentsReducers","basicInfoReducers","test","TestReducers","logger","createLogger","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.50990358.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`input-tabpanel-${index}`}\n      aria-labelledby={`input-tab-${index}`}\n      {...other}\n    >\n      {/* 최초 한번에 다 렌더링 */}\n      <Box p={3}>{children}</Box>\n      {/* 클릭할때마다 렌더링 */}\n      {/* {value === index && <Box  p={3}>{children}</Box>} */}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.element.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: `${theme.spacing(1)}px 0`,\n    width: '100%',\n  },\n}));\n\nfunction InputText({ defautRows = 4, name, onChanged, value }) {\n  // console.log(`render input text...${name}`);\n  const classes = useStyles();\n  const handleOnChange = (event) => {\n    // if (typeof onChanged !== 'function') {\n    //   console.error('onChanged is not function');\n    //   return;\n    // }\n\n    onChanged(event.target.value);\n  };\n\n  return (\n    <TextField\n      key={name}\n      multiline\n      variant=\"outlined\"\n      className={classes.root}\n      rows={defautRows}\n      name={name}\n      label={name}\n      value={value}\n      onChange={handleOnChange}\n    />\n  );\n}\n\nInputText.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChanged: PropTypes.func.isRequired,\n  defautRows: PropTypes.number,\n};\nexport default InputText;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport InputText from '../InputText';\n\nfunction Template({ setInputData }) {\n  const {\n    preTextSchema,\n    postTextSchema,\n    tableColumnsLabel,\n    tableRowsLabel,\n  } = useSelector(({ contents }) => contents);\n\n  const [templateData, setTemplateData] = useState({\n    preTextSchema: '',\n    postTextSchema: '',\n    tableColumnsLabel: '',\n    tableRowsLabel: '',\n  });\n\n  useEffect(() => {\n    setTemplateData({\n      preTextSchema,\n      postTextSchema,\n      tableColumnsLabel,\n      tableRowsLabel,\n    });\n  }, [preTextSchema, postTextSchema, tableColumnsLabel, tableRowsLabel]);\n\n  const setDataCB = (key, value) => {\n    setTemplateData((data) => ({\n      ...data,\n      [key]: value,\n    }));\n    setInputData(key, value);\n  };\n\n  return (\n    <div>\n      <InputText\n        name=\"Pre Text\"\n        value={templateData['preTextSchema']}\n        onChanged={(val) => {\n          setDataCB('preTextSchema', val);\n        }}\n      ></InputText>\n      <InputText\n        name=\"[Table] Column Name\"\n        defautRows={1}\n        value={templateData['tableColumnsLabel']}\n        onChanged={(val) => {\n          setDataCB('tableColumnsLabel', val);\n        }}\n      ></InputText>\n      <InputText\n        name=\"[Table] Rows Name\"\n        defautRows={1}\n        value={templateData['tableRowsLabel']}\n        onChanged={(val) => {\n          setDataCB('tableRowsLabel', val);\n        }}\n      ></InputText>\n      <InputText\n        name=\"Post Text\"\n        value={templateData['postTextSchema']}\n        onChanged={(val) => {\n          setDataCB('postTextSchema', val);\n        }}\n      ></InputText>\n    </div>\n  );\n}\n\nTemplate.propTypes = {\n  setInputData: PropTypes.func.isRequired,\n};\n\nexport default React.memo(Template);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: { width: '100%' },\n});\n\nexport default function TableDataAddButton({ onClick }) {\n  const classes = useStyles();\n  return (\n    <Button\n      className={classes.root}\n      variant=\"outlined\"\n      color=\"primary\"\n      onClick={onClick}\n    >\n      Add Table Data Rows\n    </Button>\n  );\n}\n\nTableDataAddButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InputText from '../InputText';\nimport { makeStyles, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Clear';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    textAlign: 'right',\n    // backgroundColor: '#dbdbdb',\n    border: '2px dashed rgba(0, 0, 0, 0.23)',\n    padding: `4px 8px 8px 8px`,\n    margin: `${theme.spacing(2)}px 0`,\n  },\n}));\n\nexport default function TableData({\n  // dataIdx,\n  name,\n  defaultData,\n  defaultRows,\n  setTableRows,\n  setTableData,\n  deleteCallback,\n}) {\n  const classes = useStyle();\n  return (\n    <div className={classes.root}>\n      {/* {dataIdx} */}\n      <IconButton\n        aria-label=\"delete\"\n        size=\"small\"\n        edge=\"end\"\n        onClick={() => deleteCallback()}\n      >\n        <DeleteIcon></DeleteIcon>\n      </IconButton>\n      <InputText\n        name={`[${name}] Table Data Rows`}\n        defautRows={1}\n        value={defaultRows}\n        onChanged={(data) => setTableRows(data)}\n      ></InputText>\n      <InputText\n        name={`[${name}] Table Data`}\n        defautRows={6}\n        value={defaultData}\n        onChanged={(data) => setTableData(data)}\n      ></InputText>\n    </div>\n  );\n}\n\nTableData.propTypes = {\n  name: PropTypes.string.isRequired,\n  defaultData: PropTypes.string.isRequired,\n  defaultRows: PropTypes.string.isRequired,\n  setTableRows: PropTypes.func.isRequired,\n  setTableData: PropTypes.func.isRequired,\n  deleteCallback: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableDataAddButton from './DataAddButton';\nimport TableData from './TableData';\n\nfunction TableDataList({ value: dataList, onChanged: setDataList }) {\n  const addDataFunc = () => {\n    setDataList(\n      dataList.concat({\n        id: dataList.length,\n        defaultData: '',\n        defaultRows: '',\n      }),\n    );\n  };\n\n  const deleteDataFunc = (idx) => () => {\n    setDataList(\n      dataList\n        .filter((data) => data.id !== idx)\n        .map((data, idx) => ({ ...data, id: idx })),\n    );\n  };\n\n  const setTableData = (idx) => (updated) => {\n    setDataList(\n      dataList.map((data) =>\n        data.id === idx\n          ? {\n              ...data,\n              defaultData: updated,\n            }\n          : data,\n      ),\n    );\n  };\n  const setTableRows = (idx) => (updatedRow) => {\n    setDataList(\n      dataList.map((data) =>\n        data.id === idx ? { ...data, defaultRows: updatedRow } : data,\n      ),\n    );\n  };\n\n  // console.log('render table data...');\n\n  return (\n    <div>\n      {dataList.map(({ id, defaultData, defaultRows }, idx) => {\n        return (\n          <TableData\n            key={id + '' + idx}\n            name={`WEEK ${idx + 1}`}\n            defaultRows={defaultRows}\n            setTableRows={setTableRows(idx)}\n            defaultData={defaultData}\n            setTableData={setTableData(idx)}\n            deleteCallback={deleteDataFunc(idx)}\n          />\n        );\n      })}\n      <TableDataAddButton onClick={addDataFunc}>ADD</TableDataAddButton>\n    </div>\n  );\n}\n\nTableDataList.propTypes = {\n  value: PropTypes.array.isRequired,\n  onChanged: PropTypes.func.isRequired,\n};\n\nexport default React.memo(TableDataList, (prev, next) => {\n  return prev.value === next.value;\n});\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport InputText from '../InputText';\nimport TableDataList from './TableDataList';\n\nfunction SourceInput({ setInputData }) {\n  const {\n    variables: storeVariables,\n    textData: storeTextData,\n    tableSetList: storeTableData,\n  } = useSelector((state) => state.contents);\n\n  const [tableData, setTableData] = useState([]);\n  const [variables, setVariables] = useState('');\n  const [sourceData, setSourceData] = useState('');\n\n  useEffect(() => {\n    setVariables(storeVariables);\n  }, [storeVariables]);\n\n  useEffect(() => {\n    setSourceData(storeTextData);\n  }, [storeTextData]);\n\n  useEffect(() => {\n    setTableData(storeTableData);\n  }, [storeTableData]);\n\n  return (\n    <div>\n      <InputText\n        name=\"Variables in text\"\n        defautRows={1}\n        value={variables}\n        onChanged={(value) => {\n          setVariables(value);\n          setInputData('variables', value);\n        }}\n      ></InputText>\n      <InputText\n        name=\"Data for variables\"\n        defautRows={6}\n        value={sourceData}\n        onChanged={(value) => {\n          setSourceData(value);\n          setInputData('textData', value);\n        }}\n      ></InputText>\n      <TableDataList\n        value={tableData}\n        onChanged={(value) => {\n          setTableData(value);\n          setInputData('tableSetList', value);\n        }}\n      ></TableDataList>\n    </div>\n  );\n}\n\nSourceInput.propTypes = {\n  setInputData: PropTypes.func.isRequired,\n};\n\nexport default SourceInput;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport InputText from '../InputText';\n\nfunction UserEmails({ onChanged }) {\n  const mailValue = useSelector(({ basicInfo }) => basicInfo.userEmails);\n\n  const [value, setValue] = useState('');\n\n  useEffect(() => {\n    setValue(mailValue);\n  }, [mailValue]);\n\n  return (\n    <InputText\n      name=\"Emails\"\n      defautRows={10}\n      value={value}\n      onChanged={(value) => {\n        setValue(value);\n        onChanged('userEmails', value);\n      }}\n    ></InputText>\n  );\n}\n\nUserEmails.propTypes = {\n  onChanged: PropTypes.func.isRequired,\n};\n\nexport default UserEmails;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport InputText from '../InputText';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nfunction EquipInfos({ onChanged }) {\n  const classes = useStyles();\n  const { equipInfos, equipColumns } = useSelector(\n    ({ basicInfo }) => basicInfo,\n  );\n\n  const [attrs, setAttrs] = useState('');\n  const [data, setData] = useState('');\n\n  useEffect(() => {\n    setAttrs(equipColumns);\n  }, [equipColumns]);\n\n  useEffect(() => {\n    setData(equipInfos);\n  }, [equipInfos]);\n\n  // console.log('equip info expander render...');\n\n  return (\n    <div className={classes.root}>\n      <InputText\n        name=\"Equipment Attributes\"\n        defautRows={1}\n        value={attrs}\n        onChanged={(value) => {\n          setAttrs(value);\n          onChanged('equipColumns', value);\n        }}\n      ></InputText>\n      <InputText\n        name=\"Equipment Data\"\n        defautRows={10}\n        value={data}\n        onChanged={(value) => {\n          setData(value);\n          onChanged('equipInfos', value);\n        }}\n      ></InputText>\n    </div>\n  );\n}\n\nEquipInfos.propTypes = {\n  onChanged: PropTypes.func.isRequired,\n};\n\nexport default React.memo(EquipInfos);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport UserEmails from './UserEmails';\nimport EquipInfos from './EquipInfos';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function EmailEquipInfoTab({ setInputData }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState('panel1');\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading}>User Emails</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <UserEmails onChanged={setInputData}></UserEmails>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}>\n            Equipment Informations\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <EquipInfos onChanged={setInputData}></EquipInfos>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nEmailEquipInfoTab.propTypes = {\n  setInputData: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TabPanel from './TabPanel';\nimport TemplateTab from './templateTab';\nimport SourceTab from './sourceTab';\nimport EmailEquipInfoTab from './emailEquipInfoTab';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  tab: {},\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `input-tab-${index}`,\n    'aria-controls': `input-tabpanel-${index}`,\n  };\n}\n\nexport default function InputPages(props) {\n  const classes = useStyles();\n  const [tabIdx, setTabIdx] = React.useState(2);\n\n  const handleChange = (event, newValue) => {\n    setTabIdx(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        variant=\"fullWidth\"\n        value={tabIdx}\n        onChange={handleChange}\n        aria-label=\"input data tabs\"\n      >\n        <Tab label=\"Email\" className={classes.tab} {...a11yProps(0)} />\n        <Tab label=\"Template\" className={classes.tab} {...a11yProps(1)} />\n        <Tab label=\"Source Data\" className={classes.tab} {...a11yProps(2)} />\n      </Tabs>\n      <TabPanel value={tabIdx} index={0}>\n        <EmailEquipInfoTab {...props}></EmailEquipInfoTab>\n      </TabPanel>\n      <TabPanel value={tabIdx} index={1}>\n        <TemplateTab {...props}></TemplateTab>\n      </TabPanel>\n      <TabPanel value={tabIdx} index={2}>\n        <SourceTab {...props}></SourceTab>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport InputPages from './InputPages';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    minHeight: 640,\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function InputContents(props) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <InputPages {...props}></InputPages>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '20px 0 20px 0',\n    textAlign: 'left',\n  },\n});\n\nconst splitTextNewLine = function (data = '') {\n  return data.split('\\n').map((line, idx) => {\n    return (\n      <span key={idx}>\n        {line}\n        <br />\n      </span>\n    );\n  });\n};\n\nexport default function ViewText({ data }) {\n  const classes = useStyles();\n\n  return <div className={classes.root}>{splitTextNewLine(data)}</div>;\n}\n\nViewText.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n","export const splitCommaWithTrim = (d) => {\n  if (typeof d !== 'string') {\n    console.warn(d);\n    return [];\n  }\n  if (d) {\n    return d.split(',').map((str) => str.trim());\n  }\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useSelector } from 'react-redux';\nimport { splitCommaWithTrim } from '../../utils/string';\n\nconst styles = {\n  table: {\n    margin: '20px 0',\n    width: '350px',\n    height: 200,\n    fontSize: '10pt',\n    border: '1px solid black',\n    borderCollapse: 'collapse',\n  },\n  th: {\n    backgroundColor: '#e6e6e6',\n    border: '1px solid #444444',\n    padding: '5px 10px',\n    // padding: 0,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  td: {\n    border: '1px solid #444444',\n    padding: '5px 10px',\n    // padding: 0,\n    textAlign: 'center',\n  },\n  first: {\n    textAlign: 'left',\n  },\n  emphasis: {\n    color: 'red',\n    fontWeight: 'bold',\n  },\n};\n\nconst pivot = (rowsLabel, origin) => {\n  const result = [];\n  if (rowsLabel.length === 0) {\n    console.log('rows label is empty.');\n    Object.keys(origin).forEach((dataKey) => {\n      result.push(origin[dataKey]);\n    });\n    return result;\n  }\n\n  rowsLabel.forEach((weekColumnList, weekIdx) => {\n    const keyNm = `week${weekIdx + 1}`;\n\n    if (!Array.isArray(weekColumnList)) {\n      return;\n    }\n    weekColumnList.forEach((rowNameIdx, keyIdx) => {\n      if (weekIdx === 0) {\n        result[keyIdx] = [];\n      }\n\n      const data =\n        origin[keyNm] && rowNameIdx > -1 ? origin[keyNm][rowNameIdx] : '0';\n      result[keyIdx].push(data);\n    });\n  });\n\n  return result;\n};\n\nexport default function PivotTable({ tableData }) {\n  const {\n    tableRowIndexPerWeek,\n    tableRowsLabel: rowsStr,\n    tableColumnsLabel: columnsStr,\n  } = useSelector((state) => state.contents);\n\n  const rowsLabel = splitCommaWithTrim(rowsStr);\n  const columnsLabel = splitCommaWithTrim(columnsStr);\n  const pivotData = pivot(tableRowIndexPerWeek, tableData);\n\n  return columnsLabel ? (\n    <table style={styles.table}>\n      <thead>\n        <tr>\n          {columnsLabel.map((columnName, idx, arr) => {\n            const thStyle =\n              arr.length === idx + 1\n                ? { ...styles.th, ...styles.emphasis }\n                : styles.th;\n            return (\n              <th style={thStyle} key={idx}>\n                {columnName}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {pivotData.map((row, rowIdx) => {\n          return row ? (\n            <tr key={rowIdx}>\n              <td style={styles.th} key={`${rowsLabel}${rowIdx}`}>\n                {rowsLabel[rowIdx] ? rowsLabel[rowIdx].trim() : ''}\n              </td>\n              {row.map((columnItem, colIdx, arr) => {\n                const tdStyle = ((index) => {\n                  if (arr.length === index + 1)\n                    return { ...styles.td, ...styles.emphasis };\n                  else {\n                    return styles.td;\n                  }\n                })(colIdx);\n                return (\n                  <td style={tdStyle} key={`${columnItem}${colIdx}`}>\n                    {columnItem ? columnItem.trim() : ''}\n                  </td>\n                );\n              })}\n            </tr>\n          ) : (\n            ''\n          );\n        })}\n      </tbody>\n    </table>\n  ) : (\n    ''\n  );\n}\n\nPivotTable.propTypes = {\n  tableData: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ViewText from './ViewText';\nimport PivotTable from './PivotTable';\n\nexport default function ViewSet({ id, inputData }) {\n  const { preText, tableData, postText } = inputData;\n  return (\n    <div id={id}>\n      <ViewText data={preText}></ViewText>\n      {tableData && <PivotTable tableData={tableData}></PivotTable>}\n      <ViewText data={postText}></ViewText>\n    </div>\n  );\n}\n\nViewSet.propTypes = {\n  id: PropTypes.string.isRequired,\n  inputData: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\n\nfunction clickButton(e, targetId) {\n  e.preventDefault();\n  // console.log(targetId)\n  copyToClip(document.getElementById(targetId));\n}\n\nfunction copyToClip(str) {\n  if (!str) {\n    alert('empty data!');\n    return;\n  }\n  function listener(e) {\n    e.clipboardData.setData('text/html', str.innerHTML);\n    e.clipboardData.setData('text/plain', str.innerHTML);\n    // console.log(e.clipboardData.__proto__);\n    // e.clipboardData.style(\"cssText\", \"color: blue;\")\n    e.preventDefault();\n  }\n  // div.innerHTML = \"your div content\";\n  // div.style.cssText = document.defaultView.getComputedStyle(p, \"\").cssText;\n\n  document.addEventListener('copy', listener);\n  document.execCommand('copy');\n  document.removeEventListener('copy', listener);\n}\n\nexport default function CopyButton({ targetId }) {\n  return (\n    <Button onClick={(e) => clickButton(e, targetId)} variant=\"outlined\">\n      COPY\n    </Button>\n  );\n}\n\nCopyButton.propTypes = {\n  targetId: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ViewText from './ViewText';\nimport { useSelector } from 'react-redux';\n\nfunction Receiver({ keyId }) {\n  const receiver = useSelector(({ basicInfo }) => basicInfo.receiver);\n  const receiverList = receiver[keyId] || [];\n  return <ViewText data={receiverList.join(', ')}></ViewText>;\n}\nReceiver.propTypes = {\n  keyId: PropTypes.string.isRequired,\n};\n\nexport default React.memo(Receiver);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewSet from './ViewSet';\nimport CopyButton from './CopyButton';\nimport Receiver from './Receiver';\nimport ViewText from './ViewText';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 5,\n    textAlign: 'right',\n    color: 'black',\n    fontSize: '10pt',\n    fontFamily: '맑은 고딕',\n  },\n  disabledPaper: {\n    color: 'gray',\n  },\n}));\n\nfunction ViewContents() {\n  const classes = useStyles();\n  const dataList = useSelector((store) => store.contents.result);\n\n  return (\n    // dataList &&\n    dataList.map((data, idx) => {\n      return data ? (\n        <Paper\n          className={classNames(classes.paper, {\n            [classes.disabledPaper]: !data.shouldSend,\n          })}\n          key={idx}\n        >\n          <ViewText data={data.emailId}></ViewText>\n          <Receiver keyId={data.emailId}></Receiver>\n          <CopyButton targetId={`contents${idx + 1}`}></CopyButton>\n          <ViewSet id={`contents${idx + 1}`} inputData={data}></ViewSet>\n        </Paper>\n      ) : (\n        ''\n      );\n    })\n  );\n}\n\nexport default ViewContents;\n","export default {\n  //emails\n  email: `Dave, Dave@hello.word\nRoberto, Roberto@hello.word\nClaude, Claude@ccc.word\nGlen, Glen@hello.word\nLuwis, Luwis@hello.word\nAidan, Aidan@hello.word\nkakao, kakao@hello.word\nBlake, Blake@aaa.bbb\nLiam, Liam@bbbbb.com\nMilton, Milton@kkkk.bbb\nJorge, JJorge@aaa.bbb`,\n\n  //equipment infos\n  equip_info_columns: `ID, 치킨팀, 피자팀, 닭도리탕팀`,\n  equip_info_data: `MBA310, Dave, Roberto, Luwis\nMBAB10, Jorge, Claude, Glen\nMBAB20, kakao, Blake, Aidan`,\n\n  //schema\n  pre_text: `[BMP] __Req No.__ / __Discipline__ - VP Out pending 현황 송부의 件\n수신 : 수신자 제위\n발신 : Maisy 대리 / 장치 공정관리\n\n안녕하세요.\n업무에 노고가 많으십니다.\nBMP 프로젝트 '__Req No.__ / __Discipline__ - __Supplier__' 관련 VP OUT pending 현황 송부 드립니다.\n\n<VP OUT pending 현황>`,\n  table_columns_label: '구분, 2월 1주, 2월 2주, 2월 3주',\n  table_columns_hide: '장치',\n  table_rows_label: '설계, 공정관리, 조달검사, PE, QA/QC, 발주처 대기, Total',\n  post_text: `첨부파일 확인 후, 지연 중인 문건들에 대한 검토 및 VP IOC 부탁드립니다.\n\n발주처 Comment 대기 문서(노란색으로 표시된 문서)에 대해서는 발주처 Comment 접수 후 빠른 VP IOC 진행 부탁 드립니다.\n\n문의사항 있으시면 연락 부탁 드립니다.\n감사합니다.`,\n\n  //data\n  source_variables: `Req No., Discipline, Supplier`,\n  source_data: `MBA310,HYDROGEN PLANT STEAM REFORMER,TECHNIP FMC\nMBAB10,SRU REACTION FURNACE-WASTE HEAT BOILER AND STEAM DRUM,ZEECO\nMBAB20,INCINERATOR PACKAGE,ZEECO`,\n  table_data_rows1: '조달검사, PE, 발주처 대기, 공정관리, Total',\n  table_data_week1: `MBA310, MBAB20, MDA110\n4,5,0\n1,6,1\n3,0,2\n5,1,2\n0,0,4`,\n  table_data_rows2: '발주처 대기, PE, 공정관리, Total',\n  table_data_week2: `MBA310, MBAB10, MCA110, MDA110\n5,1,1,2\n1,2,1,1\n2,1,0,1\n3,0,1,0`,\n  table_data_rows3: 'QA/QC, PE, 발주처 대기, 공정관리, Total',\n  table_data_week3: `MBA310, MDA110, MEA120\n8,6,1\n1,0,0\n0,0,0\n1,1,1\n0,0,3`,\n};\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport Sample from '../../resource/sample';\nimport { splitCommaWithTrim } from '../../utils/string';\n\nconst IMPORT_CONTENTS_DATA = 'data/IMPORT_CONTENTS_DATA';\nconst EXPORT_CONTENTS_DATA = 'data/EXPORT_CONTENTS_DATA';\n\nconst PARSE_DATA = 'PARSE_DATA';\n\n// **** 액션 생섬함수 정의\nexport const ContentsActions = {\n  importContentsData: createAction(IMPORT_CONTENTS_DATA, (data) => data),\n  exportContentsData: createAction(EXPORT_CONTENTS_DATA, (data) => data),\n\n  parseData: createAction(PARSE_DATA),\n};\n\nconst initialState = {\n  //schema\n  preTextSchema: Sample.pre_text,\n  postTextSchema: Sample.post_text,\n  tableColumnsLabel: Sample.table_columns_label,\n  tableRowsLabel: Sample.table_rows_label,\n\n  //data\n  variables: Sample.source_variables,\n  textData: Sample.source_data,\n\n  tableSetList: [\n    {\n      id: 0,\n      defaultData: Sample.table_data_week1,\n      defaultRows: Sample.table_data_rows1,\n    },\n    {\n      id: 1,\n      defaultData: Sample.table_data_week2,\n      defaultRows: Sample.table_data_rows2,\n    },\n    {\n      id: 2,\n      defaultData: Sample.table_data_week3,\n      defaultRows: Sample.table_data_rows3,\n    },\n  ],\n\n  //result\n  result: [],\n\n  fileData: {},\n};\n\nconst parseVariable = (template, variables, row) => {\n  const data = row.split(',');\n  if (!template || data.length === 0) {\n    return 'error';\n  }\n  let rst = template;\n  // console.log(template);\n  variables.forEach((variable, idx) => {\n    var regex = new RegExp(`__${variable.trim() || ''}__`, 'g');\n    if (rst) {\n      rst = rst.replace(regex, data[idx].trim());\n    }\n  });\n  return rst;\n};\n\nconst findRowIndexPerWeek = (templateRowsLabel, dataRowsLabel) => {\n  if (!Array.isArray(dataRowsLabel)) {\n    console.warn('data rows label is empty', dataRowsLabel);\n    return templateRowsLabel;\n  }\n  return dataRowsLabel.map((weekColumnList) =>\n    templateRowsLabel.map((row) =>\n      splitCommaWithTrim(weekColumnList).indexOf(row),\n    ),\n  );\n};\n\n/**\n {\n  \"MBA310\": {\n    \"week1\": [\n      \"4\",\n      \"1\",\n      \"3\",\n      \"5\",\n      \"0\"\n    ],\n    \"week2\": [\n      \"5\",\n      \"1\",\n      \"2\",\n      \"3\"\n    ],\n    \"week3\": [\n      \"8\",\n      \"1\",\n      \"0\",\n      \"1\",\n      \"0\"\n    ]\n  },\n  \"MBAB20\": {\n    \"week1\": [\n      \"5\",\n      \"6\",\n      \"0\",\n      \"1\",\n      \"0\"\n    ]\n  },\n}\n */\nconst getTableDataPerMachine = (tableSetList) => {\n  let lastWeekKey;\n\n  const tableDataPerKey = tableSetList\n    .map((tableSet) => tableSet.defaultData)\n    .filter((data) => data && typeof data === 'string')\n    .reduce((dataPerKey, nextData, weekIdx) => {\n      const rows = nextData.split('\\n');\n      // first line is machine_ID list.\n      // MBA310, MBA311, ..\n      let machineList; // = splitWithTrim(rows[0]);\n      const weekKey = `week${weekIdx + 1}`;\n      lastWeekKey = `week${tableSetList.length}`;\n\n      const machineData = rows.reduce((result, row, rowIdx) => {\n        if (rowIdx === 0) {\n          machineList = splitCommaWithTrim(row);\n          machineList.forEach((machineId) => {\n            result[machineId] = {\n              [weekKey]: [],\n            };\n          });\n        } else {\n          splitCommaWithTrim(row).forEach((col, colIdx) => {\n            const machineId = machineList[colIdx];\n            result[machineId][weekKey].push(col);\n          });\n        }\n        return result;\n      }, {});\n\n      machineList.forEach((machineID) => {\n        dataPerKey[machineID] = {\n          ...dataPerKey[machineID],\n          ...machineData[machineID],\n        };\n      });\n\n      return dataPerKey;\n    }, {});\n\n  //마지막 week에 machine id가 없을 경우 false (disable)\n  const shouldSendMailMap = Object.keys(tableDataPerKey).reduce(\n    (result, machineId) => {\n      result[machineId] = Boolean(tableDataPerKey[machineId][lastWeekKey]);\n      return result;\n    },\n    {},\n  );\n\n  return { shouldSendMailMap, tableDataPerKey };\n};\n\nexport default handleActions(\n  {\n    [IMPORT_CONTENTS_DATA]: (state, action) => {\n      const data = action.payload;\n      return produce(state, (draft) => {\n        const {\n          pre_text,\n          post_text,\n          table_columns_label,\n          table_rows_label,\n          source_variables,\n          source_data,\n        } = data;\n\n        Object.assign(draft, {\n          preTextSchema: pre_text,\n          postTextSchema: post_text,\n          tableColumnsLabel: table_columns_label,\n          tableRowsLabel: table_rows_label,\n          variables: source_variables,\n          textData: source_data,\n          tableSetList: ((inputData) => {\n            if (inputData.table_data_rows1) {\n              return [\n                {\n                  id: 0,\n                  defaultData: inputData.table_data_week1,\n                  defaultRows: inputData.table_data_rows1.join(','),\n                },\n                {\n                  id: 1,\n                  defaultData: inputData.table_data_week2,\n                  defaultRows: inputData.table_data_rows2.join(','),\n                },\n                {\n                  id: 2,\n                  defaultData: inputData.table_data_week3,\n                  defaultRows: inputData.table_data_rows3.join(','),\n                },\n              ];\n            } else if (inputData.table_data_set) {\n              return inputData.table_data_set;\n            } else {\n              return [];\n            }\n          })(data),\n        });\n      });\n    },\n    [EXPORT_CONTENTS_DATA]: (state) =>\n      produce(state, (draft) => {\n        draft.fileData = {\n          pre_text: draft.preTextSchema,\n          post_text: draft.postTextSchema,\n          table_columns_label: draft.tableColumnsLabel,\n          table_rows_label: draft.tableRowsLabel,\n          source_variables: draft.variables,\n          source_data: draft.textData,\n          table_data_set: draft.tableSetList,\n        };\n      }),\n\n    [PARSE_DATA]: (state, action) => {\n      const inputData = action.payload;\n      const {\n        //template\n        preTextSchema,\n        // table,\n        tableColumnsLabel,\n        tableRowsLabel,\n\n        postTextSchema,\n        //source\n        variables = '',\n        textData = '',\n        tableSetList = [],\n      } = { ...state, ...inputData };\n\n      const tableDataRows = tableSetList.map((data) => data.defaultRows);\n\n      const tableRowIndexPerWeek = findRowIndexPerWeek(\n        splitCommaWithTrim(tableRowsLabel),\n        tableDataRows,\n      );\n\n      const { shouldSendMailMap, tableDataPerKey } = getTableDataPerMachine(\n        tableSetList,\n      );\n\n      const variableList = variables.split(',');\n      const textDataList = textData.split('\\n');\n\n      // console.log(tableDataPerKey);\n\n      const getEmailId = (dataRow = '') => {\n        return dataRow.split(',')[0];\n      };\n\n      return produce(state, (draft) => {\n        draft.tableSetList = tableSetList;\n        // use in pivot\n        draft.tableRowsLabel = tableRowsLabel;\n        draft.tableColumnsLabel = tableColumnsLabel;\n        draft.tableRowIndexPerWeek = tableRowIndexPerWeek;\n\n        draft.result = textDataList.map((data, idx) => {\n          const mailKey = textDataList[idx].split(',')[0];\n          return {\n            shouldSend: Boolean(shouldSendMailMap[mailKey]),\n            emailId: getEmailId(data), //machine ID\n            preText: parseVariable(preTextSchema, variableList, data),\n            postText: parseVariable(postTextSchema, variableList, data),\n            tableData: tableDataPerKey[mailKey],\n          };\n        });\n      });\n    },\n  },\n  initialState,\n);\n","import Sample from '../../resource/sample';\nimport { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { splitCommaWithTrim } from '../../utils/string';\n\nconst GET_RECEIVER = 'static/GET_RECEIVER';\nconst IMPORT_EMAIL_DATA = 'static/IMPORT_EMAIL_DATA';\nconst EXPORT_EMAIL_DATA = 'static/EXPORT_EMAIL_DATA';\n\nexport const StaticActions = {\n  getReceiver: createAction(GET_RECEIVER),\n  importEmailData: createAction(IMPORT_EMAIL_DATA),\n  exportEmailData: createAction(EXPORT_EMAIL_DATA),\n};\n\nconst initialState = {\n  userEmails: Sample.email,\n  equipColumns: Sample.equip_info_columns,\n  equipInfos: Sample.equip_info_data,\n  receiver: {},\n  fileData: {},\n};\n\n//reducer: action, state를 받아서 새로운 상태를 리턴하는 애\nexport default handleActions(\n  {\n    [IMPORT_EMAIL_DATA]: (state, action) => {\n      const data = action.payload;\n      return produce(state, (draft) => {\n        draft.userEmails = data.email;\n        draft.equipInfos = data.equip_info_data;\n        draft.equipColumns = data.equip_info_columns;\n      });\n    },\n    [EXPORT_EMAIL_DATA]: (state, action) =>\n      produce(state, (draft) => {\n        draft.fileData = {\n          email: draft.userEmails,\n          equip_info_data: draft.equipInfos,\n          equip_info_columns: draft.equipColumns,\n        };\n      }),\n\n    [GET_RECEIVER]: (state, action) => {\n      const {\n        equipInfos = state.equipInfos,\n        userEmails = state.userEmails,\n      } = action.payload;\n\n      const userMailMap = userEmails.split('\\n').reduce((resultMap, data) => {\n        const userInfo = splitCommaWithTrim(data);\n        resultMap[userInfo[0]] = userInfo[1];\n        return resultMap;\n      }, {});\n\n      const receiver = equipInfos.split('\\n').reduce((resultMap, info) => {\n        const [equipId, ...owners] = splitCommaWithTrim(info);\n        resultMap[equipId] = owners.map((name) => userMailMap[name] || '');\n        return resultMap;\n      }, {});\n\n      return {\n        ...state,\n        receiver,\n      };\n    },\n  },\n  initialState,\n);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ContentsActions } from '../store/modules/contents';\nimport { StaticActions } from '../store/modules/basicInfos';\n\nconst useStyle = makeStyles({\n  root: {\n    minWidth: 'unset',\n    width: '100%',\n    height: '100%',\n    // color: \"#f0f0f0\"\n    color: 'black',\n  },\n});\n\nfunction RunButton({ inputData: { equipInfos, userEmails, ...data } }) {\n  const classes = useStyle();\n  const dispatch = useDispatch();\n\n  return (\n    <Button\n      className={classes.root}\n      variant=\"contained\"\n      // color=\"primary\"\n      onClick={() => {\n        dispatch(StaticActions.getReceiver({ equipInfos, userEmails }));\n        dispatch(ContentsActions.parseData(data));\n      }}\n    >\n      >>\n    </Button>\n  );\n}\n\nexport default RunButton;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { ContentsActions } from '../store/modules/contents';\nimport { StaticActions } from '../store/modules/basicInfos';\nimport { loadJsonFile } from '../utils/file';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  input: {\n    display: 'none',\n  },\n  button: {\n    width: 'auto',\n    marginRight: 8,\n  },\n}));\n\nfunction ImportButton({ label = 'Import' }) {\n  const dispatch = useDispatch();\n  const importActions = (data) => {\n    dispatch(StaticActions.importEmailData(data));\n    dispatch(ContentsActions.importContentsData(data));\n  };\n\n  const classes = useStyles();\n  const [fileName, setFileName] = useState('');\n  const handelSelectedFile = (e) => {\n    const fileList = e.target.files;\n    if (fileList.length > 0) {\n      setFileName(fileList[0].name);\n      loadJsonFile(e, importActions);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <input\n        type=\"file\"\n        accept=\".json\"\n        id=\"contained-button-file\"\n        className={classes.input}\n        onChange={handelSelectedFile}\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          component=\"span\"\n          className={classes.button}\n        >\n          {label}\n        </Button>\n      </label>\n      <Typography>{fileName}</Typography>\n    </div>\n  );\n}\n\nexport default React.memo(ImportButton);\n","export function saveFile(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport function loadJsonFile(evt, callBack) {\n  var files = evt.target.files;\n\n  var reader = new FileReader();\n  const f = files[0];\n\n  // Closure to capture the file information.\n  reader.onload = function(e) {\n    try {\n      const data = e.target.result;\n      const inputData = JSON.parse(data);\n      callBack(inputData);\n    } catch (e) {\n      //TODO: error dialog\n      console.error(e);\n    }\n  };\n  // Read in the image file as a data URL.\n  reader.readAsText(f);\n}\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContentsActions } from '../store/modules/contents';\nimport { StaticActions } from '../store/modules/basicInfos';\nimport { getFormatDate } from '../utils/date';\nimport { saveFile } from '../utils/file';\n\nexport default function ExportButton() {\n  const dispatch = useDispatch();\n  const [save, setSave] = useState(false);\n  const contentsFileData = useSelector((state) => state.contents.fileData);\n  const staticFileData = useSelector((state) => state.basicInfo.fileData);\n\n  const exportActions = () => {\n    dispatch(StaticActions.exportEmailData());\n    dispatch(ContentsActions.exportContentsData());\n    setSave(true);\n  };\n\n  useEffect(() => {\n    if (save) {\n      saveFile(\n        getFormatDate(new Date()) + '.json',\n        JSON.stringify({ ...staticFileData, ...contentsFileData }),\n      );\n      setSave(false);\n    }\n  }, [save, contentsFileData, staticFileData]);\n\n  return (\n    <Button variant=\"outlined\" size=\"small\" onClick={exportActions}>\n      EXPORT\n    </Button>\n  );\n}\n","/**\n *  yyyyMMdd 포맷으로 반환\n *  https://heum-story.tistory.com/27\n */\nexport function getFormatDate(date) {\n  var year = date.getFullYear(); //yyyy\n  var month = 1 + date.getMonth(); //M\n  month = month >= 10 ? month : '0' + month; //month 두자리로 저장\n  var day = date.getDate(); //d\n  day = day >= 10 ? day : '0' + day; //day 두자리로 저장\n  return year + '' + month + '' + day;\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport ImportButton from './ImportButton';\nimport ExportButton from './ExportButton';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 8,\n    borderRadius: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    '& > *': {\n      flexGrow: 1,\n    },\n  },\n  importButton: {\n    width: 200,\n  },\n});\n\nfunction ExternalButtonGroup() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <ImportButton />\n      <ExportButton />\n    </div>\n  );\n}\n\nexport default ExternalButtonGroup;\n","import React, { useState, useCallback } from 'react';\nimport { Grid } from '@material-ui/core';\nimport InputContents from './in/InputContents';\nimport ViewContents from './out/ViewContents';\nimport RunButton from '../components/RunButton';\nimport ExternalButtonGroup from '../components/ExternalButtonGroup';\n// import ErrorChild from '../components/common/ErrorChild';\n\nexport default function Layout() {\n  const [inputData, setInputData] = useState({});\n\n  const setInputCallback = useCallback(\n    (key, value) => {\n      setInputData((state) => ({\n        ...state,\n        [key]: value,\n      }));\n    },\n    [setInputData],\n  );\n  return (\n    <Grid container spacing={3}>\n      {/* <ErrorChild></ErrorChild> */}\n      <Grid item xs={12} sm={12} md={5}>\n        <ExternalButtonGroup />\n        <InputContents setInputData={setInputCallback} />\n      </Grid>\n      <Grid item xs={12} sm={12} md={1}>\n        <RunButton inputData={inputData} />\n      </Grid>\n      <Grid item xs={12} sm={12} md={5}>\n        <ViewContents />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Layout from './section/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout></Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nconst ERROR_TRUE = 'test/ERROR_TRUE';\nconst ERROR_FALSE = 'test/ERROR_FALSE';\n\nexport const setErrorTrue = createAction(ERROR_TRUE);\nexport const setErrorFalse = createAction(ERROR_FALSE);\n\nconst initialState = {\n  error: false,\n};\nexport default handleActions(\n  {\n    [ERROR_TRUE]: (state, action) =>\n      produce(state, draft => {\n        draft.error = true;\n      }),\n    [ERROR_FALSE]: (state, action) =>\n      produce(state, draft => {\n        draft.error = false;\n      }),\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport contentsReducers from './contents';\nimport basicInfoReducers from './basicInfos';\nimport TestReducers from './testAction';\n\nexport default combineReducers({\n  contents: contentsReducers,\n  basicInfo: basicInfoReducers,\n  test: TestReducers,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './modules';\n\n// **** 리덕스 개발자도구 적용\nimport { createLogger } from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst logger = createLogger();\n\n// const store = createStore(modules, applyMiddleware(logger))\n\n// const devTools =\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// const store = createStore(rootReducer, devTools, applyMiddleware(logger))\nconst store = createStore(\n  rootReducer,\n  // localStorage['redux-store'] ? JSON.parse(localStorage['redux-store']) : {},\n  composeWithDevTools(applyMiddleware(logger)),\n);\n\n// const store = createStore(rootReducer);\n/**\nconsole.log(store.getState()); // initial state 값 출력\nconsole.log(store.dispatch); // store에 dispatch({type: GET_LIST}) 와 같이 액션 실행시킬수있다\nconsole.log\n  // 액션이 일어날때 마다 상태를 출력\n  //subscribe(()=>{console.log(store.getState())})\n  // 액션이 일어날때마다 localStorage에 저장\n  // store.subscribe(() => {\n  //   localStorage['redux-store'] = JSON.stringify(store.getState());\n  // })\n  ();\n*/\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}